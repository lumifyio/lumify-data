<?xml version="1.0" ?><page xmlns="http://www.mediawiki.org/xml/export-0.8/" version="0.8">
    <title>In-memory database</title>
    <ns>0</ns>
    <id>1942477</id>
    <revision>
      <id>563114599</id>
      <parentid>563114513</parentid>
      <timestamp>2013-07-06T14:40:29Z</timestamp>
      <contributor>
        <username>Christophe.billiottet</username>
        <id>16345691</id>
      </contributor>
      <minor></minor>
      <comment>correction</comment>
      <text xml:space="preserve">An '''in-memory database''' ('''IMDB'''; also '''main memory database system''' or '''MMDB''' or '''memory resident database''') is a [[database management system]] that primarily relies on [[main memory]] for [[computer data storage]]. It is contrasted with database management systems which employ a [[disk storage]] mechanism. Main memory databases are faster than disk-optimized databases since the internal optimization algorithms are simpler and execute fewer CPU instructions. Accessing data in memory eliminates [[Hard disk drive performance characteristics#Seek_time|seek time]] when querying the data, which provides faster and more predictable performance than disk.&lt;ref name="Definition: in-memory database"&gt;{{cite web|title=Definition: in-memory database|url=http://whatis.techtarget.com/definition/in-memory-database|publisher=WhatIs.com|accessdate=19 January 2013}}&lt;/ref&gt;&lt;ref name="The Rise of In-Memory Databases"&gt;{{cite web|title=The Rise of In-Memory Databases|url=http://slashdot.org/topic/datacenter/the-rise-of-in-memory-databases/|publisher=Slashdot|accessdate=19 January 2013|author=Michael Vizard}}&lt;/ref&gt;

In applications where response time is critical, such as telecommunications network equipment and [[mobile advertising]] networks, main memory databases are often used.&lt;ref&gt;{{cite news |url=http://findarticles.com/p/articles/mi_m0EIN/is_2002_June_24/ai_87694370 |work=Business Wire |title=TeleCommunication Systems Signs up as a Reseller of TimesTen; Mobile Operators and Carriers Gain Real-Time Platform for Location-Based Services |date=2002-06-24}}&lt;/ref&gt; IMDBs have gained a lot of traction, especially in the [[data analytics]] space, starting [[2000s in science and technology|mid-2000s]] mainly due to cheaper [[RAM]].&lt;ref name="Falling RAM Prices Drive In-Memory Database Surge"&gt;{{cite web|title=Falling RAM Prices Drive In-Memory Database Surge|url=http://blogs.sap.com/innovation/big-data/ram-prices-drive-in-memory-surge-020097|publisher=SAP|accessdate=19 January 2013}}&lt;/ref&gt;&lt;ref name="Rise of In-Memory Databases Impacts Wide Range of Jobs"&gt;{{cite news|title=Rise of In-Memory Databases Impacts Wide Range of Jobs|url=http://news.dice.com/2012/05/04/in-memory-database-jobs/|accessdate=19 January 2013|newspaper=Dice.com|date=May 4, 2012}}&lt;/ref&gt;

With the introduction of [[NVDIMM]] technology&lt;ref&gt;Non-Volatile Memory http://www.vikingtechnology.com/nvdimm-technology&lt;/ref&gt;
, in-memory databases will now be able to run at full speed and maintain data in the event of power failure.&lt;ref&gt;Whole-system Persistence with Non-volatile Memories http://research.microsoft.com/apps/pubs/default.aspx?id=160853&lt;/ref&gt;&lt;ref&gt;The Bleak Future of NAND Flash Memory http://research.microsoft.com/apps/pubs/default.aspx?id=162804&lt;/ref&gt;
==ACID support==
{{See also|Atomicity, consistency, isolation, durability}}

In their simplest form, main memory databases store data on [[volatile memory]] devices. These devices lose all stored information when the device loses power or is reset. In this case, MMDBs can be said to lack support for the durability portion of the [[ACID]] (atomicity, consistency, isolation, durability) properties. Volatile memory-based MMDBs can, and often do, support the other three ACID properties of atomicity, consistency and isolation. However, since [[NVDIMM|Non-Volatile DIMMs]] ([[NVDIMM]]) have become available, most future IMDB or MMDB installations will indeed have the durability to meet full ACID support.

Many MMDBs have added durability via the following mechanisms:
* [[snapshot (computer storage)|Snapshot]] files, or, [[transaction checkpoint#Recovery process|checkpoint]] images, which record the state of the database at a given moment in time. These are typically generated periodically, or, at least when the MMDB does a controlled shut-down. While they give a measure of persistence to the data (in that not everything is lost in the case of a system crash) they only offer partial durability (as 'recent' changes will be lost). For full durability, they will need to be supplemented by one of the following:
* [[Transaction log]]ging, which records changes to the database in a journal file and facilitates automatic recovery of an in-memory database.

* Non-Volatile DIMM ([[NVDIMM]]), a memory module that has a DRAM interface, often combined with NAND flash for the Non-Volatile data security. The first NVDIMM solutions were designed with [[supercapacitors]] instead of batteries for the backup power source. With this storage, MMDB or IMDB can resume securely from its state upon reboot.
* [[Non-volatile random access memory]] (NVRAM), usually in the form of static RAM backed up with battery power (battery RAM), or an electrically erasable programmable ROM ([[EEPROM]]). With this storage, the MMDB system can recover the data store from its last consistent state upon reboot.
* [[High availability]] implementations that rely on database [[replication (computer science)|replication]], with automatic [[failover]] to an identical standby database in the event of primary database failure. To protect against loss of data in the case of a complete system crash, replication of a MMDB is normally used in conjunction with one or more of the mechanisms listed above.

Some MMDBs allow the database schema to specify different durability requirements for selected areas of the database - thus, faster-changing data that can easily be regenerated or that has no meaning after a system shut-down would not need to be journaled for durability (though it would have to be replicated for high availability), whereas configuration information would be flagged as needing preservation.

==Hybrids with on-disk databases==
The first [[database engine]] to support both in-memory and on-disk tables in a single database was [[WebDNA]]: it was released in 1995. The advantage to this approach is flexibility: the developer can strike a balance between performance (which is enhanced by sorting, storing and retrieving specified data entirely in memory, rather than going to disk); cost, because a less costly hard disk can be substituted for more memory; [[persistence (computer science)|persistence]]; and form factor, because RAM chips cannot approach the [[memory storage density|density]] of a small hard drive.

Manufacturing efficiency is another reason a combined in-memory/on-disk database system may be chosen. Some device product lines, especially in [[consumer electronics]], include some units with permanent storage, and others that rely on memory for storage ([[set-top box]]es, for example). If such devices require a database system, a manufacturer can adopt a hybrid database system at lower and ''upper'' cost, and with less code customization, than using separate in-memory and on-disk databases, respectively, for its disk-less and disk-based products.

== Storage memory ==
Another variation is to have large amounts of nonvolatile memory in the server. For example Flash memory chips as addressable memory rather than structured as disk arrays. A database in this form of memory combines very fast access speed with persistence over reboots and power losses.&lt;ref&gt;[http://www.theregister.co.uk/2013/01/30/storage_glory_days/ "Truly these are the GOLDEN YEARS of Storage."]&lt;/ref&gt;

==Products==

{|class="wikitable sortable"
|-
!Name
!Developer
!License
!Description/Notes
|-
|[[MemSQL]]
|MemSQL, Inc.
|Proprietary
|SQL relational
|-
|EXASolution
|[[EXASOL]]
|Proprietary
|Relational (SQL, ODBC, JDBC, ADO.NET), multi-dimensional (MDX, XMLA); EXASOL leads the well-respected international [[TPC]]-H benchmark&lt;ref&gt;http://www.tpc.org/tpch/default.asp&lt;/ref&gt;, since 2008, in the datavolume-based categories 100GB, 300GB, 1TB, 3TB, and 10TB; EXASolution architecture: shared-nothing, column-store, in-memory database
|-
|[[WebDNA]]
|WebDNA Software Corporation
|Freeware
|Robust hybrid in-memory database system and scripting language designed for the World Wide Web. Resilience is provided by both in-memory and on-disk tables in a single database.
|-
|Oracle Exalytics
|[[Oracle Corporation]]
|Proprietary
|Appliance
|-
|[[H2 (DBMS)]]
|[[Thomas Mueller]]
|Mozilla Public License or Eclipse Public License
|For Java
|-
|[[Oracle Coherence]]
|[[Oracle Corporation]]
|Proprietary with developer download
|For Java, relational, distributed
|-
|[[Hazelcast]]
|Hazelcast Team
|Open source (Apache License 2.0)
|For Java, [[NoSQL]], distributed
|-
|[[SAP HANA]]
|[[SAP AG]]
|Proprietary
|
|-
|[[Datablitz]] (formerly Dali)
|[[Bell Labs]] ([[Alcatel-Lucent]])
|Proprietary
|Dali prototype was developed for in-house Bell Labs needs
|-
|[[Polyhedra DBMS|Polyhedra]]
|[[ENEA AB]] (previously [[Perihelion Software]])
|Proprietary, with a free to use edition (Polyhedra Lite)
|Relational (SQL, ODBC, JDBC) in-memory database system originally developed for use in [[SCADA]] and embedded systems, but used in a variety of other applications including financial systems. Supports data durability via snapshots and journal logging, and high availability via a hot-standby. First release was in 1993; 8.7 released in March 2013.&lt;ref&gt;{{Citation | url = http://www.enea.com/Corporate/Press/Press-releases/Press-release/?item=761790 | series = Press Release| publisher = Enea AB | number = 8.7 | title = Enea Adds Fine-Grain Locking and Cascaded Deletes to the World's Best Relational In-Memory Database Server }}.&lt;/ref&gt; Polyhedra Lite was released under a free-to-use license in 2012.&lt;ref&gt;{{Citation | url = http://uk.reuters.com/article/2012/10/11/idUS116078+11-Oct-2012+BW20121011 | series = Press Release | publisher = Reuters  | title = Polyhedra Lite In-Memory Relational Database System Freeware Available Now from Enea }}.&lt;/ref&gt;
|-
|Kognitio Analytical Platform
|Kognitio, Limited
|Proprietary
|Development of an in-memory database, specialized for analytical workloads was started at [[White Cross Systems, Limited]] in 1988. The first beta release of that system was in 1989.  It was based on the [[Transputer|INMOS Transputer]].  The first full production release was offered in 1992.  White Cross merged in 2005 with Kognitio, Limited in the United Kingdom and is currently marketing version 8 of the same code base as the "Kognitio Analytical Platform".
|-
|[[Ehcache]]
|[[Terracotta, Inc.]] ([[Software AG]])
|Open source (Apache License)
|For Java, distributed
|-
|[[TimesTen]]
|[[Oracle Corporation]]
|Proprietary
|Standalone database or in-memory cache for [[Oracle Database]]
|-
|[[ALTIBASE HDB]]
|[[Altibase]] Corporation
|Proprietary
|"Hybrid DBMS" that combines an in-memory database with a conventional disk-resident database
|-
|[[Microsoft COM+ IMDB]]
|[[Microsoft Corporation]]
|Proprietary
|Defunct
|-
|[[eXtremeDB]]
|McObject LLC
|Proprietary
|Variety of editions
|-
|[[solidDB]]
|[[IBM]]
|Proprietary
|Relational
|-
|[[VoltDB]]
|VoltDB Inc.
|Open source (GPL) / Proprietary
|Relational; implements [[H-Store]] design 
|-
|[[BigMemory]]
|[[Terracotta, Inc.]] ([[Software AG]])
|Proprietary (free editions)
|
|-
|[[Xeround]]
|Xeround Inc.
|Proprietary/Not for sale, service only
|[[Cloud database]]
|-
|SQLFire
|[[VMware]]
|Proprietary
|Relational, distributed, [[NewSQL]]
|-
|ActiveSpaces
|[[TIBCO Software]]
|Proprietary with developer download
|For Java/.Net./C, distributed, hybrid, event enabled, [[NewSQL]]
|
|-
|[[Microsoft SQL Server]]
|[[Microsoft]]
|Proprietary
|SQL Server 2012 contains an in-memory technology called xVelocity column store indexes targeted for data warehouse workload. The recently announced SQL Server 2014 will contain a in-memory technology with the code name Hekaton targeted for OLTP type workloads.
|
|-
|[http://unqlite.org UnQLite] Embedded Database
|Symisc Systems
|[[BSD]], SPL
|UnQLite has support for in-memory databases as well on-disk databases using the [http://unqlite.org/c_api/unqlite_open.html same API] with pluggable run-time interchangeable storage engines ([[B+tree]], Hash, etc.)
|}

Many DBMS support in-memory-only [[storage engine]]s, including:
* [[MySQL]]
* [[Adaptive Server Enterprise]]
* [[Raima]]

==See also==
* [[Distributed data store]]
* [[Embedded database]]s
* [[NoSQL]]
* [[NewSQL]]
* [[Comparison of relational database management systems]]

==References==
{{Reflist|colwidth=30em}}
* {{cite book|author=Jack Belzer|title=''Encyclopedia of Computer Science and Technology'' - Volume 14: Very Large Data Base Systems to Zero-Memory and Markov Information Source|publisher=Marcel Dekker Inc|ISBN=0-8247-2214-0}}

==External links==
* [http://www.mcobject.com/in_memory_database In-Memory Database Systems Questions and Answers]
* [http://www.benstopford.com/2011/08/14/distributed-storage-phase-change-memory-and-the-rebirth-of-the-in-memory-database/ The Rebirth of the In-Memory Database]


[[Category:Database management systems]]</text>
      <sha1>h2tqo6sl6gedm94ju4al87xww7y5ue8</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>