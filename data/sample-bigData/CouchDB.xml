<?xml version="1.0" ?><page xmlns="http://www.mediawiki.org/xml/export-0.8/" version="0.8">
    <title>CouchDB</title>
    <ns>0</ns>
    <id>13427539</id>
    <revision>
      <id>558340142</id>
      <parentid>555998381</parentid>
      <timestamp>2013-06-04T20:13:22Z</timestamp>
      <contributor>
        <username>Ewolff42</username>
        <id>19133260</id>
      </contributor>
      <text xml:space="preserve">{{Infobox software
| name                   = Apache CouchDB
| logo                   = 
| screenshot             = [[File:Couchdb screenshot.png|300px]]
| caption                = CouchDB's Futon Administration Interface, User database
| collapsible            =
| author                 = Damien Katz, Jan Lehnardt, Noah Slater, Christopher Lenz, J. Chris Anderson, Paul Davis, Adam Kocoloski, Jason Davies, Benoît Chesneau, Filipe Manana, Robert Newson
| developer              = [[Apache Software Foundation]]
| status                 = Active
| released               = 2005
| frequently updated- Release version update? Don't edit this page, just click on the version number! --&gt;
| programming language   = [[Erlang (programming language)|Erlang]]
| operating system       = [[Cross-platform]]
| latest release version = 1.3.0
| latest release date    = {{release date|2013|04|09}} &lt;!-- {{Start date and age|YYYY|MM|DD|df=yes/no}} --&gt;
| latest preview version = 
| latest preview date    = 
| language               = 
| genre                  = [[Document-oriented database]]
| license                = [[Apache License]]
| website                = {{URL|http://couchdb.apache.org/}}
}}

'''Apache CouchDB''', commonly referred to as '''CouchDB''', is an [[Open-source software|open source]] database that focuses on ease of use and on being "a database that completely embraces the web".&lt;ref name="official-website"&gt;{{cite web|last=Apache Software Foundation|title=Apache CouchDB|url=http://couchdb.apache.org/|accessdate=15 April 2012}}&lt;/ref&gt; It is a [[NoSQL]] database that uses [[JSON]] to store data, [[JavaScript]] as its query language using [[MapReduce]] and [[HTTP]] for an [[API]].&lt;ref name=official-website/&gt;  One of its distinguishing features is [[multi-master replication]]. CouchDB was first released in 2005 and later became an [[Apache Software Foundation|Apache]] project in 2008.

Unlike in a [[relational database]], CouchDB does not store data and relationships in tables. Instead, each database is a collection of independent documents. Each document maintains its own data and self-contained schema. An application may access multiple databases, such as one stored on a user's mobile phone and another on a server. Document metadata contains revision information, making it possible to merge any differences that may have occurred while the databases were disconnected.

CouchDB implements a form of Multi-Version Concurrency Control ([[Multiversion concurrency control|MVCC]]) in order to avoid the need to lock the database file during writes. Conflicts are left to the application to resolve. Resolving a conflict generally involves first merging data into one of the documents, then deleting the stale one.&lt;ref&gt;{{cite web|last=Smith|first=Jason|title=What is the CouchDB replication protocol? Is it like Git?|url=http://stackoverflow.com/a/4766398/395287|work=StackOverflow|publisher=Stack Exchange|accessdate=14 April 2012}}&lt;/ref&gt;

Other features include document-level [[ACID]] semantics with [[eventual consistency]], (incremental) [[MapReduce]], and (incremental) replication. Administration is supported with a built-in web application called Futon.

== History ==
'''CouchDB''' (''Couch'' is an acronym for ''cluster of unreliable commodity hardware'')&lt;ref&gt;[http://www.ibm.com/developerworks/opensource/library/os-couchdb/index.html Exploring CouchDB], article from IBM Developer Works&lt;/ref&gt;  is a project created in April 2005 by [[Damien Katz]], former [[Lotus Notes]] developer at [[IBM]].  Damien Katz defined it as a "storage system for a large scale object database". His objectives for the database were to become the database of the Internet and that it would be designed from the ground up to serve web applications. He self-funded the project for almost two years and released it as an open source project under the [[GNU General Public License]].

In February 2008, it became an [[Apache Incubator]] project and the license was changed to the [[Apache License]].&lt;ref&gt;[http://mail-archives.apache.org/mod_mbox/incubator-general/200802.mbox/%3c3d4032300802121136p361b52ceyfc0f3b0ad81a1793@mail.gmail.com%3e Apache mailing list announcement] on mail-archives.apache.org&lt;/ref&gt; A few months after, it graduated to a top-level project.&lt;ref&gt;[http://mail-archives.apache.org/mod_mbox/incubator-couchdb-dev/200811.mbox/%3c3F352A54-5FC8-4CB0-8A6B-7D3446F07462@jaguNET.com%3e Re: Proposed Resolution: Establish CouchDB TLP] on mail-archives.apache.org&lt;/ref&gt; This led to the first stable version being released in July 2010.&lt;ref&gt;[http://www.pcworld.com/businesscenter/article/201046/couchdb_nosql_database_ready_for_production_use.html "CouchDB NoSQL Database Ready for Production Use"], article from PC World of Jully 2010&lt;/ref&gt;

In early 2012, Damien Katz left the project to focus on [[Couchbase Server]].&lt;ref&gt;{{cite web|last=Katz|first=Damien|title=The future of CouchDB|url=http://damienkatz.net/2012/01/the_future_of_couchdb.html|accessdate=15 April 2012}}&lt;/ref&gt; The project has continued, releasing 1.2 in April 2012 and 1.3 in April 2013.

== Main features ==
; Document Storage
: CouchDB stores data as "documents", as one or more field/value pairs expressed as [[JSON]]. Field values can be simple things like strings, numbers, or dates; but [[Array data structure|ordered lists]] and [[associative array]]s can also be used. Every document in a CouchDB database has a unique id and there is no required document schema.
; ACID Semantics
: CouchDB provides [[atomicity, consistency, isolation, durability|ACID]] semantics.&lt;ref name="ACID"&gt;[http://couchdb.apache.org/docs/overview.html CoachDB, Technical Overview]&lt;/ref&gt; It does this by implementing a form of [[Multi-Version Concurrency Control]], meaning that CouchDB can handle a high volume of concurrent readers and writers without conflict.
; Map/Reduce Views and Indexes
: The stored data is structured using views. In CouchDB, each view is constructed by a [[JavaScript]] function that acts as the Map half of a [[map (higher-order function)|map]]/reduce operation. The function takes a document and transforms it into a single value which it returns. CouchDB can index views and keep those indexes updated as documents are added, removed, or updated.
; Distributed Architecture with Replication
: CouchDB was designed with bi-direction replication (or synchronization) and off-line operation in mind. That means multiple replicas can have their own copies of the same data, modify it, and then sync those changes at a later time.
; REST API
: All items have a unique URI that gets exposed via HTTP. [[REST]] uses the [[Hypertext Transfer Protocol#Request methods|HTTP methods]] POST, GET, PUT and DELETE for the four basic [[Create, read, update and delete|CRUD]] (Create, Read, Update, Delete) operations on all resources.
; Eventual Consistency
: CouchDB guarantees [[eventual consistency]] to be able to provide both availability and partition tolerance.
; Built for Offline
: CouchDB can replicate to devices (like smartphones) that can go offline and handle data sync for you when the device is back online.

CouchDB also offers a built-in administration interface accessible via web called Futon.&lt;ref&gt;[http://guide.couchdb.org/draft/tour.html#welcome "Welcome to Futon"] from "CouchDB The Definitive Guide"&lt;/ref&gt;

== Use cases &amp; production deployments ==
Replication and synchronization capabilities of CouchDB make it ideal for using it in mobile devices, where network connection is not guaranteed but the application must keep on working offline.

CouchDB is well suited for applications with accumulating, occasionally changing data, on which pre-defined queries are to be run and where versioning is important (CRM, CMS systems, by example). Master-master replication is an especially interesting feature, allowing easy multi-site deployments.&lt;ref name="Analyse Kristof Kovacs"&gt;[http://kkovacs.eu/cassandra-vs-mongodb-vs-couchdb-vs-redis Cassandra vs MongoDB vs CouchDB vs Redis vs Riak vs HBase comparison] from Kristóf Kovács&lt;/ref&gt;

=== Enterprises who use CouchDB ===

A few examples of enterprises that used or are using CouchDB are:
* [http://www.ubuntu.com/ Ubuntu] began using it in 2009 for its synchronization service "Ubuntu One"&lt;ref&gt;[http://mail-archives.apache.org/mod_mbox/couchdb-dev/200910.mbox/%3C4AD53996.3090104@canonical.com%3E Email from Elliot Murphy (Canonical)] to the CouchDB-Devel list&lt;/ref&gt; but stopped using it in November 2011.&lt;ref&gt;[http://linux.slashdot.org/story/11/11/22/171228/canonical-drops-couchdb-from-ubuntu-one Canonical Drops CouchDB From Ubuntu One (Slashdot)]&lt;/ref&gt;
* The [http://www.bbc.co.uk/ BBC], for its dynamic content platforms&lt;ref&gt;[http://www.erlang-factory.com/conference/London2009/speakers/endafarrell CouchDB at the BBC as a fault tolerant, scalable, multi-data center key-value store]&lt;/ref&gt;
* [http://www.credit-suisse.com Credit Suisse], for internal use at commodities department for their marketplace framework.&lt;ref name="couchdbinthewild"&gt;[http://wiki.apache.org/couchdb/CouchDB_in_the_wild "CouchDB in the wild"] article of the product's web, a list of software projects and websites using CouchDB&lt;/ref&gt;
* [https://www.meebo.com/about/ Meebo], for their social platform (web and applications) - Meebo was acquired by Google and was shut down on July 12, 2012.

For a more comprehensive list of software projects and web sites that use CouchDB, read the [http://wiki.apache.org/couchdb/CouchDB_in_the_wild "CouchDB in the wild"]&lt;ref name="couchdbinthewild" /&gt; article of the project's wiki.

== Data manipulation: documents and views ==
CouchDB manages a collection of [[JSON]] documents. The documents are organised via views. Views are defined with [[aggregate function]]s and filters are computed in parallel, much like [[MapReduce]].

Views are generally stored in the database and their indexes updated continuously. CouchDB supports a view system using external socket servers and a JSON-based protocol.&lt;ref name="Apache, View Server" &gt;[http://wiki.apache.org/couchdb/ViewServer View Server Documentation] on wiki.apache.org&lt;/ref&gt; As a consequence, view servers have been developed in a variety of languages (JavaScript is the default, but there are also PHP, Ruby, Python and Erlang).

=== Accessing data via HTTP ===
Applications interact with CouchDB via HTTP. The following demonstrates a few examples using [[cURL]], a command-line utility. These examples assume that CouchDB is running on [[localhost]] (127.0.0.1) on port 5984.

{| class="wikitable" 
|-
! Action !! Request !! Response
|-
| Accessing server information
|| &lt;syntaxhighlight lang="bash"&gt;curl http://127.0.0.1:5984/&lt;/syntaxhighlight&gt; 
|| &lt;syntaxhighlight lang="javascript"&gt;{
  "couchdb": "Welcome",
  "version":"1.1.0"
}&lt;/syntaxhighlight&gt;
|-
| Creating a database named '''wiki'''
|| &lt;syntaxhighlight lang="bash"&gt;curl -X PUT http://127.0.0.1:5984/wiki&lt;/syntaxhighlight&gt; 
|| &lt;syntaxhighlight lang="javascript"&gt;{"ok": true}&lt;/syntaxhighlight&gt;
|-
| Attempting to create a second database named '''wiki'''
|| &lt;syntaxhighlight lang="bash"&gt;curl -X PUT http://127.0.0.1:5984/wiki&lt;/syntaxhighlight&gt; 
|| &lt;syntaxhighlight lang="javascript" enclose="div"&gt;{
  "error":"file_exists",
  "reason":"The database could not be created, the file already exists."
}&lt;/syntaxhighlight&gt;
|-
|| Retrieve information about the '''wiki''' database
|| &lt;syntaxhighlight lang="bash"&gt;curl http://127.0.0.1:5984/wiki&lt;/syntaxhighlight&gt; 
|| &lt;syntaxhighlight lang="javascript"&gt;{
  "db_name": "wiki",
  "doc_count": 0,
  "doc_del_count": 0,
  "update_seq": 0,
  "purge_seq": 0,
  "compact_running": false,
  "disk_size": 79,
  "instance_start_time": "1272453873691070",
  "disk_format_version": 5
}&lt;/syntaxhighlight&gt;
|-
| Delete the database '''wiki'''
| &lt;syntaxhighlight lang="bash"&gt;curl -X DELETE http://127.0.0.1:5984/wiki&lt;/syntaxhighlight&gt; 
| &lt;syntaxhighlight lang="javascript"&gt;{"ok": true}&lt;/syntaxhighlight&gt;
|-
| Create a document, asking CouchDB to supply a document id
| &lt;syntaxhighlight lang="bash"&gt;curl -X POST -H "Content-Type: application/json" --data \
'{ "text" : "Wikipedia on CouchDB", "rating": 5 }' \
http://127.0.0.1:5984/wiki
&lt;/syntaxhighlight&gt;
| &lt;syntaxhighlight lang="javascript"&gt;{
  "ok": true,
  "id": "123BAC",
  "rev": "946B7D1C"
}&lt;/syntaxhighlight&gt;
|}

==Open source components==
CouchDB includes a number of other open source projects as part of its default package.
{| class="wikitable sortable" width = "100%"
! Component
! Description
! License
|-
| [[SpiderMonkey (JavaScript engine)|SpiderMonkey]]
| SpiderMonkey is a code name for the first ever [[JavaScript engine]], written by [[Brendan Eich]] at [[Netscape Communications Corporation|Netscape Communications]], later released as open source and now maintained by the [[Mozilla Foundation]].
| [[Mozilla Public License|MPL]]
|-
| [[jQuery]]
| jQuery is a lightweight [[cross-browser]] [[JavaScript library]] that emphasizes interaction between [[JavaScript]] and [[HTML]].
| [[Dual license]]: [[GNU General Public License|GPL]] and [[MIT License|MIT]]
|-
| [[International Components for Unicode|ICU]]
| International Components for Unicode (ICU) is an [[open source]] project of mature [[C (programming language)|C]]/[[C++]] and [[Java (programming language)|Java]] libraries for [[Unicode]] support, software [[internationalization]] and software globalization. ICU is widely portable to many operating systems and environments.
| [[MIT License]]
|-
| [[OpenSSL]]
| OpenSSL is an [[open source]] implementation of the [[Transport Layer Security|SSL and TLS]] protocols.  The core [[library (computer science)|library]] (written in the [[C (programming language)|C programming language]]) implements the basic [[cryptography|cryptographic]] functions and provides various utility functions.
| [[Apache License|Apache]]-like unique
|-
| [[Erlang (programming language)|Erlang]]
| Erlang is a general-purpose [[concurrent computing|concurrent]] [[programming language]] and [[Run time system|runtime]] system. The sequential subset of Erlang is a [[functional language]], with [[strict evaluation]], [[single assignment]], and [[dynamic typing]].
|  Modified [[Mozilla Public License|MPL]]
|}

== See also ==
{{Portal|Free software}}

* [[BigCouch]]
* [[Cassandra (database)]]
* [[Couchbase Server]]
* [[Document-oriented database]]
* [[Lotus Notes]]
* [[MongoDB]]
* [[Mnesia]]
* [[OrientDB]]
* [[Riak]]
* [[XML database]]

==References==
{{Reflist}}

==Bibliography==
{{Refbegin}}
* {{citation
| first1 = J. Chris | last1 = Anderson | first2 = Noah | last2 = Slater | first3 = Jan | last3 = Lehnardt | date = November 15, 2009 | title = CouchDB: The Definitive Guide | edition = 1st | publisher = [[O'Reilly Media]] | pages = 300 | isbn = 0-596-15816-5 | url = http://guide.couchdb.org/editions/1/en/index.html }}
* {{citation | first1 = Joe | last1 = Lennon | date = December 15, 2009 | title = Beginning CouchDB | edition = 1st | publisher = [[Apress]] | pages = 300 | isbn = 1-4302-7237-6 | url = http://www.apress.com/book/view/9781430272373 }}
* {{citation | first1 = Bradley | last1 = Holt | date = March 7, 2011 | title = Writing and Querying MapReduce Views in CouchDB | edition = 1st | publisher = [[O'Reilly Media]] | pages = 76 | isbn = 1-4493-0312-9| url = http://oreilly.com/catalog/0636920018247 }}
* {{citation | first1 = Bradley | last1 = Holt | date = April 11, 2011 | title = Scaling CouchDB | edition = 1st | publisher = [[O'Reilly Media]] | pages = 72 | isbn = 1-4493-0343-9 | url = http://oreilly.com/catalog/9781449303433}}
* {{citation | first1 = MC | last1 = Brown | date = October 31, 2011 | title = Getting Started with CouchDB | edition = 1st | publisher = [[O'Reilly Media]] | pages = 50 | isbn = 1-4493-0755-8 | url = http://oreilly.com/catalog/9781449307554}}
* {{citation | first1 = Mick | last1 = Thompson | date = August 2, 2011 | title = Getting Started with GEO, CouchDB, and Node.js | edition = 1st | publisher = [[O'Reilly Media]] | pages = 64 | isbn = 1-4493-0752-3 | url = http://oreilly.com/catalog/9781449307523}}
{{Refend}}

== External links ==
* {{Official website|http://couchdb.apache.org/}}
* [http://books.couchdb.org/relax/ CouchDB: The Definitive Guide]
* [http://www.nosqldatabases.com/main/tag/couchdb CouchDB articles on NoSQLDatabases.com]
* [http://nosql.mypopescu.com/tagged/couchdb CouchDB news and articles on myNoSQL]
* [http://nosql.mypopescu.com/post/683838234/scaling-couchdb Scaling CouchDB]
* [http://wiki.apache.org/couchdb/Complete_HTTP_API_Reference Complete HTTP API Reference]
* [https://github.com/1999/couchdb-php Simple PHP5 library to communicate with CouchDB]
* [http://code.google.com/p/async-couchdb-client/ Asynchronous CouchDB client for Java]
* [https://github.com/KimStebel/sprouch Asynchronous CouchDB client for Scala]
* [http://nosql.mypopescu.com/post/746667801/3-couchdb-case-studies 3 CouchDB Case Studies]
* [http://userprimary.net/posts/2009/06/13/couchdb-for-access-log-aggregation-and-analysis/ CouchDB for access log aggregation and analysis]
* {{cite web|last=Lehnardt|first=Jan|title=Couch DB at 10,000 feet|url=http://video.google.com/videoplay?docid=-3714560380544574985&amp;hl=en#|work=Erlang eXchange 2008|accessdate=15 April 2012|year=2008}}
* {{cite web|last=Lenhardt|first=Jan|title=CouchDB for Erlang Developers|work=Erlang Factory 2009|url=http://www.erlang-factory.com/conference/London2009/speakers/janlehnardt|work=Erlang Factory London 2009|accessdate=15 April 2012|year=2009}}
* {{cite web|last=Katz|first=Damien|title=CouchDB and Me|url=http://www.infoq.com/presentations/katz-couchdb-and-me|work=RubyFringe|publisher=InfoQ|accessdate=15 April 2012|month=January|year=2009}}

{{Apache}}
{{Databases}}

[[Category:Erlang programming language]]
[[Category:Free database management systems]]
[[Category:Document-oriented databases]]
[[Category:Distributed computing architecture]]
[[Category:Structured storage]]
[[Category:NoSQL]]
[[Category:Unix network-related software]]
[[Category:Apache Software Foundation]]
[[Category:Free web server software]]
[[Category:Cross-platform software]]</text>
      <sha1>b66cb8jwurozdcef92nkzdwmcd4ltfx</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>