<?xml version="1.0" ?><page xmlns="http://www.mediawiki.org/xml/export-0.8/" version="0.8">
    <title>Apache Cassandra</title>
    <ns>0</ns>
    <id>18462573</id>
    <revision>
      <id>563324433</id>
      <parentid>561679037</parentid>
      <timestamp>2013-07-08T03:47:55Z</timestamp>
      <contributor>
        <ip>141.218.36.43</ip>
      </contributor>
      <comment>[[Cassandra Query Language]] redlink</comment>
      <text xml:space="preserve">{{Infobox software
| name = Apache Cassandra
| logo = [[File:Cassandra logo.svg|frameless|Cassandra logo]]
| screenshot =
| caption =
| author = Avinash Lakshman, Prashant Malik
| developer = [[Apache Software Foundation]]
| released = 2008
| status = Active
| latest release version = 1.2.6
| latest release date = {{release date|2013|06|26}}
| frequently updated = yes
| programming language = [[Java (programming language)|Java]]
| operating system = [[Cross-platform]]
| language = English
| genre = [[key-value store]]
| license = [[Apache License 2.0]]
| website = {{URL|http://cassandra.apache.org/}}
}}
'''Apache Cassandra''' is an [[open source software|open source]] [[distributed database|distributed]] [[database management system]]. It is an [[Apache Software Foundation]] top-level project&lt;ref name=GRAD&gt;{{cite web|url=http://www.mail-archive.com/cassandra-dev@incubator.apache.org/msg01518.html |title=Cassandra is an Apache top level project |publisher=Mail-archive.com |date=2010-02-18 |accessdate=2010-03-29| archiveurl= http://web.archive.org/web/20100328090322/http://www.mail-archive.com/cassandra-dev@incubator.apache.org/msg01518.html| archivedate= 28 March 2010 &lt;!--DASHBot--&gt;| deadurl= no}}&lt;/ref&gt; designed to handle very large amounts of data spread out across many [[commodity server]]s while providing a highly available service with no [[single point of failure]].  It is a [[NoSQL (concept)|NoSQL]] solution that was initially developed by [[Facebook]] and powered their Inbox Search feature until late 2010.&lt;ref name=FBIS&gt;{{cite web|url=http://www.facebook.com/note.php?note_id=24413138919&amp;id=9445547199&amp;index=9 |title=Niet compatibele browser |publisher=Facebook |date= |accessdate=2010-03-29}}&lt;/ref&gt;&lt;ref name=KM2010&gt;{{cite web
|url=http://www.facebook.com/notes/facebook-engineering/the-underlying-technology-of-messages/454991608919
|title=The Underlying Technology of Messages
|author=Kannan Muthukkaruppan
}}&lt;/ref&gt; Jeff Hammerbacher, who led the Facebook Data team at the time, has described Cassandra as a [[BigTable]] data model running on an [[Dynamo (storage system)|Amazon Dynamo]]-like infrastructure.&lt;ref name=JH2008&gt;{{cite web
|accessdate=2009-06-04
|date=July 12, 2008
|url=http://perspectives.mvdirona.com/2008/07/12/FacebookReleasesCassandraAsOpenSource.aspx
|title=Facebook Releases Cassandra as Open Source
|author=James Hamilton
}}&lt;/ref&gt;

Cassandra provides a structured [[key-value store]] with tunable consistency.&lt;ref name=LADIS2009&gt;http://www.cs.cornell.edu/projects/ladis2009/papers/lakshman-ladis2009.pdf&lt;/ref&gt; Keys map to multiple values, which are grouped into [[column families]]. The column families are fixed when a Cassandra database is created, but columns can be added to a family at any time. Furthermore, columns are added only to specified keys, so different keys can have different numbers of columns in any given family. The values from a column family for each key are stored together.

Additional features include: using the [[BigTable]] way of modeling, [[eventual consistency]], and the [[Gossip protocol]], a master-master way of serving read and write requests inspired by [[Dynamo (storage system)|Amazon's Dynamo]].&lt;ref&gt;{{cite web 
| accessdate = 2010-03-22
| author = Olivier Mallassi
| date = 2010-06-09
| location = http://blog.octo.com/
| publisher = OCTO Talks
| title = Let’s play with Cassandra… (Part 1/3)
| quote = Hybrid firstly because Cassandra uses a column-oriented way of modeling data (inspired by the BigTable) and permit to use Hadoop Map/Reduce jobs and secondly because it uses patterns inspired by Dynamo like Eventually Consistent, Gossip protocols, a master-master way of serving both read and write requests…
| url = http://blog.octo.com/en/nosql-lets-play-with-cassandra-part-13/
}}&lt;/ref&gt;

== History ==
Apache Cassandra was developed at [[Facebook]] to power their Inbox Search feature by Avinash Lakshman (one of the authors of Amazon's Dynamo) and Prashant Malik.  It was released as an open source project on [[Google code]] in July 2008.&lt;ref name=JH2008 /&gt;  In March 2009, it became an [[Apache Incubator]] project.&lt;ref&gt;{{cite web|url=http://www.mail-archive.com/cassandra-dev@incubator.apache.org/msg00004.html |title=Is this the new hotness now? |publisher=Mail-archive.com |date=2009-03-02 |accessdate=2010-03-29| archiveurl= http://web.archive.org/web/20100425071855/http://www.mail-archive.com/cassandra-dev@incubator.apache.org/msg00004.html| archivedate= 25 April 2010 &lt;!--DASHBot--&gt;| deadurl= no}}&lt;/ref&gt; On February 17, 2010 it graduated to a top-level project.&lt;ref name=GRAD /&gt;

Releases after graduation include
* 0.6, released Apr 12 2010, added support for integrated caching, and [[Apache Hadoop]] [[MapReduce]]&lt;ref&gt;[https://blogs.apache.org/foundation/entry/the_apache_software_foundation_announces3 The Apache Software Foundation Announces Apache Cassandra Release 0.6 : The Apache Software Foundation Blog&lt;!-- Bot generated title --&gt;]&lt;/ref&gt;
* 0.7, released Jan 08 2011, added secondary indexes and online schema changes&lt;ref&gt;[https://blogs.apache.org/foundation/entry/the_apache_software_foundation_announces9 The Apache Software Foundation Announces Apache Cassandra 0.7 : The Apache Software Foundation Blog&lt;!-- Bot generated title --&gt;]&lt;/ref&gt;
* 0.8, released Jun 2 2011, added the Cassandra Query Language (CQL), self-tuning memtables, and support for zero-downtime upgrades&lt;ref&gt;[http://grokbase.com/t/cassandra/user/1162fkpwx2/release-0-8-0 [Cassandra-user&amp;#93; [RELEASE&amp;#93; 0.8.0 - Grokbase&lt;!-- Bot generated title --&gt;]&lt;/ref&gt;
* 1.0, released Oct 17 2011, added integrated compression, leveled compaction, and improved read performance&lt;ref&gt;[http://www.infoq.com/news/2011/10/Cassandra-1 Cassandra 1.0.0. Is Ready for the Enterprise&lt;!-- Bot generated title --&gt;]&lt;/ref&gt;
* 1.1, released Apr 23 2012, added self-tuning caches, row-level isolation, and support for mixed ssd/spinning disk deployments&lt;ref&gt;[https://blogs.apache.org/foundation/entry/the_apache_software_foundation_announces26 The Apache Software Foundation Announces Apache Cassandra™ v1.1 : The Apache Software Foundation Blog&lt;!-- Bot generated title --&gt;]&lt;/ref&gt;
* 1.2, released Jan 2 2013, added clustering across virtual nodes, inter-node communication, atomic batches, and request tracing&lt;ref&gt;[https://blogs.apache.org/foundation/entry/the_apache_software_foundation_announces38 The Apache Software Foundation Announces Apache Cassandra™ v1.2]&lt;/ref&gt;

== Licensing and support ==

Apache Cassandra is an Apache Software Foundation project, so it has an [[Apache License|Apache License (version 2.0)]].

There is professional grade support available from a few companies. In the official wiki of Apache Cassandra's project&lt;ref&gt;[http://wiki.apache.org/cassandra/ThirdPartySupport "Third Party Support"] article on Apache Cassandra's wiki&lt;/ref&gt; the following ones, which collaborate with developers of the project, are mentioned
* [[DataStax]]
* [http://www.acunu.com/ Acunu]

== Main features ==

; Decentralized
: Every node in the cluster has the same role. There is '''no single point of failure'''.  Data is distributed across the cluster (so each node contains different data), but there is no master as every node can service any request.

; Supports replication and multi data center replication
: Replication strategies are configurable.&lt;ref&gt;[http://www.datastax.com/dev/blog/deploying-cassandra-across-multiple-data-centers "Deploying Cassandra across Multiple Data Centers" article on Datastax Cassandra Developer Center]&lt;/ref&gt; Cassandra is designed as a distributed system, for deployment of large numbers of nodes across multiple data centers. Key features of Cassandra’s distributed architecture are specifically tailored for multiple-data center deployment, for redundancy,  for failover and disaster recovery.

; Scalability
: Read and write throughput both increase linearly as new machines are added, with no downtime or interruption to applications.

; Fault-tolerant
: Data is automatically replicated to multiple nodes for [[fault-tolerance]]. [[Replication (computer science)|Replication]] across multiple data centers is supported. Failed nodes can be replaced with no downtime.

; Tunable consistency
: Writes and reads offer a tunable level of consistency, all the way from "writes never fail" to "block for all replicas to be readable", with the [[Quorum_(distributed_computing)|quorum level]] in the middle.

; MapReduce support
: Cassandra has [[Hadoop]] integration, with [[MapReduce]] support. There is support also  for [http://pig.apache.org/ Apache Pig] and [http://hive.apache.org/ Apache Hive].&lt;ref name="hadoopsupport"&gt;[http://wiki.apache.org/cassandra/HadoopSupport "Hadoop Support"] article on Cassandra's wiki&lt;/ref&gt;

; Query language
: CQL ([[Cassandra Query Language]]) was introduced, a SQL-like alternative to the traditional RPC interface. Language drivers are available for '''Java''' (JDBC), '''Python''' (DBAPI2) and '''Node.JS''' (Helenus).

== Data model ==
{{Expand section|informational details and clarification|date=September 2012}}
Cassandra is essentially a hybrid between a key-value and a row-oriented (or tabular) database.

:A [[column family]] resembles a table in an RDBMS. Column families contain rows and columns. Each row is uniquely identified by a row key. Each row has multiple columns, each of which has a name, value, and a timestamp. Unlike a table in an RDBMS, different rows in the same column family do not have to share the same set of columns, and a column may be added to one or multiple rows at any time.&lt;ref&gt;{{cite web|last=DataStax|title=Apache Cassandra 0.7 Documentation - Column Families|url=http://www.datastax.com/docs/0.7/data_model/column_families#column-families|work=Apache Cassandra 0.7 Documentation|accessdate=29 October 2012}}&lt;/ref&gt;

Each key in Cassandra corresponds to a value which is an object. Each key has values as columns, and columns are grouped together into sets called column families. Also, each column family can be grouped in super column families.

Thus, each key identifies a row of a variable number of elements. These column families could be considered then as tables.  A table in Cassandra is a distributed multi dimensional map indexed by a key.

Furthermore, applications can specify the sort order of columns within a Super Column or Simple Column family.

==Clustering==
When the cluster for Apache Cassandra is designed, an important point is to select the right partitioner. Two partitioners exist:&lt;ref&gt;{{cite web
| accessdate = 2011-03-23
| author = Dominic Williams
| location = http://wordpress.com/
| publisher = WordPress.com
| title = Cassandra: RandomPartitioner vs OrderPreservingPartitioner
| quote = When building a Cassandra cluster, the “key” question (sorry, that’s weak) is whether to use the RandomPartitioner (RP), or the OrderPreservingPartitioner (OPP). These control how your data is distributed over your nodes. Once you have chosen your partitioner, you cannot change without wiping your data, so think carefully! The problem with OPP: If the distribution of keys used by individual column families is different, their sets of keys will not fall evenly across the ranges assigned to nodes. Thus nodes will end up storing preponderances of keys (and the associated data) corresponding to one column family or another. If as is likely column families store differing quantities of data with their keys, or store data accessed according to differing usage patterns, then some nodes will end up with disproportionately more data than others, or serving more “hot” data than others. 
| url = http://ria101.wordpress.com/2010/02/22/cassandra-randompartitioner-vs-orderpreservingpartitioner/}}&lt;/ref&gt;
# RandomPartitioner (RP): This partitioner randomly distributes the key-value pairs over the network, resulting in a good load balancing. Compared to OPP, more nodes have to be accessed to get a number of keys.
# OrderPreservingPartitioner (OPP): This partitioner distributes the key-value pairs in a natural way so that similar keys are not far away. The advantage is that fewer nodes have to be accessed. The drawback is the uneven distribution of the key-value pairs.

== Prominent users ==
* [[Apixio]] uses Cassandra to store its Patient Object Model and extracted features about patients and patient populations
* [[AppScale]] uses Cassandra as a back-end for Google App Engine applications&lt;ref&gt;cite web|url=http://appscale.cs.ucsb.edu/datastores.html#cassandra&lt;/ref&gt;
* [[Cisco]]'s [[WebEx]] uses Cassandra to store user feed and activity in near real time.&lt;ref name=CISCO&gt;{{cite web|url=http://www.mail-archive.com/cassandra-dev@incubator.apache.org/msg01163.html |title=Re: Cassandra users survey |publisher=Mail-archive.com |date=2009-11-21 |accessdate=2010-03-29| archiveurl= http://web.archive.org/web/20100417083733/http://www.mail-archive.com/cassandra-dev@incubator.apache.org/msg01163.html| archivedate= 17 April 2010 &lt;!--DASHBot--&gt;| deadurl= no}}&lt;/ref&gt;
* The [[CERN]] [[ATLAS experiment]] uses Cassandra to archive its online DAQ system's monitoring information&lt;ref name=CERN-ATLAS&gt;{{cite web|url=https://cdsweb.cern.ch/record/1432912 | title=A Persistent Back-End for the ATLAS Online Information Service (P-BEAST)}}&lt;/ref&gt;
* [[Cloudkick]] uses Cassandra to store the server metrics of their users.&lt;ref&gt;[https://www.cloudkick.com/blog/2010/mar/02/4_months_with_cassandra/ 4 Months with Cassandra, a love story | Cloudkick, manage servers better&lt;!-- Bot generated title --&gt;]&lt;/ref&gt;
* [[Constant Contact]] uses Cassandra in their social media marketing application.&lt;ref name=ConstantContact&gt;{{cite web |url=http://www.readwriteweb.com/enterprise/2011/02/this-week-in-consolidation-hp.php |title=This Week in Consolidation: HP Buys Vertica, Constant Contact Buys Bantam Live and More |author=Klint Finley |publisher=Read Write Enterprise |date=2011-02-18}}&lt;/ref&gt;
* [[Digg]], a large social news website, announced on Sep 9th, 2009 that it is rolling out its use of Cassandra&lt;ref name=NM2009&gt;{{cite web
|url=http://blog.digg.com/?p=966
|title=Looking to the future with Cassandra
|author=Ian Eure
}}&lt;/ref&gt; and confirmed this on March 8, 2010.&lt;ref name=DG2010&gt;{{cite web
|url=http://about.digg.com/node/564
|title=Saying Yes to NoSQL; Going Steady with Cassandra
|author=John Quinn
}}&lt;/ref&gt; [[TechCrunch]] has since linked Cassandra to Digg v4 reliability criticisms and recent company struggles.&lt;ref name=ES2010&gt;{{cite web|url=http://techcrunch.com/2010/09/07/digg-struggles-vp-engineering-door/|title=As Digg Struggles, VP Of Engineering Is Shown The Door|author=Erick Schonfeld}}&lt;/ref&gt; Lead engineers at Digg later rebuked these criticisms as red herring and blamed a lack of load testing.&lt;ref name=QU2010&gt;{{cite web|url=http://www.quora.com/Is-Cassandra-to-blame-for-Digg-v4s-technical-failures/|title=Is Cassandra to Blame for Digg v4's Failures?}}&lt;/ref&gt;
* [[Facebook]] used Cassandra to power Inbox Search, with over 200 nodes deployed.&lt;ref name=FBIS /&gt; This was abandoned in late 2010 when they built Facebook Messaging platform on [[HBase]].&lt;ref name="KM2010"/&gt;
* [[IBM]] has done research in building a scalable email system based on Cassandra.&lt;ref name=IBM&gt;{{cite web|url=http://docs.google.com/viewer?url=http://ewh.ieee.org/r6/scv/computer//nfic/2009/IBM-Jun-Rao.pdf |title=Powered by Google Docs |publisher=Docs.google.com |date= |accessdate=2010-03-29}}&lt;/ref&gt;
* [[InWorldz]] has researched and developed a scalable high-performance storage system for user inventory items Cassandra.&lt;ref&gt;{{cite web|last=Dexler|first=Tranquillity|title=InWorldz 0.7.0 R1542X|url=http://inworldz.com/forums/viewtopic.php?f=19&amp;t=11628&amp;p=87147#p87147|publisher=InWorldz LLC|accessdate=9 February 2012}}&lt;/ref&gt; 
* [[Netflix]] uses Cassandra as their back-end database for their streaming services&lt;ref name=Netflix1&gt;cite web|url=http://www.slideshare.net/adrianco/migrating-netflix-from-oracle-to-global-cassandra&lt;/ref&gt;&lt;ref name=Netflix2&gt;{{cite web|url=http://techblog.netflix.com/2011/01/nosql-at-netflix.html |date=2011-01-28 |author=Yury Izrailevsky |title=NoSQL at Netflix}}&lt;/ref&gt;
* [[Formspring]] uses Cassandra to count responses, as well as store Social Graph data (followers, following, blockers, blocking) for 26 Million accounts with 10 million responses a day&lt;ref&gt;{{cite web|url=http://www.slideshare.net/martincozzi/cassandra-formspring |date=2011-08-31 |author=Martin Cozzi |title=Cassandra at Formspring}}&lt;/ref&gt;
* [[Mahalo.com]] uses Cassandra to record user activity logs and topics for their Q&amp;A website&lt;ref name=Mahalo&gt;{{cite web|title=http://www.datastax.com/wp-content/uploads/2011/06/DataStax-CaseStudy-Mahalo.pdf|url=http://www.datastax.com/wp-content/uploads/2011/06/DataStax-CaseStudy-Mahalo.pdf}}&lt;/ref&gt;&lt;ref name=Mahalo2&gt;[http://blip.tv/datastax/cassandra-at-mahalo-com-4030941 Watch Cassandra at Mahalo.com | DataStax Episodes | Blip&lt;!-- Bot generated title --&gt;]&lt;/ref&gt;
* [[Ooyala]] Built a scalable, flexible, real-time analytics engine using Cassandra&lt;ref name=Ooyala&gt;http://www.datastax.com/wp-content/uploads/2011/04/WP-Ooyala.pdf&lt;/ref&gt;
* At [[Openwave]], Cassandra acts as a distributed database and serves as a distributed storage mechanism for Openwave’s next generation messaging platform&lt;ref name=Openwave&gt;http://www.datastax.com/wp-content/uploads/2011/05/DataStax-CaseStudy-Openwave.pdf&lt;/ref&gt;
* [[OpenX (software)|OpenX]] is running over 130 nodes on Cassandra for their OpenX Enterprise product to store and replicate advertisements and targeting data for ad delivery&lt;ref name=OpenX&gt;[http://openx.com/publisher/technology Ad Serving Technology - Advanced Optimization, Forecasting, &amp; Targeting | OpenX&lt;!-- Bot generated title --&gt;]&lt;/ref&gt;
* [[Plaxo]] has "reviewed 3 billion contacts in [their] database, compared them with publicly available data sources, and identified approximately 600 million unique people with contact info."&lt;ref name=Plaxo&gt;{{cite web|url=http://blog.plaxo.com/2011/03/an-important-milestone-and-its-only-the-beginning/ |title=An important milestone - and it's only the beginning! |date=2011-03-20 |author=Preston Smalley}}&lt;/ref&gt;
* [[PostRank]] uses Cassandra as their backend database&lt;ref name=PostRank&gt;{{cite web|url=http://blog.postrank.com/2011/03/webpulp-tv-scaling-postrank-with-ilya-grigorik/ |author=Ilya Grigorik |date=2011-03-29 |title=Webpulp TV: Scaling PostRank with Ilya Grigorik}}&lt;/ref&gt;
* [[Rackspace]] is known to use Cassandra internally.&lt;ref name=Rackspace&gt;{{cite web|url=http://www.slideshare.net/stuhood/hadoop-and-cassandra-at-rackspace |title=Hadoop and Cassandra (at Rackspace) |publisher=Stu Hood |date=2010-04-23 |accessdate=2011-09-01}}&lt;/ref&gt;
* [[Reddit]] switched to Cassandra from [[memcacheDB]] on March 12, 2010&lt;ref name=REDDIT&gt;{{cite web|author=Posted by david [ketralnis] |url=http://blog.reddit.com/2010/03/she-who-entangles-men.html |title=what's new on reddit: She who entangles men |publisher=blog.reddit |date=2010-03-12 |accessdate=2010-03-29| archiveurl= http://web.archive.org/web/20100325115755/http://blog.reddit.com/2010/03/she-who-entangles-men.html| archivedate= 25 March 2010 &lt;!--DASHBot--&gt;| deadurl= no}}&lt;/ref&gt; and experienced some problems with overload handling in Cassandra in May.&lt;ref name=REDDIT2&gt;{{cite web|author= Posted by the reddit admins at |url=http://blog.reddit.com/2010/05/reddits-may-2010-state-of-servers.html |title=blog.reddit -- what's new on reddit: reddit's May 2010 "State of the Servers" report |publisher=blog.reddit |date=2010-05-11 |accessdate=2010-05-16| archiveurl= http://web.archive.org/web/20100514085008/http://blog.reddit.com/2010/05/reddits-may-2010-state-of-servers.html| archivedate= 14 May 2010 &lt;!--DASHBot--&gt;| deadurl= no}}&lt;/ref&gt;
* [[RockYou]] uses Cassandra to record every single click for 50 million Monthly Active Users in real-time for their online games&lt;ref name=RockYou&gt;{{cite web |url=http://mysqldba.blogspot.com/2010/03/cassandra-is-my-nosql-solution-but.html |date=2011-03-23 |author=Dathan Vance Pattishall |title=Cassandra is my NoSQL Solution but}}&lt;/ref&gt;
* [[SoundCloud]] uses Cassandra to store user account information&lt;ref name=SoundCloud&gt;{{cite web|url=http://berlinbuzzwords.de/sites/berlinbuzzwords.de/files/cassandra%20workshop%20berlin%20buzzword%202011-%20Soundcloud.pdf |title=Cassandra at SoundCloud}}&lt;/ref&gt;
*[[Talentica Software]] uses Cassandra as a back-end for Analytics Application with Cassandra cluster of 30 nodes and inserting around 200GB data on daily basis.&lt;ref&gt;cite web|url=http://www.talentica.com&lt;/ref&gt;
* [[Twitter]] announced it is planning to use Cassandra because it can be run on large server clusters and is capable of taking in very large amounts of data at a time.&lt;ref name=TWITTER&gt;{{cite web|last=Popescu |first=Alex |url=http://nosql.mypopescu.com/post/407159447/cassandra-twitter-an-interview-with-ryan-king |title=Cassandra @ Twitter: An Interview with Ryan King |publisher=myNoSQL |date= |accessdate=2010-03-29| archiveurl= http://web.archive.org/web/20100301151656/http://nosql.mypopescu.com/post/407159447/cassandra-twitter-an-interview-with-ryan-king| archivedate= 1 March 2010 &lt;!--DASHBot--&gt;| deadurl= no}}&lt;/ref&gt;&lt;ref name=TWITTER2&gt;{{cite web|last=Babcock |first=Charles |url=http://www.informationweek.com/news/software/open_source/showArticle.jhtml?articleID=223100894&amp;pgno=1&amp;queryText=&amp;isPrev= |title=Twitter Drops MySQL For Cassandra - Cloud databases |publisher=InformationWeek |date= |accessdate=2010-03-29| archiveurl= http://web.archive.org/web/20100402075726/http://www.informationweek.com/news/software/open_source/showArticle.jhtml?articleID=223100894&amp;pgno=1&amp;queryText=&amp;isPrev=| archivedate= 2 April 2010 &lt;!--DASHBot--&gt;| deadurl= no}}&lt;/ref&gt; Twitter continues to use it but not for Tweets themselves.&lt;ref&gt;{{cite web|url=http://engineering.twitter.com/2010/07/cassandra-at-twitter-today.html|title=Cassandra at Twitter Today}}&lt;/ref&gt;
* [[Urban Airship]] uses Cassandra with the mobile service hosting for over 160 million application installs across 80 million unique devices&lt;ref name=UrbanAirship&gt;{{cite web|url=http://www.slideshare.net/eonnen/from-100s-to-100s-of-millions |title=From 100s to 100s of Millions |author=Erik Onnen}}&lt;/ref&gt;
* [[@WalmartLabs]]&lt;ref&gt;[http://www.walmartlabs.com Walmart Labs]&lt;/ref&gt; (previously [[Kosmix]]) uses Cassandra with SSD&lt;ref name=kosmix&gt;{{cite web|url=http://blog.kosmix.com/2011/01/21/cassandra-on-ssd/ |title=Cassandra on SSD |author=Karl Mueller}}&lt;/ref&gt;
* [[Yakaz]] uses Cassandra on a five-node cluster to store millions of images as well as its social data.&lt;ref name=Yakaz&gt;{{cite web|url=http://www.yakaz.com/about/technologies.php |title=Yakaz Technologies}}&lt;/ref&gt;
* ZangBeZang uses Cassandra as the datastore for its carrier grade recommendation and marketing platform. &lt;ref name=zangbezang&gt;{{cite web|url=http://www.zangbezang.com|title=ZangBeZang}}&lt;/ref&gt; 
* [[Zoho]] uses Cassandra for generating the inbox preview in their [[Zoho#Zoho_Mail]] service
Ironically, [[Facebook]] moved off its early Cassandra deployment in late 2010 when they replaced Inbox Search with the Facebook Messaging platform.&lt;ref name="KM2010"/&gt;  Facebook never deployed an Apache Cassandra release.

Cassandra is the most popular wide column store.&lt;ref name=DB-Engines&gt;{{cite web|url=http://db-engines.com/en/ranking/wide+column+store |title=DB-Engines Ranking of Wide Column Stores |author=DB-Engines}}&lt;/ref&gt;

== Tools for Cassandra ==

Cassandra has built in tools for accessing Cassandra from the direct download, such as cassandra-cli and node-tool. 

There are third party tools available, as the following:&lt;ref&gt;[http://wiki.apache.org/cassandra/FAQ#gui FAQ] on Cassandra's wiki&lt;/ref&gt;

'''Data browsers'''
* [http://github.com/driftx/chiton chiton], a GTK data browser.
* [http://code.google.com/p/cassandra-gui cassandra-gui], a Swing data browser.
* [http://www.quest.com/toad-for-cloud-databases/ Toad for Cloud Databases], an Eclipse plug-in data browser
'''Administration tools'''
* [http://www.datastax.com/products/opscenter OpsCenter], OpsCenter is a tool for management and monitoring of a Cassandra cluster. The Community Edition of OpsCenter is free for anyone to download and use. There is also an Enterprise Edition of OpsCenter that includes additional features.
* [https://github.com/sebgiroux/Cassandra-Cluster-Admin Cassandra Cluster Admin], Cassandra Cluster Admin is a GUI tool to help people administrate their Apache Cassandra cluster and modify its content, similar to PHPMyAdmin for MySQL administration.

=== Client interfaces and language Support ===

Cassandra has a lot of high-level client libraries for Python, Java, .Net, Ruby, PHP, Perl, C++, etc.&lt;ref&gt;[http://wiki.apache.org/cassandra/ClientOptions "Client Options" article] on Cassandra Wiki&lt;/ref&gt; 

For a detailed list of client software go to [http://wiki.apache.org/cassandra/ClientOptions "Client Options" article] on Cassandra Wiki

=== Integration with other tools ===

The [[MariaDB]] developers have created a storage engine that allows MariaDB or MySQL to use Cassandra as a data source.&lt;ref&gt;https://kb.askmonty.org/en/cassandra-storage-engine/ Cassandra Storage Engine Documentation&lt;/ref&gt;

There are other tools worth mentioning like '''Solandra''',&lt;ref&gt;[https://github.com/tjake/Solandra Solandra source at Github]&lt;/ref&gt; a Cassandra backend for [http://lucene.apache.org/solr/ Apache Solr], a web application built around Lucene, for full text indexing and search.

For monitoring purposes Cassandra is well integrated with [[Ganglia (software)|Ganglia]]&lt;ref&gt;[http://www.cs.cornell.edu/projects/ladis2009/papers/lakshman-ladis2009.pdf Cassandra - A Decentralized Structured Storage System], a 2009 paper presenting Cassandra by their creators Avinash Lakshman and Prashant Malik&lt;/ref&gt; and there are plugins for other monitoring system as, by example, [[Nagios]].

== See also ==
{{Portal|Free software}}

* [[NoSQL]]
* [[Berkeley_db|Berkeley DB]]
* [[MongoDB]]
* [[BigTable]] - Original distributed database by Google
* [[Distributed database]]
* [[Distributed hash table]] (DHT)
* [[Dynamo (storage system)]] - Cassandra borrows many elements from Dynamo
* [[HBase|Apache HBase]] - [[Hadoop|Apache Hadoop]] based distributed database. Very similar to BigTable
* [[Hypertable]] - [[Hadoop|Apache Hadoop]] based distributed database. Very similar to BigTable
* [[Riak]]

==References==
{{Reflist|2}}

==Bibliography==
{{refbegin}}
* {{cite book
| first1      = Eben
| last1       = Hewitt
| date        = December 15, 2010
| title       = Cassandra: The Definitive Guide
| publisher   = [[O'Reilly Media]]
| edition     = 1st
| page       = 300
| isbn        = 978-1-4493-9041-9
| url         = http://oreilly.com/catalog/0636920010852
}}
* {{cite book
| first1      = Edward
| last1       = Capriolo
| date        = July 15, 2011
| title       = Cassandra High Performance Cookbook
| publisher   = [[Packt Publishing]]
| edition     = 1st
| page       = 324
| isbn        = 1-84951-512-3
| url         = http://www.packtpub.com/cassandra-apache-high-performance-cookbook/book
}}
{{refend}}

==External links==
{{external links|date=January 2012}}
* {{cite web
|title=Cassandra - A structured storage system on a P2P Network
|url=http://www.facebook.com/note.php?note_id=24413138919&amp;id=9445547199&amp;index=9
|author=Avinash Lakshman
|date=25 August 2008
|accessdate=2009-06-04
|publisher=Engineering @ Facebook's Notes
}}
* [http://cassandra.apache.org/ Project Website]
* [http://wiki.apache.org/cassandra/ Project Wiki]
* [http://www.infoq.com/presentations/Adopting-Apache-Cassandra Adopting Apache Cassandra] presented by Eben Hewitt on December 1, 2010
* [http://www.cs.cornell.edu/projects/ladis2009/papers/lakshman-ladis2009.pdf LADIS 2009 WhitePaper by the original contributors Avinash Lakshman &amp; Prashant Malik]
* [http://www.nosqldatabases.com/main/tag/cassandra Cassandra Articles on NoSQLDatabases.com]
* [http://nosql.mypopescu.com/tagged/cassandra Cassandra News and Articles on myNoSQL]
* [http://nosql.mypopescu.com/post/407159447/cassandra-twitter-an-interview-with-ryan-king Cassandra @ Twitter: an Interview with Ryan King]
* [http://www.slideshare.net/jbellis/what-every-developer-should-know-about-database-scalability Presentation on RDBMS vs. Dynamo, BigTable, and  Cassandra]
* [http://code.google.com/p/cassandra-rpm/ RPM build for the apache cassandra project]
* [http://de.slideshare.net/grro/cassandra-by-example-the-path-of-read-and-write-requests Cassandra by example - the path of read and write requests]

{{apache}}
{{Facebook navbox}}

{{DEFAULTSORT:Cassandra (Database)}}
[[Category:Apache Software Foundation projects]]
[[Category:BigTable implementations]]
[[Category:Distributed data stores]]
[[Category:Free database management systems]]
[[Category:Structured storage]]
[[Category:NoSQL]]</text>
      <sha1>3qnu4tbu9ztznptvurl3c7f1opb89ib</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>