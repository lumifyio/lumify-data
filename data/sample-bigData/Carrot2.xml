<?xml version="1.0" ?><page xmlns="http://www.mediawiki.org/xml/export-0.8/" version="0.8">
    <title>Carrot2</title>
    <ns>0</ns>
    <id>8498167</id>
    <revision>
      <id>555563605</id>
      <parentid>555563498</parentid>
      <timestamp>2013-05-17T20:27:04Z</timestamp>
      <contributor>
        <ip>109.173.215.110</ip>
      </contributor>
      <text xml:space="preserve">{{Infobox software
| name                   = Carrot&amp;sup2;
| logo                   = 
| screenshot             = [[Image:carrot2.png|200px]]
| caption                = Web search results clustered using Carrot&amp;sup2;'s Lingo algorithm.
| developer              = Carrot Search
| status                 = Active
| latest release version = 3.7.1
| latest release date    = {{release date|2013|05|17}}
| latest preview version =
| latest preview date    =
| operating system       = [[Cross-platform]]
| programming language   = [[Java (programming language)|Java]]
| genre                  = [[Text mining]] and [[cluster analysis]]
| license                = [[BSD license]]
| website                = {{URL|http://carrot2.org/}}
}}
'''Carrot²'''&lt;ref&gt;[http://project.carrot2.org Carrot&amp;sup2; project website]&lt;/ref&gt; is an open source search results clustering engine.&lt;ref&gt;[http://search.carrot2.org Carrot&amp;sup2; search results clustering demo]&lt;/ref&gt; It can automatically [[cluster analysis|cluster]] small collections of documents, e.g. search results or document abstracts, into thematic categories. Apart from two specialized search results clustering algorithms, Carrot² offers ready-to-use components for fetching search results from various sources. Carrot² is written in Java and distributed under the [[BSD license]].

== History ==

The initial version of Carrot² was implemented in 2001 by Dawid Weiss as part of his MSc thesis to validate the applicability of the STC clustering algorithm to clustering search results in Polish.&lt;ref&gt;Dawid Weiss: ''A Clustering Interface for Web Search Results in Polish and English.'' MSc thesis. Poznan University of Technology, Poznań, Poland, 2001 [http://www.cs.put.poznan.pl/dweiss/site/publications/download/dweiss-master-thesis.pdf download PDF]&lt;/ref&gt; In 2003, a number of other search results clustering algorithms were added, including Lingo,&lt;ref name="lingo" /&gt; a novel text clustering algorithm designed specifically for clustering of search results.  While the source code of Carrot² was available since 2002, it was only in 2006 when version 1.0 was officially released. In the same year, version 2.0 was released with improved user interface and extended tool set.  In 2009, version 3.0 brought significant improvements in clustering quality, simplified API and new GUI application for tuning clustering based on the Eclipse [[Rich Client Platform]].  

{| class="wikitable"  style="margin:auto; margin:0 0 0 2em; font-size:85%;"
|+ Carrot² releases
|-
! Release
! Release Date
! Major changes and new features&lt;ref&gt;[http://project.carrot2.org/release-notes.html Carrot&amp;sup2; release notes]&lt;/ref&gt;
|-
| 3.7.1
| May 2013
| Minor bug fixes (3.7.0 maintenance release).
|-
| 3.7.0
| April 2013
| Infrastructure changes to the core (string IDs), better Solr integration XSLT, Workbench tweaks for larger inputs, updated dependencies.
|-
| 3.6.3
| April 2013
| Minor bug fixes and improvements: customization of Solr adapter XSLT, Workbench tweaks for larger inputs, updated dependencies.
|-
| 3.6.2
| November 2012
| Minor bug fixes and improvements.
|-
| 3.6.1
| August 2012
| Minor bug fixes.
|-
| 3.6.0
| June 2012
| Infrastructural changes, refactorings and bug fixes.
|-
| 3.5.3
| December 2011
| Infrastructure updates resulting from migration to GitHub. Workbench update to SWT 3.7.1.
|-
| 3.5.2
| September 2011
| Ajax support in Document Clustering Server, Bing document source improved, Workbench improvements, bug fixes.
|-
| 3.5.1
| June 2011
| Bug fixes, visualization integration improvements, support for Yahoo BOSS API removed.
|-
| 3.5.0
| May 2011
| FoamTree visualization, bisecting k-means clustering, resource management improvements
|-
| 3.4.3
| March 2011
| Distribution to [[Apache Maven|Maven]] central repository
|-
| 3.4.2
| October 2010
| Bug fixes
|-
| 3.4.1
| September 2010
| Solr 1.4.x compatibility package, bug fixes
|-
| 3.4.0
| August 2010
| .NET API for calling Carrot² clustering
|-
| 3.3.0
| April 2010
| Significant scalability improvements in the STC clustering algorithm
|-
| 3.2.0
| March 2010
| Experimental support for clustering Arabic and Korean content, command line application for clustering in batch mode, [[LGPL]]-licensed dependencies removed
|-
| 3.1.0
| September 2009
| Experimental support for clustering Chinese content, search results clustering plugin for [[Apache Solr]]
|-
| 3.1.0
| September 2009
| Experimental support for clustering Chinese content, search results clustering plugin for [[Apache Solr]]
|-
| 3.0.1
| March 2009
| Document Clustering Workbench available for Mac OS X
|-
| 3.0.0
| January 2009
| Document Clustering Workbench added for easy experimenting with Carrot² clustering, radically simplified Java API, search results clustering web application re-implemented, user manual&lt;ref&gt;[http://download.carrot2.org/stable/manual Carrot&amp;sup2; user and developer Manual]&lt;/ref&gt; available
|-
| 2.1.0
| August 2007
| Document Clustering Server added for exposing clustering as a [[REST]] service
|-
| 2.0.0
| September 2006
| New user interface of the search results clustering web application
|-
| 1.0.0
| January 2006
| First official release, binaries available on [[SourceForge]]
|-
| 0.0.0
| since 2002
| Incubation releases, source code available on [[SourceForge]]
|}

== Architecture and components ==

The architecture of Carrot² is based on ''processing components'' arranged into pipelines. Two major groups or processing components in Carrot² are: [[#Document_sources|document sources]] and [[#Clustering_algorithms|clustering algorithms]].

=== Document sources ===

Document sources provide data for further processing. Typically, they would e.g. fetch search results from an external search engine, Lucene / Solr index or load text files from a local disk. 

Currently, Carrot² has built-in support for the following document sources:

* [[Bing (search engine)|Bing]] Search API
* [[Google]] Search API
* [[Lucene]] index
* [[OpenSearch]]
* [[PubMed]]
* [[Solr]] server
* eTools metasearch engine
* Generic XML files

Other document sources can be integrated based on the code examples
provided with Carrot² distribution.

=== Clustering algorithms ===

Carrot² offers two specialized document clustering algorithms&lt;ref&gt;[http://project.carrot2.org/algorithms.html Carrot&amp;sup2; clustering algorithms]&lt;/ref&gt; that place emphasis on the quality of cluster labels:

* Lingo:&lt;ref name="lingo"&gt;Stanisław Osiński, Dawid Weiss: ''A Concept-Driven Algorithm for Clustering Search Results''. IEEE Intelligent Systems, May/June, 3 (vol. 20), 2005, pp. 48&amp;ndash;54.&lt;/ref&gt; a clustering algorithm based on the [[Singular value decomposition]]
* STC:&lt;ref&gt;Oren Zamir, [[Oren Etzioni]]: ''Web Document Clustering: A Feasibility Demonstration'', Proceedings of the 21st annual international ACM SIGIR conference on Research and development in information retrieval (1998), pp. 46&amp;ndash;54&lt;/ref&gt; [[Suffix tree|Suffix Tree]] Clustering

Other algorithms can be easily added to Carrot².

== APIs ==

Carrot² clustering can be called through a number of APIs.

=== Java API ===

Being implemented in Java, Carrot² can be integrated with Java software through its native Java API.&lt;ref&gt;[http://download.carrot2.org/stable/javadoc Carrot&amp;sup2; Java API JavaDoc]&lt;/ref&gt;

=== C# / .NET API ===

Carrot² provides a native [[C Sharp (programming language)|C#]] API for calling clustering from [[C Sharp (programming language)|C#]] / [[.NET Framework|.NET]] software without installing a Java runtime. The Carrot² C# API requires [[.NET Framework]] version 3.5 or later.

=== Other platforms ===

Other platforms can call Carrot² clustering through the [[REST]] service exposed by the Document Clustering Server. Example integration code is provided for [[PHP]]5, [[C Sharp (programming language)|C#]], [[Ruby (programming language)|Ruby]] and [[cURL]].

== Tools ==

[[Image:Carrot2 Document Clustering Workbench.png|thumb|alt=Carrot2 Document Clustering Workbench screen shot.|Carrot2 Document Clustering Workbench.]] Carrot² offers a number of supporting tools that can be used to quickly set up clustering on custom data, further tuning of clustering results and exposing Carrot² clustering as a remote service:

* Carrot2 Document Clustering Workbench: a standalone GUI application for experimenting with Carrot² clustering on data from common search engines or custom data,
* Carrot2 Document Clustering Server: exposes Carrot² clustering as a [[REST]] service,
* Carrot2 Command Line Interface: applications that allow invoking Carrot² clustering from command line,
* Carrot2 Web Application: exposes Carrot² clustering as a web application for end users.
{{-}}

== Spin-offs ==

=== Carrot Search ===

Carrot Search,&lt;ref&gt;[http://carrotsearch.com Carrot Search]&lt;/ref&gt; a commercial spin-off of the Carrot² project, works on further development of Carrot², offers a real-time text clustering algorithm&lt;ref&gt;[http://carrotsearch.com/lingo3g Lingo3G document clustering algorithm]&lt;/ref&gt; compliant with the Carrot² framework as well as text mining consulting services based on open source and proprietary software.

=== Carrot Search Labs ===

Carrot² gave rise to a number of independent open source projects released under the umbrella of Carrot Search Labs.&lt;ref&gt;[http://labs.carrotsearch.com Carrot Search Labs website]&lt;/ref&gt; Currently, the following projects are available:

* Randomized Testing: a JUnit test runner with built-in utilities to make every test run slightly different (randomized). Also an ANT task for running JUnit tests on parallel JVMs, with load balancing and other bells and whistles.
* High Performance Primitive Collections for Java: Lists, Sets, Maps and other collections of primitives for Java tuned for highest performance and memory efficiency.
* jSuffixArrays: Several Java implementations of the Suffix Array data structure with different performance and memory characteristics.
* JUnitBenchmarks: A set of extensions for turning JUnit4 tests into performance micro-benchmarks with GC monitoring, time variance measurement and simple graphical visualizations.
* SmartSprites: fully automatic maintenance of CSS sprites; no tedious copying and pasting to the CSS when adding or changing sprited images.

==See also==
*{{Portal-inline|Free software}}

== References ==
{{reflist}}

[[Category:Internet search engines]]</text>
      <sha1>fb6tpn1nlqhefu327ljtfe1jnanfyay</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>