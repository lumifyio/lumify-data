<?xml version="1.0" ?><page xmlns="http://www.mediawiki.org/xml/export-0.8/" version="0.8">
    <title>SPL (Search Processing Language)</title>
    <ns>0</ns>
    <id>38448318</id>
    <revision>
      <id>556679031</id>
      <parentid>550349233</parentid>
      <timestamp>2013-05-25T03:24:27Z</timestamp>
      <contributor>
        <username>FrescoBot</username>
        <id>9021902</id>
      </contributor>
      <minor></minor>
      <comment>Bot: [[User:FrescoBot/Links|link syntax/spacing]]</comment>
      <text xml:space="preserve">{{unreferenced|date=March 2013}}

{{Infobox programming language
| name                   = SPL
| caption                = Search Processing Language
| genre                  = [[Big_data|Big Data]], [[Machine-generated_data|Machine-generated Data]]
| paradigm               = [[Pipeline_programming|Piped programming language]]
| year                   = 2007
| designer               = [[Splunk]]
| latest_release_version = [[SPL:5.0]]
| latest_release_date    = 2013
| influenced_by          = [[Pipeline_(Unix)|Unix Piping]][[SQL]]
| operating_system       = [[Cross-platform]]
| website                = {{cite web | url = http://docs.splunk.com | title = Splunk Documentation}}
}}
'''SPL''' or '''Search Processing Language''' is a special-purpose [[programming language]] designed by [[Splunk]] for managing [[Machine-generated_data|machine-generated]], [[big data]].  Originally based upon [[Pipeline_(Unix)|Unix Piping]] and [[SQL]], its scope includes data searching, filtering, modification, manipulation, insertion, and deletion.


==Language elements==

A search in SPL is a series of commands and arguments, each chained together with "|" (pipe) character that takes the output of one command and feeds it into the next command to the right.
&lt;source lang="java"&gt;
  search-args | cmd1 cmd-args | cmd2 cmd-args | ...
&lt;/source&gt;

You can use search commands to take indexed data and filter unwanted information, extract more information, calculate values, transform, and perform statistical analysis. The search results retrieved from the index can be thought of as a dynamically-created table. Each search command redefines the shape of that table. Each indexed event is a row, with columns for each field value. Columns include basic information about the data as well as columns that are extracted dynamically at search-time.

At the head of each search is an implied "search-the-index-for-events" command, which can be used to search for keywords (e.g., error), boolean expressions
(e.g., (error OR failure) NOT success), phrases (e.g., "database error"), wildcards (e.g., fail* will match fail, fails, failure, etc.), field values (e.g., code=404), inequality (e.g., code!=404 or code&gt;200), a field having any value or no value (e.g., code=* or NOT code=*). For example, the search:
&lt;source lang="java"&gt;
   sourcetype="access_combined" error | top 10 uri
&lt;/source&gt;

will retrieve indexed access_combined events from disk that contain the term "error" (ANDs are implied between search terms), and then for those events, report the top 10 most common URI values.

==Subsearches==

A subsearch is an argument to a command that runs its own search, returning those results to the parent command as the argument value. Subsearches are contained in square brackets. For example, finding all syslog events from the user that had the last login error:
&lt;source lang="java"&gt;
   sourcetype=syslog [search login error | return user]
&lt;/source&gt;

Note that the subsearch returns one user value, because by default the "return" command returns only one value, but there are options for more (e.g., | return 5 user).

==Commands==

The most common commands in used in SPL queries are:

* chart/timechart - Returns results in a tabular output for (time-series) charting.
* dedup - Removes subsequent results that match a specified criterion.
* eval - Calculates an expression. (See EVAL FUNCTIONS table.)
* fields - Removes fields from search results.
* head/tail - Returns the first/last N results.
* lookup - Adds field values from an external source.
* rename - Renames a specified field; wildcards can be used to specify multiple fields.
* replace - Replaces values of specified fields with a specified new value.
* rex - Specifies regular expression named groups to extract fields.
* search - Filters results to those that match the search expression.
* sort - Sorts search results by the specified fields.
* stats - Provides statistics, grouped optionally by fields.
* top/rare - Displays the most/least common values of a field.
* transaction - Groups search results into transactions.

See the [http://docs.splunk.com/Documentation/Splunk/latest/SearchReference/WhatsInThisManual search reference documentation] for the complete list of commands.

==External links==
* [http://www.innovato.com/splunk/RefCard.pdf ''SPL Reference Cards'']: six-page foldout reference card of the most common SPL commands and options.
* [http://www.splunk.com/goto/book Exploring Splunk: Search Processing Language (SPL) Primer and Cookbook]: the official Splunk Book, providing a basic understanding of Splunk's most important parts, combined with solutions to real-world problems.
* [http://docs.splunk.com/Documentation/Splunk/latest/Search/Whatsinthismanual Splunk's Search Manual] discusses the search language and how to write a search in Splunk.
* [http://www.innovato.com/splunk/SQLSplunk.html ''SPL for SQL Users''] A quick concept mapping to get SQL users started in SPL.

{{Databases}}
{{Query languages}}</text>
      <sha1>rrdl7n08k05ets22lfg10ooodew2ojw</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>