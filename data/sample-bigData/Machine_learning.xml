<?xml version="1.0" ?><page xmlns="http://www.mediawiki.org/xml/export-0.8/" version="0.8">
    <title>Machine learning</title>
    <ns>0</ns>
    <id>233488</id>
    <revision>
      <id>561799120</id>
      <parentid>561115081</parentid>
      <timestamp>2013-06-27T09:35:51Z</timestamp>
      <contributor>
        <ip>115.248.253.41</ip>
      </contributor>
      <comment>/* Genetic programming */</comment>
      <text xml:space="preserve">{{for|the journal|Machine Learning (journal)}}
{{for|the cognitive psychology theory|Statistical learning in language acquisition}}
{{See also|Pattern recognition}}

'''Machine learning''', a branch of [[artificial intelligence]], is about the construction and study of systems that can [[learning|learn]] from data.
For example, a machine learning system could be trained on email messages to learn to distinguish between spam and non-spam messages.  After learning, it can then be used to classify new email messages into spam and non-spam folders.

The core of machine learning deals with representation and generalization.  Representation of data instances and functions evaluated on these instances are part of all machine learning systems.  Generalization is the property that the system will perform well on unseen data instances; the conditions under which this can be guaranteed are a key object of study in the subfield of [[computational learning theory]].

There is a wide variety of machine learning tasks and successful applications.
[[Optical character recognition]], in which [[wikt:hard copy|printed]] characters are recognized automatically based on previous examples, is a classic example of machine learning.&lt;ref name=Wernick-Signal-Proc-July-2010&gt;Wernick, Yang, Brankov, Yourganov and Strother, Machine Learning in Medical Imaging, ''[[IEEE Signal Processing Society|IEEE Signal Processing Magazine]]'', vol. 27, no. 4, July 2010, pp. 25-38&lt;/ref&gt;

==Definition==

In 1959, [[Arthur Samuel]] defined machine learning as a "Field of study that gives computers the ability to learn without being explicitly programmed".&lt;ref name="arthur_samuel_machine_learning_def"&gt; {{cite book | title=Too Big to Ignore: The Business Case for Big Data | publisher=Wiley | author=Phil Simon | year=March 18, 2013 | pages=89 | isbn=978-1118638170 | url=http://books.google.gr/books?id=Dn-Gdoh66sgC&amp;pg=PA89#v=onepage&amp;q&amp;f=false}} &lt;/ref&gt;

[[Tom M. Mitchell]] provided a widely quoted, more formal definition: "A computer program is said to learn from experience E with respect to some class of tasks T and performance measure P, if its performance at tasks in T, as measured by P, improves with experience E".&lt;ref&gt;* Mitchell, T. (1997). ''Machine Learning'', McGraw Hill. ISBN 0-07-042807-7, p.2.&lt;/ref&gt;  This definition is notable for its defining machine learning in fundamentally [[Operational definition|operational]] rather than cognitive terms, thus following [[Alan Turing]]'s proposal in Turing's paper "[[Computing Machinery and Intelligence]]" that the question "Can machines think?" be replaced with the question "Can machines do what we (as thinking entities) can do?"&lt;ref&gt;{{Citation |chapterurl=http://eprints.ecs.soton.ac.uk/12954/ |first=Stevan |last=Harnad |year=2008 |chapter=The Annotation Game: On Turing (1950) on Computing, Machinery, and Intelligence |editor1-last=Epstein |editor1-first=Robert |editor2-last=Peters |editor2-first=Grace |title=The Turing Test Sourcebook: Philosophical and Methodological Issues in the Quest for the Thinking Computer |location= |publisher=Kluwer |isbn= }}&lt;/ref&gt;

==Generalization==

Generalization in this context is the ability of an algorithm to perform accurately on new, unseen examples after having trained on a learning data set. The core objective of a learner is to generalize from its experience.&lt;ref&gt;[[Christopher M. Bishop]] (2006) ''Pattern Recognition and Machine Learning'', Springer ISBN 0-387-31073-8.&lt;/ref&gt;&lt;ref&gt;[[Mehryar Mohri]], Afshin Rostamizadeh, Ameet Talwalkar (2012) ''Foundations of Machine Learning'', The
MIT Press ISBN 9780262018258.&lt;/ref&gt; The training examples come from some generally unknown probability distribution and the learner has to extract from them something more general, something about that distribution, that allows it to produce useful predictions in new cases.

==Machine learning and data mining==
These two terms are commonly confused, as they often employ the same methods and overlap significantly. They can be roughly defined as follows:
* Machine learning focuses on prediction, based on ''known'' properties learned from the training data.
* [[Data mining]] (which is the analysis step of [[Knowledge discovery|Knowledge Discovery]] in Databases) focuses on the [[discovery (observation)|discovery]] of (previously) ''unknown'' properties on the data.

The two areas overlap in many ways: data mining uses many machine learning methods, but often with a slightly different goal in mind. On the other hand, machine learning also employs data mining methods as "unsupervised learning" or as a preprocessing step to improve learner accuracy. Much of the confusion between these two research communities (which do often have separate conferences and separate journals, [[ECML PKDD]] being a major exception) comes from the basic assumptions they work with: in machine learning, performance is usually evaluated with respect to the ability to ''reproduce known'' knowledge, while in Knowledge Discovery and Data Mining (KDD) the key task is the discovery of previously ''unknown'' knowledge. Evaluated with respect to known knowledge, an uninformed (unsupervised) method will easily be outperformed by supervised methods, while in a typical KDD task, supervised methods cannot be used due to the unavailability of training data.

==Human interaction==

Some machine learning systems attempt to eliminate the need for human [[Intuition (knowledge)|intuition]] in data analysis, while others adopt a collaborative approach between human and machine. Human intuition cannot, however, be entirely eliminated, since the system's designer must specify how the data is to be represented and what mechanisms will be used to search for a characterization of the data.

==Algorithm types==&lt;!--This section is linked from [[Learning]]--&gt;

Machine learning [[algorithm]]s can be organized into a [[Taxonomy (general)|taxonomy]] based on the desired outcome of the algorithm or the type of input available during training the machine {{citation needed|date=March 2013}}.
* '''[[Supervised learning]]''' generates a function that maps inputs to desired outputs (also called '''labels''', because they are often provided by human experts labeling the training examples). For example, in a [[statistical classification|classification]] problem, the learner approximates a function mapping a vector into classes by looking at input-output examples of the function.
* '''[[Unsupervised learning]]''' models a set of inputs, like clustering. See also [[data mining]] and knowledge discovery. Here, labels are not known during training.
* '''[[Semi-supervised learning]]''' combines both labeled and unlabeled examples to generate an appropriate function or classifier. '''[[Transduction (machine learning)|Transduction]]''', or ''transductive inference'',  tries to predict new outputs on specific and fixed (test) cases from observed, specific (training) cases.
* '''[[Reinforcement learning]]''' learns how to act given an observation of the world. Every action has some impact in the environment, and the environment provides feedback in the form of rewards that guides the learning algorithm.
* '''[[Learning to learn]]''' learns its own [[inductive bias]] based on previous experience.
* [[Developmental robotics|Developmental learning]], elaborated for [[Robot learning]], generates its own sequences (also called curriculum) of learning situations to cumulatively acquire repertoires of novel skills through autonomous self-exploration and social interaction with human teachers, and using guidance mechanisms such as active learning, maturation, motor synergies, and imitation.

==Theory==
{{Main|Computational learning theory}}

The computational analysis of machine learning algorithms and their performance is a branch of [[theoretical computer science]] known as [[computational learning theory]]. Because training sets are finite and the future is uncertain, learning theory usually does not yield guarantees of the performance of algorithms. Instead, probabilistic bounds on the performance are quite common.

In addition to performance bounds, computational learning theorists study the time complexity and feasibility of learning. In computational learning theory, a computation is considered feasible if it can be done in polynomial time. There are two kinds of [[time complexity]] results. Positive results show that a certain class of functions can be learned in [[polynomial time]]. Negative results show that certain classes cannot be learned in polynomial time.

There are many similarities between machine learning theory and [[statistical inference]], although they use different terms.

==Approaches==

{{Main|List of machine learning algorithms}}

===Decision tree learning===
{{Main|Decision tree learning}}

Decision tree learning uses a [[decision tree]] as a [[predictive modelling|predictive model]] which maps observations about an item to conclusions about the item's target value.

===Association rule learning===
{{Main|Association rule learning}}

Association rule learning is a method for discovering interesting relations between variables in large databases.

===Artificial neural networks===
{{Main|artificial neural network}}

An [[artificial neural network]] (ANN) learning algorithm, usually called "neural network" (NN), is a learning algorithm that is inspired by the structure and functional aspects of [[biological neural networks]]. Computations are structured in terms of an interconnected group of [[artificial neuron]]s, processing information using a [[connectionism|connectionist]] approach to [[computation]]. Modern neural networks are [[non-linear]] [[statistical]] [[data modeling]] tools. They are usually used to model complex relationships between inputs and outputs, to [[pattern recognition|find patterns]] in data, or to capture the statistical structure in an unknown [[joint probability distribution]] between observed variables.

===Inductive logic programming===
{{Main|Inductive logic programming}}

Inductive logic programming (ILP) is an approach to rule learning using [[logic programming]] as a uniform representation for examples, background knowledge, and hypotheses. Given an encoding of the known background knowledge and a set of examples represented as a logical database of facts, an ILP system will derive a hypothesized logic program which [[Entailment|entails]] all the positive and none of the negative examples.

===Support vector machines===
{{Main|Support vector machines}}

Support vector machines (SVMs) are a set of related [[supervised learning]] methods used for [[statistical classification|classification]] and [[regression analysis|regression]]. Given a set of training examples, each marked as belonging to one of two categories, an SVM training algorithm builds a model that predicts whether a new example falls into one category or the other.

===Clustering===
{{Main|Cluster analysis}}
Cluster analysis is the assignment of a set of observations into subsets (called ''clusters'') so that observations within the same cluster are similar according to some predesignated criterion or criteria, while observations drawn from different clusters are dissimilar. Different clustering techniques make different assumptions on the structure of the data, often defined by some ''similarity metric'' and evaluated for example by ''internal compactness'' (similarity between members of the same cluster) and ''separation'' between different clusters. Other methods are based on ''estimated density'' and ''graph connectivity''.
Clustering is a method of [[unsupervised learning]], and a common technique for [[statistics|statistical]] [[data analysis]].

===Bayesian networks===
{{Main|Bayesian network}}

A Bayesian network, belief network or directed acyclic graphical model is a [[graphical model|probabilistic graphical model]] that represents a set of [[random variables]] and their [[conditional independence|conditional independencies]] via a [[directed acyclic graph]] (DAG). For example, a Bayesian network could represent the probabilistic relationships between diseases and symptoms. Given symptoms, the network can be used to compute the probabilities of the presence of various diseases. Efficient algorithms exist that perform [[inference]] and learning.

===Reinforcement learning===
{{Main|Reinforcement learning}}

Reinforcement learning is concerned with how an ''agent'' ought to take ''actions'' in an ''environment'' so as to maximize some notion of long-term ''reward''. Reinforcement learning algorithms attempt to find a ''policy'' that maps ''states'' of the world to the actions the agent ought to take in those states. Reinforcement learning differs from the [[supervised learning]] problem in that correct input/output pairs are never presented, nor sub-optimal actions explicitly corrected.

===Representation learning===

Several learning algorithms, mostly [[unsupervised learning]] algorithms, aim at discovering better representations of the inputs provided during training. Classical examples include [[principal components analysis]] and [[cluster analysis]]. Representation learning algorithms often attempt to preserve the information in their input but transform it in a way that makes it useful, often as a pre-processing step before performing classification or predictions, allowing to reconstruct the inputs coming from the unknown data generating distribution, while not being necessarily faithful for configurations that are implausible under that distribution. [[Manifold learning]] algorithms attempt to do so under the constraint that the learned representation is low-dimensional. [[Sparse coding]] algorithms attempt to do so under the constraint that the learned representation is sparse (has many zeros). [[Multilinear subspace learning]] algorithms aim to learn low-dimensional representations directly from [[tensor]] representations for multidimensional data, without reshaping them into (high-dimensional) vectors.&lt;ref&gt;{{cite journal
 |first=Haiping |last=Lu
 |first2=K.N. |last2=Plataniotis
 |first3=A.N. |last3=Venetsanopoulos
 |url=http://www.dsp.utoronto.ca/~haiping/Publication/SurveyMSL_PR2011.pdf
 |title=A Survey of Multilinear Subspace Learning for Tensor Data
 |journal=Pattern Recognition
 |volume=44 |number=7 |pages=1540–1551 |year=2011
 |doi=10.1016/j.patcog.2011.01.004
}}&lt;/ref&gt; [[Deep learning]] algorithms discover multiple levels of representation, or a hierarchy of features, with higher-level, more abstract features defined in terms of (or generating) lower-level features. It has been argued that an intelligent machine is one that learns a representation that disentangles the underlying factors of variation that explain the observed data.&lt;ref&gt;
{{cite book
 | title = Learning Deep Architectures for AI
 | author = Yoshua Bengio
 | publisher = Now Publishers Inc.
 | year = 2009
 | isbn = 978-1-60198-294-0
 | pages = 1–3
 | url = http://books.google.com/books?id=cq5ewg7FniMC&amp;pg=PA3
 }}&lt;/ref&gt;

===Similarity and metric learning===
{{Main|Similarity learning}}

In this problem, the learning machine is given pairs of examples that are considered similar and pairs of less similar objects. It then needs to learn a similarity function (or a distance metric function) that can predict if new objects are similar. It is sometimes used in [[Recommendation systems]].

===Sparse Dictionary Learning===
In this method, a datum is represented as a linear combination of basis functions, and the coefficients are assumed to be sparse. Let ''x'' be a ''d''-dimensional datum, ''D'' be a ''d'' by ''n'' matrix, where each column of ''D'' represents a basis function. ''r'' is the coefficient to represent ''x'' using ''D''. Mathematically, sparse dictionary learning means the following
&lt;math&gt;
 x \approx D \times r
&lt;/math&gt;
where ''r'' is sparse. Generally speaking, ''n'' is assumed to be larger than ''d'' to allow the freedom for a sparse representation.

Sparse dictionary learning has been applied in several contexts. In classification, the problem is to determine which classes a previously unseen datum belongs to. Suppose a dictionary for each class has already been built. Then a new datum is associated with the class such that it's best sparsely represented by the corresponding dictionary. Sparse dictionary learning has also been applied in image de-noising. The key idea is that a clean image path can be sparsely represented by an image dictionary, but the noise cannot.&lt;ref&gt;Aharon, M, M Elad, and A Bruckstein. 2006. “K-SVD: An Algorithm for Designing Overcomplete Dictionaries for Sparse Representation.” Signal Processing, IEEE Transactions on 54 (11): 4311-4322&lt;/ref&gt;

==Applications==
{{unreferenced section|date=February 2013}}
Applications for machine learning include:

{{refbegin|2}}
* [[Machine perception]]
* [[Computer vision]]
* [[Natural language processing]]
* [[Syntactic pattern recognition]]
* [[Search engines]]
* [[Diagnosis (artificial intelligence)|Medical diagnosis]]
* [[Bioinformatics]]
* [[Brain-machine interfaces]]
* [[Cheminformatics]]
* Detecting [[credit card fraud]]
* [[Stock market]] analysis
* Classifying [[DNA sequence]]s
* [[Sequence mining]]
* [[Speech recognition|Speech]] and [[handwriting recognition]]
* [[Object recognition]] in [[Computer vision]]
* [[Strategy game|Game playing]]
* [[Software engineering]]
* [[Adaptive website]]s
* [[Robot locomotion]]
* [[Computational Advertising]]
* [[Computational finance]]
* [[Structural health monitoring]].
* [[Sentiment analysis|Sentiment Analysis (or Opinion Mining)]].
* [[Affective computing]]
* [[Information Retrieval]]
* [[Recommender system]]s
{{refend}}

In 2006, the online movie company [[Netflix]] held the first "[[Netflix Prize]]" competition to find a program to better predict user preferences and improve the accuracy on its existing Cinematch movie recommendation algorithm by at least 10%.  A joint team made up of researchers from [[AT&amp;T Labs|AT&amp;T Labs-Research]] in collaboration with the teams Big Chaos and Pragmatic Theory built an [[Ensemble Averaging|ensemble model]] to win the Grand Prize in 2009 for $1 million.&lt;ref&gt;[http://www2.research.att.com/~volinsky/netflix/ "BelKor Home Page"] research.att.com&lt;/ref&gt;

==Software==

[[Ayasdi]], [[Angoss|Angoss KnowledgeSTUDIO]], [[Apache Mahout]], [[Gesture Recognition Toolkit]], [[SPSS Modeler|IBM SPSS Modeler]], [[KNIME]], [[KXEN Inc.|KXEN Modeler]], [[LIONsolver]], [[MATLAB]], [[mlpy]], [[Monte Carlo Machine Learning Library|MCMLL]], [[OpenCV]], [[dlib]], [[Oracle Data Mining]], [[Orange (software)|Orange]], [[scikit-learn|Python scikit-learn]], [[R (programming language)|R]], [[RapidMiner]], Salford Predictive Modeler, [[SAS (software)#Components|SAS Enterprise Miner]], [[Shogun (toolbox)|Shogun toolbox]], [[STATISTICA|STATISTICA Data Miner]], and [[Weka (machine learning)|Weka]] are [[software suite]]s containing a variety of machine learning algorithms.

==Journals and conferences==
* [[Machine Learning (journal)|''Machine Learning'' (journal)]]
* ''[[Journal of Machine Learning Research]]''
* ''[[Neural Computation]]'' (journal)
* [http://www.degruyter.de/journals/jisys/detailEn.cfm Journal of Intelligent Systems(journal)]
* [[ICML|International Conference on Machine Learning (ICML)]] (conference)
* [[NIPS|Neural Information Processing Systems (NIPS)]] (conference)

==See also==

{{Portal|Artificial intelligence}}

{{refbegin|2}}

* [[Adaptive control]]
* [[Automatic reasoning]]
* [[Cache language model]]
* [[Computational intelligence]]
* [[Computational neuroscience]]
* [[Cognitive science]]
* [[Cognitive model]]ing
* [[Data mining]]
* [[Explanation-based learning]]
* [[Hidden Markov model]]
* [[List of machine learning algorithms]]
* [[List of important publications in computer science#Machine learning|Important publications in machine learning]]
* [[Multi-label classification]]
* [[Multilinear subspace learning]]
* [[Pattern recognition]]
* [[Predictive analytics]]
* [[Robot learning]]
* [[Developmental robotics]]

{{refend}}

==References==

{{Reflist|2}}

==Further reading==

{{Refbegin|2}}
* [[Mehryar Mohri]], Afshin Rostamizadeh, Ameet Talwalkar (2012). ''[http://www.cs.nyu.edu/~mohri/mlbook/ Foundations of Machine Learning]'', The MIT Press. ISBN 9780262018258.
* Ian H. Witten and Eibe Frank (2011). ''Data Mining: Practical machine learning tools and techniques'' Morgan Kaufmann, 664pp., ISBN 978-0123748560.
* Sergios Theodoridis, Konstantinos Koutroumbas (2009) "Pattern Recognition", 4th Edition, Academic Press, ISBN 978-1-59749-272-0.
* Mierswa, Ingo and Wurst, Michael and Klinkenberg, Ralf and Scholz, Martin and Euler, Timm: ''YALE: Rapid Prototyping for Complex Data Mining Tasks'', in Proceedings of the 12th ACM SIGKDD International Conference on Knowledge Discovery and Data Mining (KDD-06), 2006.
* Bing Liu (2007), ''[http://www.cs.uic.edu/~liub/WebMiningBook.html Web Data Mining: Exploring Hyperlinks, Contents and Usage Data].'' Springer, ISBN 3-540-37881-2
* Toby Segaran (2007), ''Programming Collective Intelligence'', O'Reilly, ISBN 0-596-52932-5
* Huang T.-M., Kecman V., Kopriva I. (2006), [http://learning-from-data.com Kernel Based Algorithms for Mining Huge Data Sets, Supervised, Semi-supervised, and Unsupervised Learning],  Springer-Verlag, Berlin, Heidelberg, 260 pp.&amp;nbsp;96 illus., Hardcover, ISBN 3-540-31681-7.
* Ethem Alpaydın (2004) ''Introduction to Machine Learning (Adaptive Computation and Machine Learning)'', MIT Press, ISBN 0-262-01211-1
* MacKay, D.J.C. (2003). ''[http://www.inference.phy.cam.ac.uk/mackay/itila/ Information Theory, Inference, and Learning Algorithms]'', Cambridge University Press.  ISBN 0-521-64298-1.
* KECMAN Vojislav (2001), [http://support-vector.ws Learning and Soft Computing, Support Vector Machines, Neural Networks and Fuzzy Logic Models], The MIT Press, Cambridge, MA, 608 pp., 268 illus., ISBN 0-262-11255-8.
* [[Trevor Hastie]], [[Robert Tibshirani]] and Jerome Friedman (2001). ''[http://www-stat.stanford.edu/~tibs/ElemStatLearn/ The Elements of Statistical Learning]'', Springer. ISBN 0-387-95284-5.
* Richard O. Duda, Peter E. Hart, David G. Stork (2001) ''Pattern classification'' (2nd edition), Wiley, New York, ISBN 0-471-05669-3.
* Bishop, C.M. (1995). ''Neural Networks for Pattern Recognition'', Oxford University Press. ISBN 0-19-853864-2.
* Ryszard S. Michalski, George Tecuci (1994), ''Machine Learning: A Multistrategy Approach'', Volume IV, Morgan Kaufmann, ISBN 1-55860-251-8.
* Sholom Weiss and Casimir Kulikowski (1991). ''Computer Systems That Learn'', Morgan Kaufmann.  ISBN 1-55860-065-5.
* Yves Kodratoff, Ryszard S. Michalski (1990), ''Machine Learning: An Artificial Intelligence Approach, Volume III'', Morgan Kaufmann, ISBN 1-55860-119-8.
* Ryszard S. Michalski, Jaime G. Carbonell, Tom M. Mitchell (1986), ''Machine Learning: An Artificial Intelligence Approach, Volume II'', Morgan Kaufmann, ISBN 0-934613-00-1.
* Ryszard S. Michalski, Jaime G. Carbonell, Tom M. Mitchell (1983), ''Machine Learning: An Artificial Intelligence Approach'', Tioga Publishing Company, ISBN 0-935382-05-4.
* Vladimir Vapnik (1998). ''Statistical Learning Theory''. Wiley-Interscience, ISBN 0-471-03003-1.
* Ray Solomonoff, ''An Inductive Inference Machine'', IRE Convention Record, Section on Information Theory, Part 2, pp., 56-62, 1957.
* [[Ray Solomonoff]], "[http://world.std.com/~rjs/indinf56.pdf An Inductive Inference Machine]" A privately circulated report from the 1956 [[Dartmouth Conferences|Dartmouth Summer Research Conference on AI]].
{{Refend}}

==External links==
* [http://machinelearning.org/ International Machine Learning Society]
* Popular online course by [[Andrew Ng]], at [http://www.ml-class.org ml-class.org]. It uses [[GNU Octave]]. The course is a free version of [[Stanford University]]'s actual course taught by Ng, whose lectures are also [http://see.stanford.edu/see/courseinfo.aspx?coll=348ca38a-3a6d-4052-937d-cb017338d7b1 available for free].
* [http://videolectures.net/Top/Computer_Science/Machine_Learning/ Machine Learning Video Lectures]

[[Category:Learning in computer vision]]
[[Category:Machine learning| ]]
[[Category:Learning]]
[[Category:Cybernetics]]</text>
      <sha1>6ud94pt1bi3c6a1e7nzs36sca5cb3jx</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>