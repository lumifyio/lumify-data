<?xml version="1.0" ?><page xmlns="http://www.mediawiki.org/xml/export-0.8/" version="0.8">
    <title>RCFile</title>
    <ns>0</ns>
    <id>31882591</id>
    <revision>
      <id>539038321</id>
      <parentid>534097152</parentid>
      <timestamp>2013-02-19T13:41:59Z</timestamp>
      <contributor>
        <ip>62.159.77.167</ip>
      </contributor>
      <comment>/* See also */ related column databases data storages</comment>
      <text xml:space="preserve">{{context|date=June 2011}}
'''RCFile''' (Record Columnar File) is a data placement structure that determines how to store [[Table (database)|relational tables]] on [[computer clusters]]. It is designed for [[data warehouse]] systems using the [[MapReduce]] framework. The RCFile structure is a systematic combination of multiple components including data storage format, data compression approach, and optimization techniques for data reading. It is able to meet all the four requirements of data placement: (1) fast data loading, (2) fast query processing, (3) highly efficient storage space utilization, and (4) a strong adaptivity to dynamic data access patterns.

RCFile is a result of basic research with collaborative efforts from Facebook, [[Ohio State University]], and [http://english.ict.cas.cn/ Institute of Computing Technology], [[Chinese Academy of Sciences]]. A research paper entitled “RCFile: a Fast and Space-efficient Data Placement Structure in MapReduce-based Warehouse systems”&lt;ref name="YongqiangHe"&gt;Yongqiang He, Rubao Lee, Yin Huai, Zheng Shao, Namit Jain, Xiaodong Zhang, Zhiwei Xu, "RCFile: A Fast and Space-efficient Data Placement Structure in MapReduce-based Warehouse Systems", Proceedings of the IEEE International Conference on Data Engineering (ICDE), 2011. http://www.cse.ohio-state.edu/hpcs/WWW/HTML/publications/abs11-4.html&lt;/ref&gt; was published and presented in [http://www.icde2011.org/ ICDE’ 11]. The data placement structure and its implementation presented in the paper have been widely adopted in the open source community, big data analytics industries, and application users. See the section of [[#Impacts|Impacts]].

==Summary==

===Data storage format===
In a relational database, data is organized as two-dimensional tables. For example, a table in a database consists of 4 columns (c1 to c4):
{| class="wikitable"
|-
! c1  !! c2 !! c3 !! c4
|-
| 11 || 12 || 13 || 14
|-
| 21 || 22 || 23 || 24
|-
| 31 || 32 || 33 || 34
|-
| 41 || 42 || 43 || 44
|-
| 51 || 52 || 53 || 54
|}
To serialize the table, RCFile partitions this table first horizontally and then vertically, instead of only partitioning the table horizontally like the row-oriented  DBMS (row-store). The horizontal partitioning will first partition the table into multiple row groups based on the row-group size, which is a user-specified value determining the size of each row group. For example, the table mentioned above can be partitioned to two row groups.
{| class="wikitable" style="text-align:center; float:left; margin-right:5px"
|+Row Group 1
|-
! c1  !! c2 !! c3 !! c4
|-
| 11 || 12 || 13 || 14
|-
| 21 || 22 || 23 || 24
|-
| 31 || 32 || 33 || 34
|}

{| class="wikitable" style="text-align:center; float:left; margin-left:5px"
|+Row Group 2
|-
! c1  !! c2 !! c3 !! c4
|-
| 41 || 42 || 43 || 44
|-
| 51 || 52 || 53 || 54
|}

&lt;br clear="all" /&gt;
Then, in every row group, RCFile partitions the data vertically like column-store. Thus, the table will be serialized as:
       
       Row Group 1     Row Group 2 
       11, 21, 31;     41, 51;
       12, 22, 32;     42, 52;
       13, 23, 33;     43, 53;
       14, 24, 34;     44, 54;

===Column data compression===
Within each row group, columns are compressed to reduce storage space usage. Since data of a column are stored adjacently, the pattern of a column can be detected and thus the suitable compression algorithm can be selected for a high compression ratio.

===Performance Benefits===
In data warehousing systems, column-store is more efficient when a query only projects a subset of columns, because column-store only read necessary columns from disks but row-store will read an entire row. In MapReduce-based data warehousing systems, data is normally stored on a distributed system, such as [[Apache_Hadoop#Hadoop_Distributed_File_System|Hadoop Distributed File System (HDFS)]], and different data blocks might be stored in different machines. Thus, for column-store on MapReduce, different groups of columns might be stored on different machines, which introduces extra network costs when a query projects columns placed on different machines. For MapReduce-based data warehousing systems, the merit of row-store is that there is no extra network costs to construct a row in query processing, and the merit of column-store is that there is no unnecessary local I/O costs when read data from disks. 

RCFile combines merits of row-store and column-store via horizontal-vertical partitioning. With horizontal partitioning, RCFile places all columns of a row in a single machine and thus can eliminate the extra network costs when constructing a row. With vertical partitioning, for a query, RCFile will only read necessary columns from disks and thus can eliminate the unnecessary local I/O costs. Moreover, in every row group, data compression can be done by using [[Column-oriented_DBMS#Compression|compression algorithms used in column-store]].

==Impacts==

RCFile has been adopted in major real-world systems for big data analytics.  Here is a list of representative examples.
 
# RCFile has become the default data placement structure in Facebook's production data warehouse cluster.&lt;ref name="hiveIntegration"&gt;http://www.slideshare.net/ydn/2-hive-integrationhadoopsummit2010&lt;/ref&gt; This is so far the world's largest Hadoop cluster,&lt;ref&gt;http://hadoopblog.blogspot.com/2010/05/facebook-has-worlds-largest-hadoop.html&lt;/ref&gt; where 40 terabytes compressed data sets are added every day.&lt;ref&gt;http://www.slideshare.net/ydn/ahis2011-platform-hive-evolution&lt;/ref&gt; In addition, all the data sets stored in the warehouse before RCFile have also been  transformed to use the RCFile structure.&lt;ref name="hiveIntegration" /&gt;
# RCFile has been adopted in [[Apache Hive]] (since v0.4),&lt;ref&gt;http://hive.apache.org/docs/r0.4.0/api/org/apache/hadoop/hive/ql/io/RCFile.html&lt;/ref&gt; which is an open source data warehousing system running on top of Hadoop and is being widely used in various companies around the world,&lt;ref&gt;https://cwiki.apache.org/confluence/display/Hive/PoweredBy&lt;/ref&gt; including several major Internet services, such as [[Facebook]], [[Taobao]], and [[Netflix]].&lt;ref&gt;http://www.slideshare.net/evamtse/hive-user-group-presentation-from-netflix-3182010-3483386&lt;/ref&gt;
# RCFile has been adopted in [[Pig (programming language)|Apache Pig]] (since v0.7),&lt;ref&gt;http://pig.apache.org/docs/r0.7.0/api/org/apache/pig/piggybank/storage/hiverc/HiveRCInputFormat.html&lt;/ref&gt; which is another open source data processing system being widely used in many organizations,&lt;ref&gt;https://cwiki.apache.org/confluence/display/PIG/PoweredBy&lt;/ref&gt; including several major Web service providers, such as [[Twitter]], [[Yahoo]], [[Linkedin]], [[AOL]], and [[Salesforce.com]].
# RCFile has become the de facto standard data storage structure in Hadoop software environment supported by [http://incubator.apache.org/hcatalog/ HCatalog project] (formerly known as [http://wiki.apache.org/pig/Howl Howl]) that is the table and storage management service for Hadoop.&lt;ref&gt;http://incubator.apache.org/hcatalog/docs/r0.4.0/&lt;/ref&gt; RCFile is also supported by the open source [https://github.com/kevinweil/elephant-bird Elephant Bird library] that is used in production in Twitter for daily data analytics.&lt;ref&gt;https://github.com/kevinweil/elephant-bird&lt;/ref&gt;

==See also==
* [[Column (data store)]]
* [[Column-oriented DBMS]]
* [[MapReduce]]
* [[Hadoop]]
* [[Apache Hive]]
* [[Big data]]

==References==
{{Reflist}}

==External links==
* [http://hive.apache.org/docs/r0.7.0/api/org/apache/hadoop/hive/ql/io/RCFile.html RCFile APIs]
* [http://svn.apache.org/viewvc/hive/trunk/ql/src/java/org/apache/hadoop/hive/ql/io/RCFile.java Source Code]
* [http://hive.apache.org/ Hive website]
* [http://wiki.apache.org/hadoop/Hive Hive page on Hadoop Wiki]

[[Category:Data analysis software]]</text>
      <sha1>rmy1du584o2sy0wzx3pawbyceqvt7c7</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>