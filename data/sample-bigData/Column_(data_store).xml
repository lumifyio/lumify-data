<?xml version="1.0" ?><page xmlns="http://www.mediawiki.org/xml/export-0.8/" version="0.8">
    <title>Column (data store)</title>
    <ns>0</ns>
    <id>31330853</id>
    <revision>
      <id>422686000</id>
      <parentid>422460276</parentid>
      <timestamp>2011-04-06T12:45:14Z</timestamp>
      <contributor>
        <username>Jncraton</username>
        <id>6799074</id>
      </contributor>
      <comment>Repairing links to disambiguation pages - [[Wikipedia:Disambiguation pages with links|You can help!]] using [[Project:AWB|AWB]]</comment>
      <text xml:space="preserve">[[Image:Column (data store).png|220px|thumb|A column consists of a (unique) name, a value, and a timestamp.]]
A '''column''' of a [[distributed data store]] is a [[NoSQL (concept)|NoSQL]] object of the lowest level in a [[Keyspace (data model)|keyspace]]. It is a [[tuple]] (a [[key-value pair]]) consisting of three elements:&lt;ref&gt;{{cite web
| accessdate = 2011-03-29
| date = 
| author = Chaker Nakhli
| location = 
| publisher = Chaker Nakhli's Blog - Yet another technical blog.
| title = Cassandraâ€™s data model cheat sheet: Data model elements: Column
| quote = A name value pair [consisting of a name and a value] (contains also a time-stamp, not represented here for the sake of clarity).
| url = http://www.javageneration.com/?p=70}}&lt;/ref&gt;
* Unique name: Used to reference the column
* Value: The content of the column. It can have different types, like &lt;code&gt;AsciiType&lt;/code&gt;, &lt;code&gt;LongType&lt;/code&gt;, &lt;code&gt;TimeUUIDType&lt;/code&gt;, &lt;code&gt;UTF8Type&lt;/code&gt; among others.
* [[Timestamp]]: The system timestamp used to determine the valid content.

==Usage==
The column is used as a store for the value and has a timestamp that is used to differentiate the valid content from stale ones. According to the [[CAP theorem]], distributed data stores cannot guarantee [[Consistency (database systems)|consistency]], as [[availability]] is a more important issue. Therefore, the data store or the application programmer will use the timestamp to find out which of the stored values in the backup nodes are up-to-date.

Some data stores, like [[Apache Cassandra]] 0.7, may use the more sophisticated [[vector clock]] instead of the timestamp to resolve stale information.&lt;ref&gt;{{cite web
| accessdate = 2011-03-29
| location = http://io.typepad.com/
| publisher = Eben Hewitt's Cassandra Guide
| title = Apache Cassandra Glossary: Terms: Vector Clock
| quote = A Vector Clock event synchronization strategy will likely be introduced in Cassandra 0.7.
| url = http://io.typepad.com/glossary.html}}&lt;/ref&gt;

==Differences to a relational database==

In [[relational database]]s, a column is a part of a relational table that can be seen in each row of the table. This is not the case in distributed data stores, where the concept of a table only vaguely exists. A column can be part of a [[ColumnFamily]] that resembles at most a relational row, but it may appear in one row and not in the others. Also, the number of columns may change from row to row, and new updates to the data store model may also modify the column number. So, all the work of keeping up with changes relies on the application programmer.

==Examples==

In [[JSON|JSON-like]] notation, three column definitions are given:

&lt;source lang="sql"&gt;
    street: {name: "street", value: "1234 x street", timestamp: 123456789},
    city: {name: "city", value: "san francisco", timestamp: 123456789},
    zip: {name: "zip", value: "94107", timestamp: 123456789},
 }
&lt;/source&gt;

==See also==
* [[Super column]]

==References==
{{reflist}}

==External links==
* [http://blog.insidesystems.net/understanding-the-cassandra-data-model-from-a The Apache Cassandra data model]

&lt;!--Interwikies--&gt;

&lt;!--Categories--&gt;
[[Category:NoSQL]]</text>
      <sha1>6vxu8pcfyhkgxokjfuoh90i3fj0qx8c</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>