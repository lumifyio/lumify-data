<?xml version="1.0" ?><page xmlns="http://www.mediawiki.org/xml/export-0.8/" version="0.8">
    <title>Column family</title>
    <ns>0</ns>
    <id>31218149</id>
    <revision>
      <id>424169108</id>
      <parentid>422685689</parentid>
      <timestamp>2011-04-15T08:51:22Z</timestamp>
      <contributor>
        <username>Sae1962</username>
        <id>9339182</id>
      </contributor>
      <minor></minor>
      <comment>Added a category</comment>
      <text xml:space="preserve">A '''column family''' is a [[NoSQL (concept)|NoSQL]] object that contains columns of related data. It is a [[tuple]] (pair) that consists of a [[key-value pair]], where the key is mapped to a value that is a set of columns. In analogy with relational databases, a column family is as a "table", each key-value pair being a "row".&lt;ref&gt;{{cite web
| accessdate = 2011-03-18
| publisher = Max's Output
| title = Column Families 101
| url = http://wiki.toadforcloud.com/index.php/Column_Families_101}}&lt;/ref&gt; Each column is a [[tuple]] ([[triplet]]) consisting of a column name, a value, and a [[timestamp]].&lt;ref&gt;{{cite web
| accessdate = 2011-03-18
| author = Max's Output
| publisher = Max Grinev
| title = A Quick Introduction to the Cassandra Data Model: 1) Cassandra is based on a key-value model
| quote = A column family is a set of key-value pairs. I know the terminology is confusing but so far it is just basic key-value model. Drawing an analogy with relational databases, you can think about column family as table and a key-value pair as a record in a table.
| url = http://maxgrinev.com/2010/07/09/a-quick-introduction-to-the-cassandra-data-model/}}&lt;/ref&gt; In a [[Relational database|relational]] [[database table]], this data would be grouped together within a table with other non-related data.&lt;ref&gt;{{cite web
| accessdate = 2011-03-18
| publisher = Toad for Cloud
| title = Column Families 101
| url = http://wiki.toadforcloud.com/index.php/Column_Families_101}}&lt;/ref&gt;

Two types of column families exist:&lt;ref&gt;{{cite web
| accessdate = 2011-03-18
| publisher = Arin Sarkissian
| title = A ColumnFamily Can Be Super Too
| quote = Now, a ColumnFamily can be of type Standard or Super.
 
What we just went over was an example of the Standard type. What makes it Standard is the fact that all the Rows contains a map of normal (aka not-Super) Columns… there’s no SuperColumns scattered about.
 
When a ColumnFamily is of type Super we have the opposite: each Row contains a map of SuperColumns. The map is keyed with the name of each SuperColumn and the value is the SuperColumn itself. And, just to be clear, since this ColumnFamily is of type Super, there are no Standard ColumnFamily‘s in there.
| url = http://arin.me/blog/wtf-is-a-supercolumn-cassandra-data-model}}&lt;/ref&gt;

* [[Standard column family]]: contains only columns
* [[Super column family]]: contains a map of [[super column]]s.

==See also==
* [[Keyspace (NoSQL)]]

==References==
{{reflist}}

==External links==
* [http://blog.insidesystems.net/understanding-the-cassandra-data-model-from-a The Apache Cassandra data model]

&lt;!--Categories--&gt;
[[Category:Distributed data stores]]
[[Category:NoSQL]]

&lt;!--Interwikies--&gt;</text>
      <sha1>eggymebtllhlodmj1gwaa04irkgx50r</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>