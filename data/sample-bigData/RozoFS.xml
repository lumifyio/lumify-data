<?xml version="1.0" ?><page xmlns="http://www.mediawiki.org/xml/export-0.8/" version="0.8">
    <title>RozoFS</title>
    <ns>0</ns>
    <id>35171159</id>
    <revision>
      <id>543474843</id>
      <parentid>539295803</parentid>
      <timestamp>2013-03-11T19:09:00Z</timestamp>
      <contributor>
        <username>Sandymac</username>
        <id>89895</id>
      </contributor>
      <minor></minor>
      <comment>fix typo: added fourth e to heterogeneous so that it means 'consisting of dissimilar elements'</comment>
      <text xml:space="preserve">{{Infobox software
| developer              = Fizians, SAS.
| latest release version = 0.8.8
| latest release date    = {{release date|2012|06|18|df=yes}}
| operating system       = [[Linux]], [[Mac OS X]], [[NetBSD]], [[FreeBSD]], [[OpenSolaris]]
| genre                  = [[Distributed file system]]
| license                = [[GPLv2|GNU General Public License v2]]
| website                = {{URL|http://www.rozofs.org}}
}}

'''RozoFS''' is a scale-out [[Network-attached storage|NAS]] [[file system]].  It comes as a free software, licensed under the GNU [[General Public License|GPL]] v2. RozoFS provides an easy way to scale to petabytes storage but using erasure coding&lt;ref&gt;{{cite journal|last=Microsoft Research|coauthors=ZHANG, Z., DESHPANDE, A., MA, X., THERESKA, E., AND NARAYANAN|title=Does erasure coding have a role to play in my data center?|journal=Tech. Rep. MSR-TR-2010-52|year=2010|month=May}}&lt;/ref&gt;  it was designed to provide very high availability levels with optimized raw capacity usage on heterogeneous commodity hardware. RozoFS well fits every environment dealing with  huge among of data as:

* [[Big data]] ;
* [[Cloud computing]] ;
* [[Multimedia]] applications ;
* [[Backup]] and archival storage.

== Design ==

Rozo provide a native open source POSIX filesystem, build on top of a usual out-band scale-out storage architecture as [[Google File System]], [[Lustre (file system)|Lustre]] or [[Ceph (file system)|Ceph]]. The Rozo specificity lies in the way data is stored. The data to be stored is translated into several chunks using [[Mojette Transform]]&lt;ref&gt;{{cite book|last=Jeanpierre|first=Guédon|title=The Mojette Transform theory and applications|year=2009|publisher=ISTE-WILEY|isbn=9781848210806}}&lt;/ref&gt; and distributed across storage devices in such a way that it can be retrieved even if several pieces are unavailable. On the other hand, chuncks are meaningless alone.&lt;ref&gt;{{cite journal|coauthors=J. P. Guédon , B. Parrein , N. Normand|title=Secure Distributed Storage based on the Mojette transform|journal=Integrated Computer-Aided Engineering v.8 n.3|year=2001|month=August|pages=p.205–214}}&lt;/ref&gt; Redundancy schemes based on coding techniques like the one used by RozoFS allow to achieve signiﬁcant storage savings as compared to simple replication.&lt;ref&gt;{{cite journal|coauthors=Weatherspoon, Hakim and Kubiatowicz, John|title=Erasure Coding Vs. Replication: A Quantitative Comparison|journal=Revised Papers from the First International Workshop on Peer-to-Peer Systems|year=2002|series=IPTPS '01|pages=328–338|publisher=Springer-Verlag}}&lt;/ref&gt;&lt;ref&gt;{{cite journal|coauthors=Rodrigues, Rodrigo and Liskov, Barbara|title=High availability in DHTs: erasure coding vs. replication|journal=Proceedings of the 4th international conference on Peer-to-Peer Systems|year=2005|series=IPTPS'05|pages=226–239|doi=10.1007/11558989_21|url=http://dx.doi.org/10.1007/11558989_21|publisher=Springer-Verlag}}&lt;/ref&gt;

The file system comprises three components:

* Exports server — (Meta Data Server) manages the location (layout) of chunks (ensure the best capacity load balancing with respect to high availability), file access and namespace (hierarchy). Multiple replicated metadata servers are used to provide [[failover]].The Exports server is a user-space [[daemon (computer software)|daemon]]; the metadata are stored synchroneously to a usual file system (the underlying file system must support extended attributes).

* Storage servers — (Chunk Server) store the chunks. The Chunk server is also a user-space [[daemon (computer software)|daemon]] that relies on the underlying local file system to manage the actual storage.

* Clients — talk to both the exports server and chunk servers and are responsible of data transformation. Clients mount the file system into user-space via [[Filesystem in Userspace|FUSE]].

== Features ==

* Software only (hardware agnostic) ;
* Global namespaces ;
* Scale up and out ;
* Constant Performances ;
* Continuous Availability ;
* Storage backend agnostic (DAS,&lt;ref group="note"&gt;[[Direct-attached storage]]&lt;/ref&gt; SAN,&lt;ref group="note"&gt;[[Storage area network]]&lt;/ref&gt; NAS,&lt;ref group="note"&gt;[[Network-attached storage]]&lt;/ref&gt; Public [[Cloud Storage]]).

== See also ==

{{Portal|Free software}}
* [[Mojette Transform]]
* [[Distributed file system]]
* [[List of file systems#Distributed parallel fault-tolerant file systems|List of file systems, the distributed parallel fault-tolerant file system section]]
* [[GlusterFS]]
* [[Ceph (file system)|Ceph]]
* [[FhGFS|Fraunhofer Parallel File System (FhGFS)]]
* [[Moose File System|MooseFS]]

== Notes ==
{{reflist|group=note}}

== References ==
{{reflist}}

[[Category:Distributed file systems]]
[[Category:Linux file systems]]
[[Category:Network file systems]]
[[Category:User space file systems]]
[[Category:Distributed data storage]]</text>
      <sha1>p531f0p2sx6kotnp7ksw5vx5e3149yy</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>