<?xml version="1.0" ?><page xmlns="http://www.mediawiki.org/xml/export-0.8/" version="0.8">
    <title>Commodity computing</title>
    <ns>0</ns>
    <id>1470005</id>
    <revision>
      <id>561533379</id>
      <parentid>550823589</parentid>
      <timestamp>2013-06-25T15:51:58Z</timestamp>
      <contributor>
        <username>Matthiaspaul</username>
        <id>13467261</id>
      </contributor>
      <comment>Fixed spelling of PC DOS</comment>
      <text xml:space="preserve">'''Commodity computing''' (or '''Commodity cluster computing''') is to use large numbers of already available computing components for parallel computing to get the greatest amount of useful computation at low cost.&lt;ref&gt;{{cite web
| accessdate = 2010-03-07
| author = John E. Dorband
| coauthors = Josephine Palencia Raytheon, Udaya Ranawake
| publisher = Goddard Space Flight Center
| location = http://spacejournal.ohio.edu/
| title = Commodity Computing Clusters at Goddard Space Flight Center
| url = http://spacejournal.ohio.edu/pdf/Dorband.pdf
| quote = The purpose of commodity cluster computing is to utilize large numbers of readily available computing components for parallel computing to obtaining the greatest amount of useful computations for the least cost. The issue of the cost of a computational resource is key to computational science and data processing at GSFC as it is at most other places, the difference being that the need at GSFC far exceeds any expectation of meeting that need.
}}&lt;/ref&gt; It is computing done in commodity computers as opposed to high-cost supermicrocomputers or boutique computers. Commodity computers are [[computer system]]s manufactured by multiple vendors, incorporating components based on [[open standard]]s.  Such systems are said to be based on [[commodity]] components, since the standardization process promotes lower costs and less differentiation among vendors' products. A governing principle of commodity computing is that it is preferable to have more low-performance, low-cost hardware working in parallel ([[scalar computing]]) (e.g. [[Advanced Micro Devices|AMD]] x86 [[Complex instruction set computing|CISC]]&lt;ref&gt;http://www.computerworld.com/s/article/9154518/IBM_HP_servers_won_t_stop_x86_onslaught_on_Unix&lt;/ref&gt;) than to have fewer high-performance, high-cost hardware&lt;ref&gt;http://research.google.com/pubs/DistributedSystemsandParallelComputing.html&lt;/ref&gt; (e.g. IBM [[POWER7]]&lt;ref&gt;ftp://ftp.software.ibm.com/common/ssi/pm/rg/n/poo03017usen/POO03017USEN.PDF&lt;/ref&gt; [[Reduced instruction set computing|RISC]]). At some point, the number of discrete systems in a cluster will be greater than the [[mean time between failures]] (MTBF) for any hardware platform, no matter how reliable, so [[fault tolerance]] must be built into the controlling software.&lt;ref&gt;http://www.morganclaypool.com/doi/abs/10.2200/S00193ED1V01Y200905CAC006&lt;/ref&gt;&lt;ref&gt;http://insidehpc.com/2008/06/02/google-fellow-sheds-some-light-on-infrastructure-robustness-in-face-of-failure&lt;/ref&gt; Purchases should be optimized on cost-per-unit-of-performance, not just absolute performance-per-CPU at any cost.

== History ==

=== The mid-1960s to early 1980s ===
The first computers were large, expensive and proprietary.  The move towards commodity computing began when [[Digital Equipment Corporation|DEC]] introduced the [[PDP-8]] in 1965.  This was a computer that was relatively small and inexpensive enough that a department could purchase one without convening a meeting of the board of directors.  The entire [[minicomputer]] industry sprang up to supply the demand for 'small' computers like the PDP-8.  Unfortunately, each of the many different brands of minicomputers had to stand on its own because there was no software and very little hardware compatibility between the brands.

When the first general purpose [[microprocessor]] was introduced in 1974 it immediately began chipping away at the low end of the computer market, replacing [[embedded system|embedded minicomputers]] in many industrial devices.  

This process accelerated in 1977 with the introduction of the first commodity-like microcomputer, the [[Apple II]].  With the development of the [[VisiCalc]] application in 1979, microcomputers broke out of the factory and began entering office suites in large quantities, but still through the back door.

=== The 1980s to mid-1990s ===
The [[IBM PC]] was introduced in 1981 and immediately began displacing Apple II's in the corporate world, but commodity computing as we know it today truly began when [[Compaq]] developed the first true IBM PC compatible.  More and more PC-compatible microcomputers began coming into big companies through the front door and commodity computing was well established.

During the 1980s microcomputers began displacing larger computers in a serious way. At first, price was the key justification but by the late 1980s and early 1990s, [[Very-large-scale integration|VLSI]] semiconductor technology had evolved to the point where microprocessor performance began to eclipse the performance of discrete logic designs.  These traditional designs were limited by speed-of-light delay issues inherent in any CPU larger than a single chip, and performance alone began driving the success of microprocessor-based systems.

By the mid-1990s, every computer made were based on microprocessors, and the majority of general purpose microprocessors were implementations of the [[x86]] instruction set architecture. Although there was a time when every traditional computer manufacturer had its own proprietary micro-based designs there are only a few manufacturers of non-commodity computer systems today.

Today, there are fewer and fewer general business computing requirements that cannot be met with off-the shelf commodity computers.  It is likely that the low-end of the supermicrocomputer genre will continue to be pushed upward by increasingly powerful commodity microcomputers.

== Characteristics of commodity computers ==
A large part of the current commodity computing marketplace is based on [[IBM PC compatible]]s.
This typically means systems that are capable of running [[Microsoft Windows]], [[Linux]], or [[PC DOS]]/[[MS-DOS]], without requiring special drivers.

Some of the general characteristics of a commodity computer are:
* Shares a base [[instruction set]] common to many different models.
* Shares an architecture (memory, I/O map and expansion capability) that is common to many different models.
* High degree of mechanical compatibility, internal components ([[Central processing unit|CPU]], [[Random-access memory|RAM]], [[motherboard]], peripheral cards, drives) are interchangeable with other models.
* Software is widely available off-the-shelf.
* Compatible with most available peripherals, works with most right out of the box.

Other characteristics of today's commodity computers include:
* [[ATX]] motherboard form factor.
* Built-in interfaces for [[floppy drive]]s, [[Advanced Technology Attachment|IDE]] CD-ROMs and hard drives.
* Industry-standard [[Peripheral Component Interconnect|PCI]] slots for expansion.

Some characteristics that are becoming common to many commodity computers and may become part of the commodity computer definition:
* Built-in [[Ethernet]] interface.
* Built-in [[Universal Serial Bus|USB]] ports.
* Built-in video.
* Built in interfaces for [[Serial ATA|SATA]] drives.

Standards such as [[SCSI]], [[IEEE 1394 interface|FireWire]], and [[Fibre Channel]] help commodotize computer systems more powerful than typical PCs.  Standards such as [[Advanced Telecommunications Computing Architecture|ATCA]] and [[Carrier Grade Linux]] are helping to commoditize [[telecommunication]]s systems.  [[Blade server]]s, [[server farm]]s, and [[computer cluster]]s are also [[computer architecture]]s that exploit commodity [[Computer hardware|hardware]].

== Deployment ==
* [[Amazon EC2]]
* [[Baidu]]
* [[Facebook]]
* [[Google]]
* [[ImageShack]]
* [[LinkedIn]]
* [[New York Times]]
* [[Twitter]]
* [[Yahoo!]]

== See also ==
* [[Commercial off-the-shelf]] (COTS)

== References ==
{{reflist}}

== External links ==
*[http://highscalability.com/ highscalability]
*[http://insidehpc.com/2008/06/02/google-fellow-sheds-some-light-on-infrastructure-robustness-in-face-of-failure Inside HPC]
*[http://labs.google.com/papers/mapreduce-osdi04-slides/index-auto-0021.html Fault tolerance Handled via re-execution]
*[http://hadoop.apache.org/ HADOOP]
*[http://google-services.blogspot.com/2006/07/google-machine.html Google Commodity computing models]

&lt;!--Interwikies--&gt;

&lt;!--Categories--&gt;
[[Category:Computing platforms]]
[[Category:IBM PC compatibles|*]]
[[Category:Personal computers]]
[[Category:X86 microprocessors|*]]</text>
      <sha1>cmp15adpgf8dwn25g5964ao4ydd6jef</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>