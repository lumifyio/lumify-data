<?xml version="1.0" ?><page xmlns="http://www.mediawiki.org/xml/export-0.8/" version="0.8">
    <title>MultiValue</title>
    <ns>0</ns>
    <id>10633346</id>
    <revision>
      <id>559271569</id>
      <parentid>551987291</parentid>
      <timestamp>2013-06-10T19:01:26Z</timestamp>
      <contributor>
        <ip>54.240.196.185</ip>
      </contributor>
      <comment>/* History */ Removed an unneeded extra word</comment>
      <text xml:space="preserve">{{advert|date=December 2011}}

'''MultiValue''' is a type of [[NoSQL]] and [[multidimensional database]], typically considered synonymous with PICK, a database originally developed as the [[Pick operating system]].

MultiValue databases include commercial products from [[Rocket Software]], [[TigerLogic]], jBASE, Revelation, Ladybridge, [[InterSystems]], [[Northgate Information Solutions]] and other companies. These databases differ from a [[relational database]] in that they have features that support and encourage the use of attributes which can take a list of values, rather than all attributes being single-valued. They are often categorized with [[MUMPS]] within the category of [[post-relational]] databases, although the data model actually pre-dates the [[relational model]]. Unlike SQL-DBMS tools, most MultiValue  databases can be accessed both with or without [[SQL]].

==History==

Don Nelson designed the MultiValue data model in the early to mid-1960s.&lt;ref&gt;{{cite journal|last=Nelson|first=Don|year=1965|title=General Information Retrieval Language and System (GIRLS)|url=http://www.tincat-group.com/mv/GIRLS.pdf}}&lt;/ref&gt;  [[Dick Pick]], a developer at [[TRW Inc.|TRW]], worked on the first implementation of this model for the US Army in 1965. Pick considered the software to be in the public domain because it was written for the military. This was but the first dispute regarding MultiValue databases that was addressed by the courts.[http://www.microdata-alumni.org/historical.htm#history_of_pick]

Ken Simms wrote DataBASIC, sometimes known as S-BASIC, in the mid-70's. It was based on [[Dartmouth BASIC]], but had enhanced features for data management. Simms played a lot of [[Star Trek (text game)|Star Trek]] while developing the language, in order to have the language function to his satisfaction.&lt;ref&gt;{{cite book|last=Sisk|first=Jonathan|year=1987|title=PICK BASIC: A Programmer's Guide|publisher=Tab Books|url=http://jes.com/pb/index.html}}&lt;/ref&gt;

Three of the implementations of MultiValue: PICK version R77, Microdata [http://www.northgate-is.com/reality Reality] 3.x, and Prime Information 1.0, were very similar. In spite of attempts to standardize, particularly by International Spectrum and the Spectrum Manufacturers Association, who designed a logo for all to use, &lt;ref&gt;{{cite web|title=MultiValue Symbol|url=http://www.intl-spectrum.com/}}&lt;/ref&gt; there are no standards across MultiValue implementations. Subsequently, these flavors diverged, although with some cross-over. These streams of MultiValue database development could be classified as one stemming from [[Pick operating system|PICK]] R83, one from [[Microdata Corporation|Microdata]] [http://www.northgate-is.com/reality Reality], and one from [[Prime Computer|Prime]] Information.&lt;ref&gt;{{cite journal|last=Wolthuis|first=Dawn|year=2002|title=MultiValue Family Tree|url=http://www.tincat-group.com/mv/MVFamilyTreeColor.pdf}}&lt;/ref&gt; Because of the differences, some implementations have provisions for supporting several flavors of the languages. An attempt to document the similarities and differences can be found at the PRDB &lt;ref&gt;{{cite web|title=Post-Relational Database Reference|url=http://www.keyally.com/prdb/}}&lt;/ref&gt; 

Marketing groups and others in the industry over the years have classified MultiValue databases as pre-relational, post-relational, relational, and embedded, with detractors classifying it as legacy. It could now be classified as [[NoSQL (concept)|NoSQL]]. With a data model that aligns well with [[XML]] and that permits access with or without the use of SQL. 

One reasonable hypothesis for this data model lasting more than 40 years, with new database implementations of the model even in the 21st century is that it provides database solutions in a big bang for the buck fashion. Historically, with industry benchmarks tied to SQL transactions, this has been a difficult hypothesis to test, although there are considerable anecdotes of failed attempts to get the functionality of a MultiValue application into a [[relational database]] framework. 

In spite of a history of more than 40 years of implementations, starting with [[TRW Inc.|TRW]], many in the MultiValue industry have remained current so that various MultiValue implementations now employ object-oriented versions of Data BASIC, support [[AJAX]] frameworks, and because no one needs to use SQL (but some can) they fit under the [[NoSQL (concept)|NoSQL]] umbrella. In fact, MultiValue developers were the first to acquire nosql domain names, likely prior to other database products classifying their offerings as NoSQL as well. MultiValue is a seasoned data model, but with so many vendors competing in this space, it has been constantly enhanced over the years.

==Data model example==
In a MultiValue database system:
* a Database is called an "Account"
* a Table is called a "file"
* a Column is an "Attribute" or "Dictionary": attributes generally point at raw data, while dictionaries apply some transformation to the raw data

For example, assume there's a file (table) called "PERSON". And in this file there is a Dictionary (column) called "eMailAddress". The eMailAddress field can store a variable number of email address values in the single record. 

So the list [joe@abc132.info, jdb@gbmail.net, joe_bacde@thisorthat.edu] can be stored and accessed via a single query / disk read when accessing the associated record. 

To achieve the same (1-to-many) relationship within a Relational Database system one would be required to create an additional table to store the variable number of email Addresses associated to a single "PERSON" record.

==MultiValue DataBASIC==
Like the [[Java (programming language)|Java]] programming language, the typical DataBASIC compiler compiles to [[P-code (disambiguation)|P-code]] and runs in a P-machine. It has as many different implementations (compilers) as there are MultiValue databases.

Like [[PHP]] programming language, the DataBASIC language does all the typecasting for the programmer.

==MultiValue Query Language==
Known as ENGLISH, ACCESS, AQL, UniQuery, Retrieve, CMQL, and by many other names over the years, corresponding to the different MultiValue implementations, the MultiValue query language differs from [[SQL]] in several respects. Each query is issued against a single dictionary within the schema, which could be understood as a virtual file or a portal to the database through which to view the data.

:LIST PEOPLE LAST_NAME FIRST_NAME EMAIL_ADDRESSES WITH LAST_NAME LIKE "Van..."

The above statement would list all e-mail addresses for each person whose last name starts with "Van". A single entry would be output for each person, with multiple lines showing the multiple e-mail addresses (without repeating other data about the person).

==See also==
*[[jBASE]] by jBASE International
*[[Rocket U2]] (UniVerse and UniData)
*[[OpenInsight]] by Revelation
*[[OpenQM]] by Ladybridge Systems
*[[Northgate Information Solutions|Reality]] by Northgate-IS
*[[InterSystems Caché|Caché]] by InterSystems

==References==
{{reflist}}

[[Category:Databases]]
[[Category:Database management systems]]
[[Category:NoSQL]]
[[Category:Online analytical processing]]</text>
      <sha1>lxt7t4iuog45lik19iclg50q4btnzie</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>