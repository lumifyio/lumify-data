<?xml version="1.0" ?><page xmlns="http://www.mediawiki.org/xml/export-0.8/" version="0.8">
    <title>Apache Hadoop</title>
    <ns>0</ns>
    <id>5919308</id>
    <revision>
      <id>563324296</id>
      <parentid>563008967</parentid>
      <timestamp>2013-07-08T03:46:20Z</timestamp>
      <contributor>
        <ip>141.218.36.43</ip>
      </contributor>
      <comment>[[compute farms]] redlink, similar [[Server farm]]?</comment>
      <text xml:space="preserve">{{Infobox software
| name                   = Apache Hadoop
| logo                   = [[File:Hadoop logo.svg|frameless|Hadoop Logo]]
| screenshot             =
| caption                =
| developer              = [[Apache Software Foundation]]
| status                 = Active
| latest release version = 1.1.2
| latest release date    = {{release date|2013|02|15}}&lt;ref name="Hadoop Releases"&gt;{{cite web|url=http://hadoop.apache.org/releases.html |title=Hadoop Releases |publisher=Hadoop.apache.org |date= |accessdate=2013-04-08}}&lt;/ref&gt;
| latest preview version = 2.0.5-alpha
| latest preview date    = {{release date|2013|06|04}}&lt;ref name="Hadoop Releases"/&gt;
| operating system       = [[Cross-platform]]
| programming language   = [[Java (programming language)|Java]]
| genre                  = [[Distributed file system|Distributed File System]]
| posix compliant        = Not [[POSIX]]-Compliant
| license                = [[Apache License]] 2.0
| website                = {{URL|http://hadoop.apache.org/}}
}}
'''Apache Hadoop''' is an [[open source|open-source]] [[software framework]] that supports [[Big data|data-intensive]] [[distributed computing|distributed applications]], licensed under the Apache v2 license. It supports the running of applications on large clusters of [[commodity hardware]].  Hadoop was derived from [[Google]]'s [[MapReduce]] and [[Google File System]] (GFS) papers.

The Hadoop framework transparently provides both reliability and data motion to applications. Hadoop implements a computational paradigm named [[MapReduce]],&lt;ref&gt;[http://wiki.apache.org/hadoop/MapReduce map/reduce]&lt;/ref&gt; where the application is divided into many small fragments of work, each of which may be executed or re-executed on any node in the cluster. In addition, it provides a distributed file system that stores data on the compute nodes, providing very high aggregate bandwidth across the cluster. Both map/reduce and the distributed file system are designed so that node failures are automatically handled by the framework.&lt;ref&gt;"[http://wiki.apache.org/hadoop/ProjectDescription Hadoop Overview]&lt;/ref&gt; It enables applications to work with thousands of computation-independent computers and [[petabytes]] of data.
The entire Apache Hadoop “platform” is now commonly considered to consist of the Hadoop kernel, [[MapReduce]] and [[HDFS#Hadoop_Distributed_File_System|Hadoop Distributed File System]] (HDFS), as well as a number of related projects – including [[Apache Hive]], Apache [[HBase]], and others.&lt;ref&gt;[http://hadoop.apache.org/ Hadoop-related projects at hadoop.apache.org]&lt;/ref&gt;

Hadoop is written in the [[Java (programming language)|Java]] programming language and is an [[Apache Software Foundation#Projects|Apache top-level project]] being built and used by a global community of contributors.&lt;ref name="poweredby"&gt;[http://wiki.apache.org/hadoop/PoweredBy Applications and organizations using Hadoop]&lt;/ref&gt;  Hadoop and its related projects (Hive, HBase, [[Apache ZooKeeper|Zookeeper]], and so on) have many contributors from across the ecosystem.&lt;ref&gt;[http://www.ohloh.net/p/Hadoop/contributors?sort=latest_commit&amp;time_span=12+months Apache Hadoop Contributors]&lt;/ref&gt;  Though Java code is most common, any programming language can be used with "streaming" to implement the "map" and "reduce" parts of the system.&lt;ref&gt;{{cite web|url=http://www.mail-archive.com/nlpatumd@yahoogroups.com/msg00570.html |title=[nlpatumd&amp;#93; Adventures with Hadoop and Perl |publisher=Mail-archive.com |date=2010-05-02 |accessdate=2013-04-05}}&lt;/ref&gt;

==History==
Hadoop was created by [[Doug Cutting]] and [[Mike Cafarella]]&lt;ref&gt;{{cite web|url=http://web.eecs.umich.edu/~michjc/bio.html |title=Michael J. Cafarella |publisher=Web.eecs.umich.edu |date= |accessdate=2013-04-05}}&lt;/ref&gt; in 2005. Doug, who was working at Yahoo at the time,&lt;ref&gt;[http://www.sdtimes.com/blog/post/2009/08/10/Hadoop-creator-goes-to-Cloudera.aspx Hadoop creator goes to Cloudera]{{dead link|date=May 2013}}&lt;/ref&gt; named it after his son's toy elephant.&lt;ref&gt;{{cite news |title=Hadoop, a Free Software Program, Finds Uses Beyond Search  |author=Ashlee Vance |newspaper=New York Times |date=2009-03-17 |url=http://www.nytimes.com/2009/03/17/technology/business-computing/17cloud.html |accessdate=2010-01-20 | archiveurl= http://web.archive.org/web/20100211022503/http://www.nytimes.com/2009/03/17/technology/business-computing/17cloud.html?| archivedate= 11 February 2010 &lt;!--DASHBot--&gt;| deadurl= no}}&lt;/ref&gt;  It was originally developed to support distribution for the [[Nutch]] search engine project.&lt;ref&gt;"Hadoop contains the distributed computing platform that was formerly a part of Nutch. This includes the Hadoop Distributed Filesystem (HDFS) and an implementation of MapReduce." [http://hadoop.apache.org/core/ About Hadoop]{{dead link|date=May 2013}}&lt;/ref&gt;

==Architecture==
{{See also|#Hadoop Distributed File System|Apache HBase|MapReduce|l1=Hadoop Distributed File System}}

Hadoop consists of the ''Hadoop Common'' which provides access to the file systems supported by Hadoop. The Hadoop Common package contains the necessary [[JAR (file format)|Java ARchive (JAR)]] files and scripts needed to start Hadoop. The package also provides source code, documentation and a contribution section that includes projects from the Hadoop Community.{{Citation needed|date=October 2012}}

For effective scheduling of work, every Hadoop-compatible file system should provide location awareness: the name of the rack (more precisely, of the network switch) where a worker node is. Hadoop applications can use this information to run work on the node where the data is, and, failing that, on the same rack/switch, reducing backbone traffic. The [[Hadoop Distributed File System]] (HDFS) uses this method when replicating data to try to keep different copies of the data on different racks. The goal is to reduce the impact of a rack power outage or switch failure, so that even if these events occur, the data may still be readable.&lt;ref&gt;{{cite web|url=http://hadoop.apache.org/common/docs/r0.20.2/hdfs_user_guide.html#Rack+Awareness |title=HDFS User Guide |publisher=Hadoop.apache.org |date= |accessdate=2012-05-23}}{{dead link|date=May 2013}}&lt;/ref&gt;
[[File:Hadoop 1.png|thumb|upright=1.2|right|alt=Hadoop cluster|A multi-node Hadoop cluster]]

A small Hadoop cluster will include a single master and multiple worker nodes. The master node consists of a JobTracker, TaskTracker, NameNode and DataNode. A slave or ''worker node'' acts as both a DataNode and TaskTracker, though it is possible to have data-only worker nodes and compute-only worker nodes. These are normally used only in nonstandard applications.&lt;ref name=michael-noll.com_2&gt;{{cite web|title=Running Hadoop on Ubuntu Linux (Multi-Node Cluster)|url=http://www.michael-noll.com/tutorials/running-hadoop-on-ubuntu-linux-multi-node-cluster/}}&lt;/ref&gt;
Hadoop requires [[JRE|Java Runtime Environment (JRE)]] 1.6 or higher. The standard start-up and shutdown scripts require [[Secure Shell]] (ssh) to be set up between nodes in the cluster.&lt;ref name=michael-noll.com_1&gt;{{cite web|title=Running Hadoop on Ubuntu Linux (Single-Node Cluster)|url=http://www.michael-noll.com/tutorials/running-hadoop-on-ubuntu-linux-single-node-cluster/#prerequisites|accessdate=6 June 2013}}&lt;/ref&gt;

In a larger cluster, the HDFS is managed through a dedicated NameNode server to host the file system index, and a secondary NameNode that can generate snapshots of the namenode's memory structures, thus preventing file-system corruption and reducing loss of data. Similarly, a standalone JobTracker server can manage job scheduling. In clusters where the Hadoop MapReduce engine is deployed against an alternate file system, the NameNode, secondary NameNode and DataNode architecture of HDFS is replaced by the file-system-specific equivalent. Lead statistician Joe Toner has famously referred to Hadoop as a "Poor man's [[Teradata]]".{{Citation needed|date=October 2012}}

===File Systems===

====Hadoop Distributed File System ====
HDFS is a distributed, scalable, and portable file system written in [[Java (software platform)|Java]] for the Hadoop framework. Each node in a Hadoop instance typically has a single namenode; a cluster of datanodes form the HDFS cluster. The situation is typical because each node does not require a datanode to be present. Each datanode serves up blocks of data over the network using a block protocol specific to HDFS. The file system uses the [[TCP/IP]] layer for communication. Clients use [[Remote procedure call]] (RPC) to communicate between each other. HDFS stores large files (an ideal file size is a multiple of 64 [[Megabyte|MB]]&lt;ref name="hadoop.apache.org"&gt;[https://hadoop.apache.org/docs/r0.17.1/hdfs_design.html#Data+Blocks The Hadoop Distributed File System: Architecture and Design]{{dead link|date=May 2013}}&lt;/ref&gt;), across multiple machines. It achieves reliability by [[Replication (computer science)|replicating]] the data across multiple hosts, and hence does not require [[RAID]] storage on hosts. With the default replication value, 3, data is stored on three nodes: two on the same rack, and one on a different rack. Data nodes can talk to each other to rebalance data, to move copies around, and to keep the replication of data high. HDFS is not fully [[POSIX]] compliant, because the requirements for a POSIX file system differ from the target goals for a Hadoop application. The tradeoff of not having a fully POSIX-compliant file system is increased performance for data [[throughput]] and support for non-POSIX operations such as Append.&lt;ref name="openlibrary1"&gt;{{Cite document
|publisher = Amazon
|author = Yaniv Pessach
|url = http://openlibrary.org/books/OL25423189M/Distributed_Storage_Concepts_Algorithms_and_Implementations
|title = Distributed Storage
|edition = Distributed Storage: Concepts, Algorithms, and Implementations
|publication-date = 2013
|postscript = &lt;!-- Bot inserted parameter. Either remove it; or change its value to "." for the cite to end in a ".", as necessary. --&gt;{{inconsistent citations}}
}} &lt;/ref&gt; HDFS was designed to handle very large files.&lt;ref name="hadoop.apache.org"/&gt;

HDFS has recently{{when|date=March 2013}} added high-availability capabilities, allowing the main metadata server (the NameNode) to be failed over manually to a backup in the event of failure.  Automatic fail-over is being developed as well. Additionally, the file system includes what is called a ''secondary namenode,'' which misleads some people into thinking that when the primary namenode goes offline, the secondary namenode takes over. In fact, the secondary namenode regularly connects with the primary namenode and builds snapshots of the primary namenode's directory information, which is then saved to local or remote directories. These checkpointed images can be used to restart a failed primary namenode without having to replay the entire journal of file-system actions, then to edit the log to create an up-to-date directory structure. Because the namenode is the single point for storage and management of metadata, it can be a bottleneck for supporting a huge number of files, especially a large number of small files. HDFS Federation is a new addition that aims to tackle this problem to a certain extent by allowing multiple name spaces served by separate namenodes.

An advantage of using HDFS is data awareness between the job tracker and task tracker. The job tracker schedules map or reduce jobs to task trackers with an awareness of the data location. An example of this would be if node A contained data (x,y,z) and node B contained data (a,b,c). Then the job tracker will schedule node B to perform map or reduce tasks on (a,b,c) and node A would be scheduled to perform map or reduce tasks on (x,y,z). This reduces the amount of traffic that goes over the network and prevents unnecessary data transfer. When Hadoop is used with other file systems this advantage is not always available. This can have a significant impact on job-completion times, which has been demonstrated when running data-intensive jobs.&lt;ref&gt;[http://www.eng.auburn.edu/~xqin/pubs/hcw10.pdf] Improving MapReduce performance through data placement in heterogeneous Hadoop Clusters April 2010&lt;/ref&gt;

HDFS was designed for mostly immutable files&lt;ref name="openlibrary1"/&gt; and may not be suitable for systems requiring concurrent write operations.

Another limitation of HDFS is that it cannot be [[Mount (computing)|mounted]] directly by an existing operating system. Getting data into and out of the HDFS file system, an action that often needs to be performed before and after executing a job, can be inconvenient. A [[Filesystem in Userspace]] (FUSE) [[virtual file system]] has been developed to address this problem, at least for [[Linux]] and some other [[Unix]] systems.

File access can be achieved through the native Java [[API]], the [[Thrift (protocol)|Thrift]] API to generate a client in the language of the users' choosing (C++, Java, Python, PHP, Ruby, Erlang, Perl, Haskell, C#, Cocoa, Smalltalk, and OCaml), the [[command-line interface]], or browsed through the HDFS-UI [[Web application|webapp]] over [[HTTP]].

====Other Filesystems====
By May 2011, the list of supported filesystems included:
* HDFS: Hadoop's own rack-aware filesystem.&lt;ref&gt;[http://hadoop.apache.org/docs/stable/hdfs_user_guide.html#Rack+Awareness HDFS Users Guide - Rack Awareness]&lt;/ref&gt; This is designed to scale to tens of petabytes of storage and runs on top of the filesystems of the underlying [[operating system]]s.
* [[Amazon Simple Storage Service|Amazon S3]] filesystem. This is targeted at clusters hosted on the [[Amazon Elastic Compute Cloud]] server-on-demand infrastructure. There is no rack-awareness in this filesystem, as it is all remote.
* [[CloudStore]] (previously Kosmos Distributed File System), which is rack-aware.
* [[FTP]] Filesystem: this stores all its data on remotely accessible FTP servers.
* Read-only [[HTTP]] and [[HTTPS]] file systems.

Hadoop can work directly with any [[distributed file system]] that can be mounted by the underlying operating system simply by using a file:// URL; however, this comes at a price: the loss of locality. To reduce network traffic, Hadoop needs to know which servers are closest to the data; this is information that Hadoop-specific filesystem bridges can provide.

Out-of-the-box, this includes [[Amazon Simple Storage Service|Amazon S3]], and the [[CloudStore]] filestore, through s3:// and kfs:// URLs directly.

A number of third party filesystem bridges have also been written, none of which are currently in Hadoop distributions.

&lt;!-- add new entries at the end, please don't play re-ordering games or those of us with commit rights will change the Hadoop FS APIs to stop your code working.  --&gt;
* In 2009 [[IBM]] discussed running Hadoop over the [[IBM General Parallel File System]].&lt;ref&gt;{{cite web|url=http://www.usenix.org/events/hotcloud09/tech/full_papers/ananthanarayanan.pdf|title=, "Cloud analytics: Do we really need to reinvent the storage stack?"|date=2009-06|publisher=IBM}}&lt;/ref&gt; The source code was published in October 2009.&lt;ref&gt;{{cite web|url=https://issues.apache.org/jira/browse/HADOOP-6330|title=HADOOP-6330: Integrating IBM General Parallel File System implementation of Hadoop Filesystem interface|date=2009-10-23|publisher=IBM}}&lt;/ref&gt;
* In April 2010, [[Parascale]] published the source code to run Hadoop against the Parascale filesystem.&lt;ref&gt;{{cite web|url=https://issues.apache.org/jira/browse/HADOOP-6704|title=HADOOP-6704: add support for Parascale filesystem|date=2010-04-14|publisher=Parascale}}&lt;/ref&gt;
* In April 2010, [[Appistry]] released a Hadoop filesystem driver for use with its own CloudIQ Storage product.&lt;ref&gt;{{cite web|url=http://resources.appistry.com/community/wiki/display/ayrris46/Replace+HDFS+with+Storage|title=HDFS with CloudIQ Storage|date=2010-07-06|publisher=Appistry,Inc}}&lt;/ref&gt;
* In June 2010, [[HP]] discussed a location-aware [[IBRIX Fusion]] filesystem driver.&lt;ref&gt;{{cite web|url=http://www.slideshare.net/steve_l/high-availability-hadoop|title=High Availability Hadoop|date=2010-06-09|publisher=HP}}&lt;/ref&gt;
* In May 2011, [[MapR]] Technologies, Inc. announced the availability of an alternate filesystem for Hadoop, which replaced the HDFS file system with a full random-access read/write file system, with advanced features like snaphots and mirrors, and get rid of the [[single point of failure]] issue of the default HDFS NameNode.

===JobTracker and TaskTracker: the MapReduce engine===
{{main|MapReduce}}

Above the file systems comes the [[MapReduce]] engine, which consists of one ''JobTracker'', to which client applications submit MapReduce jobs. The JobTracker pushes work out to available ''TaskTracker'' nodes in the cluster, striving to keep the work as close to the data as possible. With a rack-aware filesystem, the JobTracker knows which node contains the data, and which other machines are nearby. If the work cannot be hosted on the actual node where the data resides, priority is given to nodes in the same rack. This reduces network traffic on the main backbone network. If a TaskTracker fails or times out, that part of the job is rescheduled. The TaskTracker on each node spawns off a separate [[Java Virtual Machine]] process to prevent the TaskTracker itself from failing if the running job crashes the JVM. A heartbeat is sent from the TaskTracker to the JobTracker every few minutes to check its status. The Job Tracker and TaskTracker status and information is exposed by [[Jetty (web server)|Jetty]] and can be viewed from a web browser.

If the JobTracker failed on Hadoop 0.20 or earlier, all ongoing work was lost. Hadoop version 0.21 added some checkpointing to this process; the JobTracker records what it is up to in the filesystem. When a JobTracker starts up, it looks for any such data, so that it can restart work from where it left off. In earlier versions of Hadoop, all active work was lost when a JobTracker restarted.

Known limitations of this approach are:
* The allocation of work to TaskTrackers is very simple. Every TaskTracker has a number of available ''slots'' (such as "4 slots"). Every active map or reduce task takes up one slot. The Job Tracker allocates work to the tracker nearest to the data with an available slot. There is no consideration of the current [[load (computing)|system load]] of the allocated machine, and hence its actual availability.
* If one TaskTracker is very slow, it can delay the entire MapReduce job - especially towards the end of a job, where everything can end up waiting for the slowest task.  With speculative execution enabled, however, a single task can be executed on multiple slave nodes.

====Scheduling====
By default Hadoop uses [[FIFO]], and optional 5 scheduling priorities to schedule jobs from a work queue.&lt;ref&gt;[http://hadoop.apache.org/common/docs/current/commands_manual.html#job job]{{dead link|date=May 2013}}&lt;/ref&gt; In version 0.19 the job scheduler was refactored out of the JobTracker, and added the ability to use an alternate scheduler (such as the ''Fair scheduler'' or the ''Capacity scheduler'').&lt;ref&gt;{{cite web|title=Refactor the scheduler out of the JobTracker|url=https://issues.apache.org/jira/browse/HADOOP-3412|work=Hadoop Common|publisher=Apache Software Foundation|accessdate=9 June 2012}}&lt;/ref&gt;

=====Fair scheduler=====
The fair scheduler was developed by [[Facebook]]. The goal of the fair scheduler is to provide fast response times for small jobs and [[Quality of service|QoS]] for production jobs. The fair scheduler has three basic concepts.&lt;ref&gt;[http://svn.apache.org/repos/asf/hadoop/mapreduce/trunk/src/contrib/fairscheduler/designdoc/fair_scheduler_design_doc.pdf]{{dead link|date=May 2013}} Hadoop Fair Scheduler Design Document&lt;/ref&gt;
# Jobs are grouped into [[Pool (computer science)|Pools]].
# Each pool is assigned a guaranteed minimum share.
# Excess capacity is split between jobs.

By default, jobs that are uncategorized go into a default pool. Pools have to specify the minimum number of map slots, reduce slots, and a limit on the number of running jobs.

=====Capacity scheduler=====
The capacity scheduler was developed by [[Yahoo]]. The capacity scheduler supports several features which are similar to the fair scheduler.&lt;ref&gt;[http://hadoop.apache.org/common/docs/r0.20.2/capacity_scheduler.html]{{dead link|date=May 2013}} Capacity Scheduler Guide&lt;/ref&gt;

* Jobs are submitted into queues.
* Queues are allocated a fraction of the total resource capacity.
* Free resources are allocated to queues beyond their total capacity.
* Within a queue a job with a high level of priority will have access to the queue's resources.

There is no [[preemption (computing)|preemption]] once a job is running.

===Other applications===
The HDFS filesystem is not restricted to MapReduce jobs. It can be used for other applications, many of which are under development at Apache. The list includes the [[HBase]] database, the [[Apache Mahout]] [[machine learning]] system, and the [[Apache Hive]] [[Data Warehouse]] system. Hadoop can in theory be used for any sort of work that is batch-oriented rather than real-time, that is very data-intensive, and able to work on pieces of the data in parallel. As of October 2009, commercial applications of Hadoop&lt;ref&gt;[http://www.dbms2.com/2009/10/10/enterprises-using-hadoo/ "How 30+ enterprises are using Hadoop", in DBMS2]&lt;/ref&gt; included:
* Log and/or clickstream analysis of various kinds
* Marketing analytics
* Machine learning and/or sophisticated data mining
* Image processing
* Processing of XML messages
* Web crawling and/or text processing
* General archiving, including of relational/tabular data, e.g. for compliance

==Prominent users==

===Yahoo!===
On February 19, 2008, [[Yahoo! Inc.]] launched what it claimed was the world's largest Hadoop production application. The Yahoo! Search Webmap is a Hadoop application that runs on a more than 10,000 [[Multi-core|core]] [[Linux]] [[Cluster (computing)|cluster]] and produces data that is used in every Yahoo! Web search query.&lt;ref&gt;[http://developer.yahoo.com/blogs/hadoop/2008/02/yahoo-worlds-largest-production-hadoop.html Yahoo! Launches World's Largest Hadoop Production Application (Hadoop and Distributed Computing at Yahoo!)]{{dead link|date=May 2013}}&lt;/ref&gt;

There are multiple Hadoop clusters at Yahoo! and no HDFS filesystems or MapReduce jobs are split across multiple datacenters. Every Hadoop cluster node bootstraps the Linux image, including the Hadoop distribution. Work that the clusters perform is known to include the index calculations for the Yahoo! search engine.

On June 10, 2009, Yahoo! made the source code of the version of Hadoop it runs in production available to the public.&lt;ref&gt;[http://developer.yahoo.com/hadoop/ Hadoop and Distributed Computing at Yahoo!]&lt;/ref&gt; Yahoo! contributes back all work it does on Hadoop to the open-source community. The company's developers also fix bugs and provide stability improvements internally, and release this patched source code so that other users may benefit from their effort.

===Facebook===
In 2010 [[Facebook]] claimed that they had the largest Hadoop cluster in the world with 21 [[Petabyte|PB]] of storage.&lt;ref&gt;{{cite web|url=http://hadoopblog.blogspot.com/2010/05/facebook-has-worlds-largest-hadoop.html |title=HDFS: Facebook has the world's largest Hadoop cluster! |publisher=Hadoopblog.blogspot.com |date=2010-05-09 |accessdate=2012-05-23}}&lt;/ref&gt; On July 27, 2011 they announced the data had grown to 30 PB.&lt;ref&gt;{{cite web|url=http://www.facebook.com/notes/paul-yang/moving-an-elephant-large-scale-hadoop-data-migration-at-facebook/10150246275318920 |title=Moving an Elephant: Large Scale Hadoop Data Migration at |publisher=Facebook |date= |accessdate=2012-05-23}}&lt;/ref&gt; On June 13, 2012 they announced the data had grown to 100 PB.&lt;ref&gt;{{cite web|url=http://www.facebook.com/notes/facebook-engineering/under-the-hood-hadoop-distributed-filesystem-reliability-with-namenode-and-avata/10150888759153920 |title=Under the Hood: Hadoop Distributed Filesystem reliability with Namenode and Avatarnode |publisher=Facebook |date= |accessdate=2012-09-13}}&lt;/ref&gt; On November 8, 2012 they announced the warehouse grows by roughly half a PB per day.&lt;ref&gt;{{cite web|url=https://www.facebook.com/notes/facebook-engineering/under-the-hood-scheduling-mapreduce-jobs-more-efficiently-with-corona/10151142560538920 |title=Under the Hood: Scheduling MapReduce jobs more efficiently with Corona |publisher=Facebook |date= |accessdate=2012-11-09}}&lt;/ref&gt;

===Other users===
Besides Facebook and Yahoo!, many other organizations are using Hadoop to run large distributed computations. Some of the notable users include:&lt;ref name="poweredby" /&gt;
&lt;!--
1. Please don't include any users which don't have articles and which aren't notable.
2. Please keep this list sorted alphabetically.
3. Try and include good references to the Hadoop use.
--&gt;
{{columns-list|2|
* [[Amazon.com]]
* [[Ancestry.com]]&lt;ref&gt;{{cite web|url=http://www.informationweek.com/big-data/news/software-platforms/how-ancestrycom-manages-big-data/240007049|title=How Ancestry.com Manages Big Data|accessdate=2012-12-26}}&lt;/ref&gt;
* [[Akamai Technologies|Akamai]]
* [[American Airlines]]
* [[AOL]]
* [[Apple Inc.|Apple]]&lt;ref&gt;{{cite web|url=http://www.theregister.co.uk/2010/12/01/apple_embraces_hadoop/|title=Apple Embraces Hadoop|accessdate=2011-04-14| archiveurl= http://web.archive.org/web/20110228005027/http://www.theregister.co.uk/2010/12/01/apple_embraces_hadoop/| archivedate= 28 February 2011 &lt;!--DASHBot--&gt;| deadurl= no}}&lt;/ref&gt;
* [[AVG (software)|AVG]]
* [[eBay]]
* [[Electronic Arts]]
* [[Ericsson]]
* [[Hortonworks]]
* [[Federal Reserve Board of Governors]]
* [[Foursquare]]
* [[Fox Interactive Media]]
* [[Google]]
* [[Hewlett-Packard]]
* [[IBM]]
* [[ImageShack]]
* [[Information Sciences Institute|ISI]]
* [[InMobi]]&lt;ref&gt;{{cite web|url=http://www.inmobi.com/inmobiblog/2011/10/07/inmobi-ranked-as-a-top-10-contributor-to-apache-hadoop |title=InMobi Ranked as a Top 10 Contributor to Apache Hadoop &amp;#124; Mobile Advertising -InMobi – Blog |publisher=Inmobi.com |date=2011-10-07 |accessdate=2013-04-05}}&lt;/ref&gt;
* [[Intuit]]
* [[Joost]]
* [[Last.fm]]
* [[LinkedIn]]&lt;ref&gt;{{cite web|url=http://data.linkedin.com/blog/2009/06/building-a-terabyte-scale-data-cycle-at-linkedin-with-hadoop-and-project-voldemort/
|title=Building a terabyte-scale data cycle at LinkedIn with Hadoop and Project Voldemort|accessdate=2013-05-28}}&lt;/ref&gt;
* [[Microsoft]]&lt;ref&gt;{{cite web|url=http://www.microsoft.com/Presspass/press/2011/oct11/10-12PASS1PR.mspx|title=Microsoft Expands Data Platform With SQL Server 2012, New Investments for Managing Any Data, Any Size, Anywhere|accessdate=2011-10-13}}&lt;/ref&gt;
* [[NetApp]]
* [[Netflix]]&lt;ref&gt;{{cite web|url=http://www.slideshare.net/evamtse/hive-user-group-presentation-from-netflix-3182010-3483386|title=Use Case Study of Hive/Hadoop|accessdate=2011-04-14}}&lt;/ref&gt;
* [[Ooyala]]
*[[Riot Games]]
*[[Spotify]]
*[[Qualtrics]]
* [[The New York Times]]
*[[SAP AG]]&lt;ref&gt;{{cite web|title=SAP UNVEILS UNIFIED STRATEGY FOR REAL-TIME DATA MANAGEMENT TO GROW DATABASE MARKET LEADERSHIP|url=http://www.sap.com/canada/about/press/press.epx?pressid=18621|publisher=SAP America|accessdate=9 June 2012}}&lt;/ref&gt;
* [[SAS Institute]]&lt;ref&gt;{{cite web|url=http://www.sas.com/news/preleases/hadoop.html|title=SAS® access to Hadoop links leading analytics, big data}}&lt;/ref&gt;
* [[StumbleUpon]]&lt;ref&gt;{{cite web|url=http://www.stumbleupon.com/devblog/hbase_at_stumbleupon/|title=HBase at StumbleUpon|accessdate=2010-06-26}}{{dead link|date=May 2013}}&lt;/ref&gt;
* [[Twitter]]
*[[Yodlee]]
}}

==Hadoop on Amazon EC2/S3 services==
It is possible to run Hadoop on [[Amazon Elastic Compute Cloud]] (EC2) and [[Amazon Simple Storage Service]] (S3).&lt;ref&gt;{{cite web|last=Varia|first=Jinesh (@jinman)|title=Taking Massive Distributed Computing to the Common Man - Hadoop on Amazon EC2/S3|url=http://aws.typepad.com/aws/2008/02/taking-massive.html|work=Amazon Web Services Blog|publisher=Amazon|accessdate=9 June 2012}}&lt;/ref&gt; As an example [[The New York Times]] used 100 Amazon EC2 instances and a Hadoop application to process 4&amp;nbsp;TB of raw image [[TIFF]] data (stored in S3) into 11 million finished [[PDF]]s in the space of 24 hours at a computation cost of about $240 (not including bandwidth).&lt;ref&gt;{{cite news| url=http://open.blogs.nytimes.com/2007/11/01/self-service-prorated-super-computing-fun/?scp=1&amp;sq=self%20service%20prorated&amp;st=cse | work=The New York Times | title=Self-service, Prorated Super Computing Fun! | first=Derek | last=Gottfrid | date=November 1, 2007 | accessdate=May 4, 2010}}&lt;/ref&gt;

There is support for the S3 filesystem in Hadoop distributions, and the Hadoop team generates EC2 machine images after every release. From a pure performance perspective, Hadoop on S3/EC2 is inefficient, as the S3 filesystem is remote and delays returning from every write operation until the data is guaranteed not to be lost. This removes the locality advantages of Hadoop, which schedules work near data to save on network load.

===Amazon Elastic MapReduce===
[http://aws.amazon.com/elasticmapreduce/ Elastic MapReduce (EMR)] was introduced by [[Amazon.com|Amazon]] in April 2009. Provisioning of the Hadoop cluster, running and terminating jobs, and handling data transfer between EC2 and S3 are automated by Elastic MapReduce. [[Apache Hive]], which is built on top of Hadoop for providing data warehouse services, is also offered in Elastic MapReduce.&lt;ref&gt;[http://s3.amazonaws.com/awsdocs/ElasticMapReduce/latest/emr-dg.pdf Amazon Elastic MapReduce Developer Guide]&lt;/ref&gt;

Support for using [http://aws.amazon.com/ec2/spot-instances/ Spot Instances] was later added in August 2011.&lt;ref&gt;[http://aws.amazon.com/about-aws/whats-new/2011/08/18/amazon-elastic-mapreduce-now-supports-spot-instances/ Amazon Elastic MapReduce Now Supports Spot Instances]&lt;/ref&gt; Elastic MapReduce is fault tolerant for slave failures,&lt;ref&gt;[http://aws.amazon.com/elasticmapreduce/faqs/#cluster-10 Amazon Elastic MapReduce FAQs]&lt;/ref&gt; and it is recommended to only run the Task Instance Group on spot instances to take advantage of the lower cost while maintaining availability.&lt;ref&gt;{{Youtube|id=66rfnFA0jpM|title=Using Spot Instances with EMR}}&lt;/ref&gt;

In June 2012, premium options for EMR were added which replace ordinary Hadoop with [[MapR]]'s M3 and M5 versions.  These options provide additional capabilities over and above what the default EMR offering provides.&lt;ref name="emr-announcement"&gt;{{cite web|url=http://aws.amazon.com/elasticmapreduce/mapr/|title=Amazon EMR with the MapR Distribution for Hadoop|accessdate=25 June 2011}}&lt;/ref&gt;
&lt;ref name="emr-announce"&gt;{{cite web|url=http://gigaom.com/cloud/amazon-taps-mapr-for-high-powered-elastic-mapreduce/|title=Amazon Taps MapR for High Powered Elastic Map Reduce|accessdate=25 June 2011}}&lt;/ref&gt;

==Industry support of academic clusters==
[[IBM]] and [[Google]] announced an initiative in 2007 to use Hadoop to support university courses in distributed computer programming.&lt;ref&gt;[http://www.google.com/intl/en/press/pressrel/20071008_ibm_univ.html Google Press Center: Google and IBM Announce University Initiative to Address Internet-Scale Computing Challenges]&lt;/ref&gt;

In 2008 this collaboration, the Academic Cloud Computing Initiative (ACCI), partnered with the [[National Science Foundation]] to provide grant funding to academic researchers interested in exploring large-data applications.  This resulted in the creation of the Cluster Exploratory (CLuE) program.&lt;ref&gt;[http://hadoopcommunity.wordpress.com/2009/09/29/nsf-google-ibm-clue-pi-meeting-october-5-2009/ NSF, Google, IBM form CLuE]&lt;/ref&gt;

==Running Hadoop in compute farm environments==
Hadoop can also be used in compute farms and [[high-performance computing]] environments. Instead of setting up a dedicated Hadoop cluster, an existing compute farm can be used if the resource manager of the cluster is aware of the Hadoop jobs, and thus Hadoop jobs can be scheduled like other jobs in the cluster.

===Grid Engine Integration===
Integration with [[Sun Grid Engine]] was released in 2008, and running Hadoop on [[Sun Grid]] (Sun's on-demand [[utility computing]] service) was possible.&lt;ref&gt;{{cite web|url=http://blogs.sun.com/ravee/entry/creating_hadoop_pe_under_sge|title=Creating Hadoop pe under SGE|date=2008-01-16|publisher=[[Sun Microsystems]]}}&lt;/ref&gt; In the initial implementation of the integration, the CPU-time scheduler has no knowledge of the locality of the data.  Unfortunately, this means that the processing is not always done on the same rack as the data; this was a key feature of the Hadoop Runtime. An improved integration with data-locality was announced during the Sun HPC Software Workshop '09.&lt;ref&gt;{{cite web|url=http://wikis.sun.com/display/SunHPC09/Sun+HPC+Software+Workshop+'09+Wiki|title=HDFS-Aware Scheduling With Grid Engine |date=2009-09-10|publisher=[[Sun Microsystems]]}}&lt;/ref&gt;

In 2008-2009 [[Sun Microsystems|Sun]] released the ''Hadoop Live CD'' [[OpenSolaris]] project, which allows running a fully functional Hadoop cluster using a [[live CD]].&lt;ref&gt;{{cite web|url=http://opensolaris.org/os/project/livehadoop/|title=OpenSolaris Project: Hadoop Live CD|date=2008-08-29|publisher=[[Sun Microsystems]]}}{{dead link|date=May 2013}}&lt;/ref&gt;  This distribution includes Hadoop 0.19 -as of April 2010 there has not been an updated release.

===Condor Integration===
The [[Condor High-Throughput Computing System]] integration was presented at the ''Condor Week'' conference in 2010.&lt;ref&gt;{{cite web|url=http://www.cs.wisc.edu/condor/CondorWeek2010/condor-presentations/thain-condor-hadoop.pdf|title=Condor integrated with Hadoop's Map Reduce|date=2010-04-15|publisher=[[University of Wisconsin–Madison]]}}&lt;/ref&gt;

==Commercially supported Hadoop-related products==
&lt;!--
Please don't go overboard in marketing here, as it will only be edited out. Use external citations rather than press releases, and be aware of wikipedia's rules regarding conflict of interest and external links, WP:COI and WP:EL specifically
--&gt;
There are a number of companies offering commercial implementations and/or providing support for Hadoop.&lt;ref&gt;[http://gigaom.com/cloud/why-we-need-more-hadoop-innovation/ Why the Pace of Hadoop Innovation Has to Pick Up]&lt;/ref&gt;
* [[GoPivotal|Pivotal]] offers Pivotal HD, a distribution of Hadoop that includes HAWQ, with 100% ANSI SQL compatibility.
* [[Cloudera]] offers CDH (Cloudera's Distribution including Apache Hadoop) and Cloudera Enterprise.&lt;ref&gt;[http://www.cloudera.com/hadoop/ Cloudera’s Distribution including Apache Hadoop]&lt;/ref&gt;
* [[IBM]] offers WebSphere eXtreme Scale (formerly ObjectGrid)&lt;ref&gt;{{cite web|url=https://www.ibm.com/developerworks/wikis/display/extremescale/Home |title=developerWorks: Wikis - WebSphere eXtreme Scale and DataPower XC10 Appliance Wiki - Home |publisher=Ibm.com |date= |accessdate=2013-04-05}}&lt;/ref&gt; which includes two styles of the HADOOP map-reduce pattern in its "agents" a.k.a. DataGrid APIs. Together with its scalable distributed data cache capability, it gives both map-reduce's ability to parallelize function and the ability to store plenty of data (in memory) for the function to quickly access. It's transactional and highly available, too.
* [[IBM]] offers InfoSphere BigInsights&lt;ref&gt;[http://www-01.ibm.com/software/data/infosphere/biginsights/ IBM InfoSphere BigInsights]&lt;/ref&gt; based on Hadoop in both a basic and enterprise edition.&lt;ref&gt;[http://www-01.ibm.com/cgi-bin/common/ssi/ssialias?infotype=an&amp;subtype=ca&amp;htmlfid=897/ENUS211-196&amp;appname=usn&amp;language=enus#h2-availx IBM InfoSphere BigInsights Enterprise Edition analytics platform enables new class of solutions for gaining rapid insight through large-scale analysis of diverse data]&lt;/ref&gt;
* [[Talend]] offers Talend Open Studio for Big Data,&lt;ref&gt;[http://www.talend.com/about-us/press/talend-empowers-apache-hadoop-community-talend-open-studio-big-data Talend Empowers Apache Hadoop Community with Talend Open Studio for Big Data]&lt;/ref&gt; released under the Apache Software License, that includes native support for Apache Hadoop.
* [[WANdisco]] offers WDD (WANdisco's Distribution including Apache Hadoop).&lt;ref&gt;[http://www.wandisco.com/hadoop/download WANdisco’s Distribution including Apache Hadoop]&lt;/ref&gt;
* [[Zettaset]] offers new version of its  Big Data Mgt Platform&lt;ref&gt;{{cite web|url=http://zettaset.com/pages/zettaset-launches-version-4-of-big-data-management-solution-delivering-new-stability-for-hadoop-systems-and-productivity-boosting-features |title=Zettaset Launches Version 4 of Big Data Management Solution, Delivering New Stability for Hadoop Systems and Productivity Boosting Features &amp;#124; &amp;#124; Zettaset.comZettaset.com |publisher=Zettaset.com |date=2011-12-06 |accessdate=2012-05-23}}&lt;/ref&gt; based on Hadoop. Zettaset's Big Data Platform delivers High Availability via NameNode Failover, a streamlined UI, network Time Protocol and built in security via Kerberos Authentication
* In May 2010, [[Pentaho]] announced support for Apache Hadoop allowing companies to access data integration and business analytics directly against Apache Hadoop based distributions of Hadoop.&lt;ref&gt;{{cite web|url=http://www.pentaho.com/press-room/releases/20100519_pentaho_harnesses_apache_hadoop_to_deliver_big_data_analytics/ |title=Pentaho Harnesses Apache Hadoop to Deliver Big Data Analytics |publisher=Pentaho.com |date=2010-05-19 |accessdate=2012-07-04}}&lt;/ref&gt; In January 2012, Pentaho announced they made their big data integration capabilities freely under open source, and moved the entire Pentaho Kettle (data integration engine) project from the LGPL license to the Apache License.&lt;ref&gt;{{cite web|url=http://www.pentaho.com/press-room/releases/48/pentaho-open-sources-big-data-capabilities-to-further-fuel-widespread-adoption/ |title=Pentaho Open Sources Big Data Capabilities to Further Fuel Widespread Adoption |publisher=Pentaho.com |date=2012-01-30 |accessdate=2012-07-04}}&lt;/ref&gt;
* In March 2011, [[Platform Computing]] announced support for the Hadoop MapReduce API in its [[Symphony (software)|Symphony]] software.&lt;ref&gt;[http://www.platform.com/press-releases/2011/platform-computing-announces-support-for-mapreduce Platform Computing Announces Support for MapReduce]&lt;/ref&gt;
* In May 2011, [[MapR]] Technologies, Inc. announced the availability of their distributed filesystem and MapReduce engine, the MapR Distribution for Apache Hadoop.&lt;ref&gt;[http://www.mapr.com/ MapR Distribution for Apache Hadoop]&lt;/ref&gt;  The MapR product includes most Hadoop eco-system components and adds capabilities such as snapshots, mirrors, NFS access and full read-write file semantics.&lt;ref&gt;[http://mapr.com/products/mapr-editions/m5-edition.html ]{{dead link|date=May 2012}}&lt;/ref&gt;  MapR's distribution was selected by Amazon to provide premium versions of the Elastic Map Reduce (EMR) service.&lt;ref name="emr-announce"/&gt;
* [[Silicon Graphics International]] offers Hadoop optimized solutions based on the SGI Rackable and CloudRack server lines with implementation services.&lt;ref&gt;[http://www.sgi.com/go/hadoop/index.html Hadoop optimized solutions from SGI]&lt;/ref&gt;
* [[EMC Corporation|EMC]] released ''EMC Greenplum Community Edition'' and ''EMC Greenplum HD Enterprise Edition'' in May 2011. The community edition, with optional for-fee technical support, consists of Hadoop, HDFS, [[HBase]], [[Apache Hive|Hive]], and the [[Apache ZooKeeper|ZooKeeper]] configuration service. The enterprise edition is an offering based on the [[MapR]] product, and offers proprietary features such as snapshots and wide area replication.&lt;ref&gt;[http://www.greenplum.com/products/greenplum-hd Greenplum HD: Enterprise-Ready Apache Hadoop]&lt;/ref&gt;
* In June 2011, Yahoo! and Benchmark Capital formed ''[[Hortonworks]] Inc.'', whose focus is on making Hadoop more robust and easier to install, manage and use for enterprise users.&lt;ref&gt;[http://investor.yahoo.net/releasedetail.cfm?ReleaseID=587794 Yahoo! and Benchmark Capital to Form Hortonworks to Increase Investment in Hadoop Technology and Accelerate Innovation and Adoption]&lt;/ref&gt;
* Google added ''AppEngine-MapReduce'' to support running Hadoop 0.20 programs on [[Google App Engine]].&lt;ref&gt;[http://code.google.com/p/appengine-mapreduce/ appengine-mapreduce - Google App Engine API for running MapReduce jobs]&lt;/ref&gt;&lt;ref&gt;{{Youtube|id=EIxelKcyCC0|title=Google I/O 2011: App Engine MapReduce}}&lt;/ref&gt;
* In Oct 2011, [[Oracle Corporation|Oracle]] announced the ''Big Data Appliance'', which integrates Cloudera's Distribution Including Hadoop ([[Cloudera's Distribution Including Apache Hadoop|CDH]]), [[Oracle Enterprise Linux]], the [[R programming language]], and a [[NoSQL]] database with the [[Exadata]] hardware.&lt;ref&gt;[http://www.oracle.com/us/corporate/press/512001 Oracle Unveils the Oracle Big Data Appliance]&lt;/ref&gt;&lt;ref&gt;[http://www.theregister.co.uk/2011/10/03/oracle_big_data_appliance/ Oracle rolls its own NoSQL and Hadoop]&lt;/ref&gt;
* OceanSync Hadoop Management and Visualization Software allows users to control, monitor, and visualize all aspects of a Hadoop cluster including data analytic workflow management and output data processing visualization. The package is offered in three versions, OceanSync Free Desktop Edition, OceanSync Enterprise Edition with Visualization, and OceanSync Mobile for iPhone/Android devices, by Dovestech.&lt;ref&gt;[http://www.oceansync.com/ OceanSync.com Hadoop Management]&lt;/ref&gt;
* Grand Logic's JobServer&lt;ref&gt;{{cite web|url=http://www.grandlogic.com/content/html_docs/js_features.shtml |title=Grand Logic |publisher=Grand Logic |date= |accessdate=2012-05-23}}&lt;/ref&gt; product allows developers and admins to deploy, manage and monitor their Hadoop infrastructure, with support for Hadoop job processing and HDFS file/content management.
* [[Dell]] added Pentaho Business Analytics to the Dell Apache Hadoop solution for big data analytics which consists of Dell servers, Dell networking components, Dell's Crowbar cloud deployment framework open source software, and [[Cloudera]] Distribution including Apache Hadoop (CDH).&lt;ref&gt;{{cite web|url=http://nucleusresearch.com/research/notes-and-reports/dell-adds-pentaho-to-the-dell-apache-hadoop-solution/l |title=Dell adds Pentaho to the Dell Apache Hadoop solution, Nucleus Research |date= |accessdate=2012-06-30}}&lt;/ref&gt;
* [[Microsoft]] is offering a developer preview of HDInsight which is a 100% Apache compatible Hadoop distribution.&lt;ref&gt;{{cite web|url=http://www.microsoft.com/en-us/sqlserver/solutions-technologies/business-intelligence/big-data.aspx |title=Microsoft Big Data|accessdate=2013-02-14}}&lt;/ref&gt;
* In February 2013, [[Intel]] has released its own Hadoop distribution that takes advantage of capabilities in Intel Xeon chips, such as its processor instructions for accelerating AES encryption.&lt;ref&gt;{{cite web|url=http://www.infoworld.com/d/big-data/intel-releases-hadoop-distribution-primed-its-own-chips-213546 |title=Intel releases Hadoop distribution primed for its own chips|accessdate=2013-04-12}}&lt;/ref&gt;
* [[Splunk]] offers a Hadoop integration product called Hadoop Connect &lt;ref&gt;{{cite web|url=http://blogs.splunk.com/2013/02/24/splunk-hadoop-connect-1-1-opening-the-door-to-mapr-now-available-on-all-hadoop-distributions |title=Splunk Hadoop Connect now available on all Hadoop Platforms|accessdate=2013-04-14}}&lt;/ref&gt; which is certified on [[MapR]], [[Cloudera]], [[Hortonworks]], and Apache Hadoop. This integration allows users to search Hadoop data from Splunk and import data from Hadoop into Splunk and vice versa. 
* In January 2012, EMC Isilon announced support for HDFS in it's OneFS clustered filesystem.&lt;ref&gt;{{cite web |url=http://www.emc.com/about/news/press/2012/20120131-01.htm |title=EMC Isilon is Industry's First Scale-Out NAS System with Native Hadoop Support |deadurl=no |accessdate=2013-06-26}}&lt;/ref&gt;

===ASF's view on the use of "Hadoop" in product names===
The Apache Software Foundation has stated that only software officially released by the Apache Hadoop Project can be called ''Apache Hadoop'' or ''Distributions of Apache Hadoop''.&lt;ref&gt;[http://wiki.apache.org/hadoop/Defining%20Hadoop Defining Hadoop]&lt;/ref&gt; The naming of products and derivative works from other vendors and the term "compatible" are somewhat controversial within the Hadoop developer community.&lt;ref&gt;[http://mail-archives.apache.org/mod_mbox/hadoop-general/201105.mbox/%3C4DC91392.2010308@apache.org%3E Defining Hadoop Compatibility: revisited]&lt;/ref&gt;

==Papers==
Some papers influenced the birth and growth of Hadoop and big data processing. Here is a partial list:
* 2004 [http://usenix.org/events/osdi04/tech/full_papers/dean/dean.pdf MapReduce: Simplified Data Processing on Large Clusters] by Jeffrey Dean and Sanjay Ghemawat from Google Lab. This paper inspired [[Doug Cutting]] to develop an open-source implementation of the Map-Reduce framework. He named it [http://hadoop.apache.org/ Hadoop], after his son's toy elephant.
* 2005 [http://www.eecs.berkeley.edu/~franklin/Papers/dataspaceSR.pdf From Databases to Dataspaces: A New Abstraction for Information Management], the authors highlight the need for storage systems to accept all data formats and to provide APIs for data access that evolve based on the storage system’s understanding of the data.
* 2006 [http://static.googleusercontent.com/external_content/untrusted_dlcp/research.google.com/en/us/archive/bigtable-osdi06.pdf Bigtable: A Distributed Storage System for Structured Data] from Google Lab.
* 2008 [http://www.vldb.org/pvldb/1/1454211.pdf H-store: a high-performance, distributed main memory transaction processing system]
* 2009 [http://db.cs.berkeley.edu/jmh/papers/madskills-032009.pdf MAD Skills: New Analysis Practices for Big Data]
* 2011 [http://borthakur.com/ftp/RealtimeHadoopSigmod2011.pdf Apache Hadoop Goes Realtime at Facebook]

==See also==
{{Portal|Free software}}
* [[Pentaho]] - Open source data integration (Kettle), analytics, reporting, visualization and predictive analytics directly from Hadoop nodes
* [[Nutch]] - An effort to build an open source search engine based on [[Lucene]] and Hadoop, also created by Doug Cutting
* [[Datameer]] Analytics Solution (DAS) - data source integration, storage, analytics engine and visualization
* [[Talend]] - An open source integration software
* [[Apache Accumulo]] - Secure Big Table
* [[HBase]] - [[BigTable]]-model database
* [[Hypertable]] - HBase alternative
* [[MapReduce]] - Hadoop's fundamental data filtering algorithm
* [[Apache Mahout]] - Machine Learning algorithms implemented on Hadoop
* [[Apache Cassandra]] - A column-oriented database that supports access from Hadoop
* [[Apache CouchDB]] is a database that uses JSON for documents, JavaScript for MapReduce queries, and regular HTTP for an API
* [[HPCC]] - [[LexisNexis]] Risk Solutions High Performance Computing Cluster
* [[Sector/Sphere]] - Open source distributed storage and processing
* [[Cloud computing]]
* [[Big data]]
* [[Data Intensive Computing]]

==References==
{{Reflist|2}}

==Bibliography==
{{Refbegin}}
*{{Cite book
| first1    = Chuck
| last1     = Lam
| date      = July 28, 2010
| title     = Hadoop in Action
| edition   = 1st
| publisher = [[Manning Publications]]
| page     = 325
| isbn      = 1-935182-19-6
| url       =
}}
*{{Cite book
| first1    = Jason
| last1     = Venner
| date      = June 22, 2009
| title     = Pro Hadoop
| edition   = 1st
| publisher = [[Apress]]
| page     = 440
| isbn      = 1-4302-1942-4
| url       = http://www.apress.com/book/view/1430219424
}}
*{{Cite book
| first1    = Tom
| last1     = White
| date      = June 16, 2009
| title     = Hadoop: The Definitive Guide
| edition   = 1st
| publisher = [[O'Reilly Media]]
| page     = 524
| isbn      = 0-596-52197-9
| url       = http://oreilly.com/catalog/9780596521974
}}
{{Refend}}

==External links==
* {{Official website|http://hadoop.apache.org/|name=Official Hadoop Homepage}}
* {{Official website|http://wiki.apache.org/hadoop/|name=Official Hadoop Wiki}}
* [http://10kloc.wordpress.com/2013/01/20/an-introduction-to-apache-hadoop-hdfs-mapreduce Introduction to Apache Hadoop]
* [http://www.stanford.edu/class/ee380/Abstracts/111116.html Introducing Apache Hadoop: The Modern Data Operating System] — lecture given at [[Stanford University]] by Co-Founder and CTO of Cloudera, Amr Awadallah ([http://ee380.stanford.edu/cgi-bin/videologger.php?target=111116-ee380-300.asx video archive]).
{{apache}}

[[Category:Hadoop| ]]
[[Category:Free software programmed in Java]]
[[Category:Free system software]]
[[Category:Distributed file systems]]
[[Category:Cloud computing]]
[[Category:Cloud infrastructure]]
[[Category:Free software for cloud computing]]</text>
      <sha1>cd7kblte9m2sgyyuuy6istd88d268h2</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>