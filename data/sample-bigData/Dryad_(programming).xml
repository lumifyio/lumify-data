<?xml version="1.0" ?><page xmlns="http://www.mediawiki.org/xml/export-0.8/" version="0.8">
    <title>Dryad (programming)</title>
    <ns>0</ns>
    <id>14555271</id>
    <revision>
      <id>562668451</id>
      <parentid>557797252</parentid>
      <timestamp>2013-07-03T09:33:36Z</timestamp>
      <contributor>
        <username>ChristopheS</username>
        <id>7786347</id>
      </contributor>
      <minor></minor>
      <comment>Hadoop was redirect</comment>
      <text xml:space="preserve">'''Dryad''' was a research project at [[Microsoft Research]] for a general purpose runtime for execution of [[data parallel]] applications. Microsoft made several preview releases of this technology available as add-ons to Windows HPC Server 2008 R2.   However, in October 2011, Microsoft discontinued active development on Dryad, shifting focus to the [[Apache Hadoop]] framework. &lt;ref&gt;{{cite web|last=Patee|first=Don|title=Announcing the Windows Azure HPC Scheduler and HPC Pack 2008 R2 Service Pack 3 releases!|url=http://blogs.technet.com/b/windowshpc/archive/2011/11/11/hpc-pack-2008-r2-sp3-and-windows-azure-hpc-scheduler-released.aspx|publisher=Microsoft|accessdate=5/31/2013}}&lt;/ref&gt;&lt;ref&gt;{{cite web|last=Foley|first=Mary Joe|title=Microsoft drops Dryad; puts its big-data bets on Hadoop|url=http://www.zdnet.com/blog/microsoft/microsoft-drops-dryad-puts-its-big-data-bets-on-hadoop/11226|publisher=ZDNet|accessdate=5/31/2013}}&lt;/ref&gt;&lt;ref&gt;{{cite web|last=Henschen|first=Doug|title=Microsoft Ditches Dryad, Focuses On Hadoop|url=http://www.informationweek.com/software/information-management/microsoft-ditches-dryad-focuses-on-hadoo/231903267|publisher=Information Week|accessdate=5/31/2013}}&lt;/ref&gt;

An application written for Dryad is modeled as a [[directed acyclic graph]] (DAG). The DAG defines the [[dataflow]] of the application, and the vertices of the graph defines the operations that are to be performed on the data. The "computational vertices" are written using sequential constructs, devoid of any [[concurrent computing | concurrency]] or [[mutual exclusion]] semantics. The Dryad runtime parallelizes the dataflow graph by distributing the computational vertices across various execution engines (which can be multiple processor cores on the same computer or different physical computers connected by a network, as in a [[cluster computing | cluster]]). Scheduling of the computational vertices on the available hardware is handled by the Dryad runtime, without any explicit intervention by the developer of the application or administrator of the network. The flow of data between one computational vertex to another is implemented by using communication "channels" between the vertices, which in physical implementation is realized by [[TCP/IP]] streams, [[shared memory]] or temporary [[file (computing)|files]]. A stream is used at runtime to transport a finite number of [[data structure|structured]] ''Items''. 

Dryad defines a [[domain-specific language]], which is implemented via a [[C++]] library, that is used to create and model a Dryad execution graph. Computational vertices are written using standard C++ constructs. To make them accessible to the Dryad runtime, they must be encapsulated in a [[class (computing) | class]] that [[inheritance | inherits]] from the &lt;code&gt;GraphNode&lt;/code&gt; base class. The graph is defined by adding edges; edges are added by using a composition operator (defined by Dryad) that connects two graphs (or two nodes of a graph) with an edge. [[Managed code]] wrappers for the Dryad [[API]] can also be written.

There exist several high-level language compilers which use Dryad as a runtime; examples include [[Scope (programming language)|Scope]] (Structured Computations Optimized for Parallel Execution) and DryadLINQ.


==References==
{{Reflist}}
*{{cite web | url = http://research.microsoft.com/en-us/projects/dryadlinq/dryadlinq.pdf | title = DryadLINQ: A System for General-Purpose Distributed Data-Parallel Computing Using a High-Level Language | publisher = [[Microsoft Research]] | accessdate = 2009-01-21 }}
*{{cite web | url = http://research.microsoft.com/en-us/projects/dryadlinq/eurosys07.pdf | title = Dryad: Distributed Data-Parallel Programs from Sequential Building Blocks | publisher = [[Microsoft Research]] | accessdate = 2007-12-04 }}
*{{cite web | url = http://research.microsoft.com/en-us/um/people/jrzhou/pub/Scope.pdf | title = SCOPE: Easy and Efficient Parallel Processing of Massive Data Sets | publisher = [[Microsoft Research]] | accessdate = 2009-01-21 }}

==External links==
*[http://blogs.zdnet.com/microsoft/?p=18 Dryad: Programming the Data Center]
*[http://research.microsoft.com/research/sv/dryad/  Dryad Home]
*[http://www.youtube.com/watch?v=WPhE5JCP2Ak  Video of Michael Isard explaining Dryad at Google]
{{Microsoft Research}}


[[Category:Microsoft Research]]
[[Category:Distributed computing architecture]]
[[Category:Concurrent programming libraries]]</text>
      <sha1>3gl67uuaidzrgudhyejeongliyt1ap8</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>