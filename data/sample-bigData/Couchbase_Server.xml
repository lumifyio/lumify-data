<?xml version="1.0" ?><page xmlns="http://www.mediawiki.org/xml/export-0.8/" version="0.8">
    <title>Couchbase Server</title>
    <ns>0</ns>
    <id>28366048</id>
    <revision>
      <id>561170721</id>
      <parentid>558261896</parentid>
      <timestamp>2013-06-23T07:45:15Z</timestamp>
      <contributor>
        <username>WOSlinker</username>
        <id>3138265</id>
      </contributor>
      <comment>update image (not a thumbnail anymore)</comment>
      <text xml:space="preserve">{{Infobox software
| name                   = Couchbase Server
| logo                   = 
| screenshot             = Couchbase Server Screenshot.jpg
| caption                =
| developer              = [[Couchbase, Inc.]]
| latest release version = 2.0.1
| latest release date    = {{release date|2013|03|13}}
| operating system       = [[Cross-platform]]
| programming language   = [[C++]], [[Erlang (programming language)|Erlang]], [[C (programming language)|C]]&lt;ref&gt;{{cite web|author=Posted January 8, 2013 1:00 PM |url=http://damienkatz.net/2013/01/the_unreasonable_effectiveness_of_c.html |title=The Unreasonable Effectiveness of C |publisher=Damien Katz |date=2013-01-08 |accessdate=2013-06-04}}&lt;/ref&gt;
| genre                  = distributed key-value / document database system
| license                = [[Apache License]] (Community edition), [[Proprietary software|Proprietary]] (Enterprise edition)
| website                = {{URL|http://www.couchbase.com/}}
}}

'''Couchbase Server''', originally known as '''Membase''', is an [[open source]], distributed ([[shared-nothing architecture]]) [[NoSQL]] [[document-oriented database]] that is optimized for interactive applications.  These applications must service many concurrent users; creating, storing, retrieving, aggregating, manipulating and presenting data. In support of these kinds of application needs, Couchbase is designed to provide easy-to-scale key-value or document access with low latency and high sustained throughput. It is designed to be [[Cluster (computing)|clustered]] from a single machine to very large scale deployments. 

For those familiar with [[memcached]], Couchbase Server provides on-the-wire client protocol compatibility,&lt;ref&gt;{{cite web|url=http://code.google.com/p/memcached/wiki/NewProtocols |title=NewProtocols - memcached - Klingon - Memcached - Google Project Hosting |publisher=Code.google.com |date=2011-08-22 |accessdate=2013-06-04}}&lt;/ref&gt; but is designed to add disk [[Persistence (computer science)|persistence]], [[data replication]], live cluster reconfiguration, rebalancing and [[multitenancy]] with [[Partition (database)|data partitioning]].

Companies like [[AOL]], [[Cisco]], [[Concur]], [[LinkedIn]], [[Orbitz]],&lt;ref&gt;{{cite web|url=http://gigaom.com/cloud/balancing-oracle-and-open-source-at-orbitz/|title=Balancing Oracle and open source at Orbitz|publisher=[[GigaOM]]|date=21 September 2012}}&lt;/ref&gt; [[Salesforce.com]], [[Shuffle Master]], [[Zynga]], [[NHN Corporation]] and hundreds of others around the world use Couchbase Server for their interactive web and mobile applications.

In the parlance of Eric Brewer’s [[CAP theorem]], Couchbase is a CP type system.

==Product History==
Membase was developed by several leaders of the [[memcached]] project, who had founded a company, NorthScale, to develop a [[key-value store]] with the simplicity, speed, and scalability of memcached, but also provided the storage, persistence and querying capabilities of a database. The original membase source code was contributed by NorthScale, and project co-sponsors [[Zynga]] and [[NHN (corporation)|NHN]] to a new project on membase.org in June 2010.

On February 8, 2011, the Membase project founders and Membase, Inc. announced a merger with CouchOne (a company with many of the principal players behind [[CouchDB]]) with an associated project merger.  The merged company was called [[Couchbase, Inc.]] In January 2012, Couchbase released Couchbase Server 1.8. On December 2012, Couchbase Server 2.0 was released, with new features including a new [[JSON]] document store, indexing and querying, incremental [[MapReduce]] and cross datacenter [[Replication (computing)|replication]].&lt;ref&gt;{{cite web|url=http://www.zdnet.com/couchbase-2-0-released-implements-json-document-store-7000008649/|title=Couchbase 2.0 released; implements JSON document store|publisher=[[ZDNet]]|date=12 December 2012}}&lt;/ref&gt;

==High-Level Architecture==
Every Couchbase node is architecturally identical consisting of a data manager and cluster manager component. 
&lt;!-- Deleted image removed: [[File:Couchbase node architecture.png|thumbnail|Couchbase server node architecture]] --&gt;

===Cluster Manager===
The '''cluster manager''' supervises the configuration and behavior of all the servers in a Couchbase cluster. It configures and supervises internode behavior like managing replication streams and rebalancing operations. It also provides metric aggregation and consensus functions for the cluster, and a RESTful cluster management API. The cluster manager is built atop Erlang/OTP, a proven environment for building and operating fault-tolerant distributed systems.

====Replication and failover====
* Multi-model replication support: Peer-to-peer replication support with underlying architecture supporting master-slave replication.
* Configurable replication count: Balance resource utilization with availability requirements
* High-speed failover: Fast failover to replicated items based upon request

===Data Manager===
The '''data manager''' is responsible for storing and retrieving documents in response to data operations from applications. 

* Asynchronously writes data to disk after acknowledging write to client.  In version 1.7 and later, applications can ensure data is synced to more than one server, while disk writes are still asynchronous.
** Tunables to define item ages that affect when data is persisted.
* Supports working set greater than a memory quota per "node" or "bucket"
** Tunables to affect how max memory and migration from main-memory to disk is handled.
* Configurable “tap” interface: External systems can subscribe to filtered data streams supporting, for example, [[full text search]] indexing, [[data analytics]] or archiving.&lt;ref&gt;[http://blog.couchbase.com/want-know-what-your-memcached-servers-are-doing-tap-them Want to know what your memcached servers are doing? Tap them.]&lt;/ref&gt;

====Data Format====
A document is the most basic unit of data manipulation in Couchbase Server. Documents are stored in JSON document format with no predefined schemas.

====Object Managed Cache====
Couchbase Server includes a built-in multithreaded object-managed cache that implements memcached compatible APIs such as get, set, delete, append, prepend etc. The object-managed cache provides consistent sub-millisecond latency for read and writes operations, independent of the load or size of the data accessed.

====Storage Engine Design====
Couchbase Server has a tail-append storage design that is immune to data corruption, OOM killers or sudden loss of power. Data is written to the data file in an append-only manner, which enables Couchbase to do mostly sequential writes for update, and provide an optimized access patterns for disk I/O.

== Performance ==
[[Cisco]] published a benchmark that measures the latency and throughput of Couchbase Server &lt;ref&gt;{{cite web|url=http://www.cisco.com/en/US/prod/collateral/switches/ps9441/ps9670/white_paper_c11-708169.pdf |title=Cisco and Solarflare Achieve Dramatic Latency Reduction for Interactive Web Applications with Couchbase, a NoSQL Database |publisher=[[Cisco Systems]] |date= |accessdate=2013-06-04}}&lt;/ref&gt; with a mixed workload. Another performance benchmark done by [[Altoros]], compares Couchbase Server with other NoSQL database solutions.&lt;ref&gt;{{cite web|url=http://www.couchbase.com/presentations/benchmarking-couchbase |title=Benchmarking |publisher=Couchbase |date=2013-04-09 |accessdate=2013-06-04}}&lt;/ref&gt; 

==See also==
* [[Memcached]]
* [[MemcacheDB]]
* [[NoSQL (concept)|NoSQL]]

== Licensing and Support ==

Couchbase Server is a packaged version of Couchbase's open source technology and is available in two variants: a Community Edition without recent bug fixes as [[Open Source]] (Apache 2.0 license) distribution, and an Enterprise Edition for commercial use.&lt;ref&gt;{{cite web|url=http://www.couchbase.com/couchbase-server/editions|title=Couchbase Server Editions|publisher=[[Couchbase]]}}&lt;/ref&gt; 

Couchbase Server builds are available for Ubuntu, RedHat, Windows and Mac OSX platforms.

==Bibliography==
{{cite book |last=Brown |first=MC |editor-first=|editor-last=|title=Getting Started with Couchbase Server (1st edition) |publisher=O'Reilly Media |date=June 22, 2012 |page=88 | isbn=978-1449331061}}

==References==
{{Reflist}}

==External links==
* [http://www.couchbase.com Couchbase Official Couchbase Website]
* [https://twitter.com/couchbase/ Couchbase Twitter page]
* [http://blog.couchbase.com/ Couchbase Blog page]
* [http://www.couchbase.com/events Couchbase Events page]
* [http://www.couchbase.com/develop Couchbase Developer SDK's]
* [http://www.couchbase.com/docs/ Couchbase Documentation]

[[Category:Free database management systems]]
[[Category:Distributed computing architecture]]
[[Category:NoSQL]]
[[Category:Cross-platform software]]
[[Category:Structured storage]]</text>
      <sha1>psfivhtefiuyu7ojdpzpoz8njeae67d</sha1>
      <model>wikitext</model>
      <format>text/x-wiki</format>
    </revision>
  </page>